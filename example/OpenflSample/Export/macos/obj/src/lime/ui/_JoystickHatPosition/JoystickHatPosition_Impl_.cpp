// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_lime_ui__JoystickHatPosition_JoystickHatPosition_Impl_
#include <lime/ui/_JoystickHatPosition/JoystickHatPosition_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_21__new,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","_new",0x06d06a8b,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_._new","lime/ui/JoystickHatPosition.hx",21,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_28_get_center,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","get_center",0x8bc72648,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.get_center","lime/ui/JoystickHatPosition.hx",28,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_32_set_center,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","set_center",0x8f44c4bc,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.set_center","lime/ui/JoystickHatPosition.hx",32,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_43_get_down,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","get_down",0xf47ce615,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.get_down","lime/ui/JoystickHatPosition.hx",43,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_47_set_down,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","set_down",0xa2da3f89,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.set_down","lime/ui/JoystickHatPosition.hx",47,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_62_get_left,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","get_left",0xf9bef5ba,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.get_left","lime/ui/JoystickHatPosition.hx",62,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_66_set_left,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","set_left",0xa81c4f2e,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.set_left","lime/ui/JoystickHatPosition.hx",66,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_81_get_right,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","get_right",0x04651ac9,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.get_right","lime/ui/JoystickHatPosition.hx",81,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_85_set_right,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","set_right",0xe7b606d5,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.set_right","lime/ui/JoystickHatPosition.hx",85,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_100_get_up,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","get_up",0xb9c0714e,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.get_up","lime/ui/JoystickHatPosition.hx",100,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_104_set_up,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","set_up",0x8608c5c2,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.set_up","lime/ui/JoystickHatPosition.hx",104,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_5_boot,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","boot",0x08ccd95c,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.boot","lime/ui/JoystickHatPosition.hx",5,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_6_boot,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","boot",0x08ccd95c,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.boot","lime/ui/JoystickHatPosition.hx",6,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_7_boot,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","boot",0x08ccd95c,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.boot","lime/ui/JoystickHatPosition.hx",7,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_8_boot,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","boot",0x08ccd95c,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.boot","lime/ui/JoystickHatPosition.hx",8,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_9_boot,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","boot",0x08ccd95c,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.boot","lime/ui/JoystickHatPosition.hx",9,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_10_boot,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","boot",0x08ccd95c,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.boot","lime/ui/JoystickHatPosition.hx",10,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_11_boot,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","boot",0x08ccd95c,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.boot","lime/ui/JoystickHatPosition.hx",11,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_12_boot,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","boot",0x08ccd95c,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.boot","lime/ui/JoystickHatPosition.hx",12,0x4bf9acf7)
HX_LOCAL_STACK_FRAME(_hx_pos_fa6786736437d0c1_13_boot,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_","boot",0x08ccd95c,"lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_.boot","lime/ui/JoystickHatPosition.hx",13,0x4bf9acf7)
namespace lime{
namespace ui{
namespace _JoystickHatPosition{

void JoystickHatPosition_Impl__obj::__construct() { }

Dynamic JoystickHatPosition_Impl__obj::__CreateEmpty() { return new JoystickHatPosition_Impl__obj; }

void *JoystickHatPosition_Impl__obj::_hx_vtable = 0;

Dynamic JoystickHatPosition_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< JoystickHatPosition_Impl__obj > _hx_result = new JoystickHatPosition_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool JoystickHatPosition_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x14f1ec9e;
}

int JoystickHatPosition_Impl__obj::CENTER;

int JoystickHatPosition_Impl__obj::DOWN;

int JoystickHatPosition_Impl__obj::LEFT;

int JoystickHatPosition_Impl__obj::RIGHT;

int JoystickHatPosition_Impl__obj::UP;

int JoystickHatPosition_Impl__obj::DOWN_LEFT;

int JoystickHatPosition_Impl__obj::DOWN_RIGHT;

int JoystickHatPosition_Impl__obj::UP_LEFT;

int JoystickHatPosition_Impl__obj::UP_RIGHT;

int JoystickHatPosition_Impl__obj::_new(int value){
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_21__new)
HXDLIN(  21)		int this1 = value;
HXDLIN(  21)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(JoystickHatPosition_Impl__obj,_new,return )

bool JoystickHatPosition_Impl__obj::get_center(int this1){
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_28_get_center)
HXDLIN(  28)		return (this1 == 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(JoystickHatPosition_Impl__obj,get_center,return )

bool JoystickHatPosition_Impl__obj::set_center(int this1,bool value){
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_32_set_center)
HXLINE(  33)		if (value) {
HXLINE(  35)			this1 = 0;
            		}
HXLINE(  38)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(JoystickHatPosition_Impl__obj,set_center,return )

bool JoystickHatPosition_Impl__obj::get_down(int this1){
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_43_get_down)
HXDLIN(  43)		return ((this1 & 4) > 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(JoystickHatPosition_Impl__obj,get_down,return )

bool JoystickHatPosition_Impl__obj::set_down(int this1,bool value){
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_47_set_down)
HXLINE(  48)		if (value) {
HXLINE(  50)			this1 = (this1 | 4);
            		}
            		else {
HXLINE(  54)			this1 = (this1 & (268435455 - 4));
            		}
HXLINE(  57)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(JoystickHatPosition_Impl__obj,set_down,return )

bool JoystickHatPosition_Impl__obj::get_left(int this1){
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_62_get_left)
HXDLIN(  62)		return ((this1 & 8) > 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(JoystickHatPosition_Impl__obj,get_left,return )

bool JoystickHatPosition_Impl__obj::set_left(int this1,bool value){
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_66_set_left)
HXLINE(  67)		if (value) {
HXLINE(  69)			this1 = (this1 | 8);
            		}
            		else {
HXLINE(  73)			this1 = (this1 & (268435455 - 8));
            		}
HXLINE(  76)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(JoystickHatPosition_Impl__obj,set_left,return )

bool JoystickHatPosition_Impl__obj::get_right(int this1){
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_81_get_right)
HXDLIN(  81)		return ((this1 & 2) > 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(JoystickHatPosition_Impl__obj,get_right,return )

bool JoystickHatPosition_Impl__obj::set_right(int this1,bool value){
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_85_set_right)
HXLINE(  86)		if (value) {
HXLINE(  88)			this1 = (this1 | 2);
            		}
            		else {
HXLINE(  92)			this1 = (this1 & (268435455 - 2));
            		}
HXLINE(  95)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(JoystickHatPosition_Impl__obj,set_right,return )

bool JoystickHatPosition_Impl__obj::get_up(int this1){
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_100_get_up)
HXDLIN( 100)		return ((this1 & 1) > 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(JoystickHatPosition_Impl__obj,get_up,return )

bool JoystickHatPosition_Impl__obj::set_up(int this1,bool value){
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_104_set_up)
HXLINE( 105)		if (value) {
HXLINE( 107)			this1 = (this1 | 1);
            		}
            		else {
HXLINE( 111)			this1 = (this1 & (268435455 - 1));
            		}
HXLINE( 114)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(JoystickHatPosition_Impl__obj,set_up,return )


JoystickHatPosition_Impl__obj::JoystickHatPosition_Impl__obj()
{
}

bool JoystickHatPosition_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"get_up") ) { outValue = get_up_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_up") ) { outValue = set_up_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_down") ) { outValue = get_down_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_down") ) { outValue = set_down_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_left") ) { outValue = get_left_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_left") ) { outValue = set_left_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_right") ) { outValue = get_right_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_right") ) { outValue = set_right_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_center") ) { outValue = get_center_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_center") ) { outValue = set_center_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *JoystickHatPosition_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo JoystickHatPosition_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &JoystickHatPosition_Impl__obj::CENTER,HX_("CENTER",d5,d1,5d,b8)},
	{hx::fsInt,(void *) &JoystickHatPosition_Impl__obj::DOWN,HX_("DOWN",62,c0,2e,2d)},
	{hx::fsInt,(void *) &JoystickHatPosition_Impl__obj::LEFT,HX_("LEFT",07,d0,70,32)},
	{hx::fsInt,(void *) &JoystickHatPosition_Impl__obj::RIGHT,HX_("RIGHT",bc,43,52,67)},
	{hx::fsInt,(void *) &JoystickHatPosition_Impl__obj::UP,HX_("UP",5b,4a,00,00)},
	{hx::fsInt,(void *) &JoystickHatPosition_Impl__obj::DOWN_LEFT,HX_("DOWN_LEFT",44,88,d4,e5)},
	{hx::fsInt,(void *) &JoystickHatPosition_Impl__obj::DOWN_RIGHT,HX_("DOWN_RIGHT",df,c0,2f,ab)},
	{hx::fsInt,(void *) &JoystickHatPosition_Impl__obj::UP_LEFT,HX_("UP_LEFT",ab,37,af,b0)},
	{hx::fsInt,(void *) &JoystickHatPosition_Impl__obj::UP_RIGHT,HX_("UP_RIGHT",98,8b,ae,5f)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void JoystickHatPosition_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(JoystickHatPosition_Impl__obj::CENTER,"CENTER");
	HX_MARK_MEMBER_NAME(JoystickHatPosition_Impl__obj::DOWN,"DOWN");
	HX_MARK_MEMBER_NAME(JoystickHatPosition_Impl__obj::LEFT,"LEFT");
	HX_MARK_MEMBER_NAME(JoystickHatPosition_Impl__obj::RIGHT,"RIGHT");
	HX_MARK_MEMBER_NAME(JoystickHatPosition_Impl__obj::UP,"UP");
	HX_MARK_MEMBER_NAME(JoystickHatPosition_Impl__obj::DOWN_LEFT,"DOWN_LEFT");
	HX_MARK_MEMBER_NAME(JoystickHatPosition_Impl__obj::DOWN_RIGHT,"DOWN_RIGHT");
	HX_MARK_MEMBER_NAME(JoystickHatPosition_Impl__obj::UP_LEFT,"UP_LEFT");
	HX_MARK_MEMBER_NAME(JoystickHatPosition_Impl__obj::UP_RIGHT,"UP_RIGHT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void JoystickHatPosition_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(JoystickHatPosition_Impl__obj::CENTER,"CENTER");
	HX_VISIT_MEMBER_NAME(JoystickHatPosition_Impl__obj::DOWN,"DOWN");
	HX_VISIT_MEMBER_NAME(JoystickHatPosition_Impl__obj::LEFT,"LEFT");
	HX_VISIT_MEMBER_NAME(JoystickHatPosition_Impl__obj::RIGHT,"RIGHT");
	HX_VISIT_MEMBER_NAME(JoystickHatPosition_Impl__obj::UP,"UP");
	HX_VISIT_MEMBER_NAME(JoystickHatPosition_Impl__obj::DOWN_LEFT,"DOWN_LEFT");
	HX_VISIT_MEMBER_NAME(JoystickHatPosition_Impl__obj::DOWN_RIGHT,"DOWN_RIGHT");
	HX_VISIT_MEMBER_NAME(JoystickHatPosition_Impl__obj::UP_LEFT,"UP_LEFT");
	HX_VISIT_MEMBER_NAME(JoystickHatPosition_Impl__obj::UP_RIGHT,"UP_RIGHT");
};

#endif

hx::Class JoystickHatPosition_Impl__obj::__mClass;

static ::String JoystickHatPosition_Impl__obj_sStaticFields[] = {
	HX_("CENTER",d5,d1,5d,b8),
	HX_("DOWN",62,c0,2e,2d),
	HX_("LEFT",07,d0,70,32),
	HX_("RIGHT",bc,43,52,67),
	HX_("UP",5b,4a,00,00),
	HX_("DOWN_LEFT",44,88,d4,e5),
	HX_("DOWN_RIGHT",df,c0,2f,ab),
	HX_("UP_LEFT",ab,37,af,b0),
	HX_("UP_RIGHT",98,8b,ae,5f),
	HX_("_new",61,15,1f,3f),
	HX_("get_center",9e,95,62,f6),
	HX_("set_center",12,34,e0,f9),
	HX_("get_down",eb,b3,28,c2),
	HX_("set_down",5f,0d,86,70),
	HX_("get_left",90,c3,6a,c7),
	HX_("set_left",04,1d,c8,75),
	HX_("get_right",33,68,0d,2d),
	HX_("set_right",3f,54,5e,10),
	HX_("get_up",a4,fd,2f,a3),
	HX_("set_up",18,52,78,6f),
	::String(null())
};

void JoystickHatPosition_Impl__obj::__register()
{
	JoystickHatPosition_Impl__obj _hx_dummy;
	JoystickHatPosition_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_",84,1b,37,97);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &JoystickHatPosition_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = JoystickHatPosition_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(JoystickHatPosition_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< JoystickHatPosition_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = JoystickHatPosition_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = JoystickHatPosition_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = JoystickHatPosition_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void JoystickHatPosition_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_5_boot)
HXDLIN(   5)		CENTER = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_6_boot)
HXDLIN(   6)		DOWN = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_7_boot)
HXDLIN(   7)		LEFT = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_8_boot)
HXDLIN(   8)		RIGHT = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_9_boot)
HXDLIN(   9)		UP = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_10_boot)
HXDLIN(  10)		DOWN_LEFT = 12;
            	}
{
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_11_boot)
HXDLIN(  11)		DOWN_RIGHT = 6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_12_boot)
HXDLIN(  12)		UP_LEFT = 9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_fa6786736437d0c1_13_boot)
HXDLIN(  13)		UP_RIGHT = 3;
            	}
}

} // end namespace lime
} // end namespace ui
} // end namespace _JoystickHatPosition
