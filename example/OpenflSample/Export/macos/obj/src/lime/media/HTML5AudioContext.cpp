// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_lime_media_AudioBuffer
#include <lime/media/AudioBuffer.h>
#endif
#ifndef INCLUDED_lime_media_HTML5AudioContext
#include <lime/media/HTML5AudioContext.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_9_new,"lime.media.HTML5AudioContext","new",0xbd7f0dd2,"lime.media.HTML5AudioContext.new","lime/media/HTML5AudioContext.hx",9,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_32_canPlayType,"lime.media.HTML5AudioContext","canPlayType",0x42751670,"lime.media.HTML5AudioContext.canPlayType","lime/media/HTML5AudioContext.hx",32,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_43_createBuffer,"lime.media.HTML5AudioContext","createBuffer",0x1818816a,"lime.media.HTML5AudioContext.createBuffer","lime/media/HTML5AudioContext.hx",43,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_56_getAutoplay,"lime.media.HTML5AudioContext","getAutoplay",0x3e4bb30b,"lime.media.HTML5AudioContext.getAutoplay","lime/media/HTML5AudioContext.hx",56,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_68_getBuffered,"lime.media.HTML5AudioContext","getBuffered",0xa8a31787,"lime.media.HTML5AudioContext.getBuffered","lime/media/HTML5AudioContext.hx",68,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_80_getCurrentSrc,"lime.media.HTML5AudioContext","getCurrentSrc",0x872a0853,"lime.media.HTML5AudioContext.getCurrentSrc","lime/media/HTML5AudioContext.hx",80,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_92_getCurrentTime,"lime.media.HTML5AudioContext","getCurrentTime",0xbe3fabbe,"lime.media.HTML5AudioContext.getCurrentTime","lime/media/HTML5AudioContext.hx",92,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_104_getDefaultPlaybackRate,"lime.media.HTML5AudioContext","getDefaultPlaybackRate",0xb2bb9bd4,"lime.media.HTML5AudioContext.getDefaultPlaybackRate","lime/media/HTML5AudioContext.hx",104,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_116_getDuration,"lime.media.HTML5AudioContext","getDuration",0x1032d17c,"lime.media.HTML5AudioContext.getDuration","lime/media/HTML5AudioContext.hx",116,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_128_getEnded,"lime.media.HTML5AudioContext","getEnded",0xd0f81dd2,"lime.media.HTML5AudioContext.getEnded","lime/media/HTML5AudioContext.hx",128,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_140_getError,"lime.media.HTML5AudioContext","getError",0xd3a7a0a0,"lime.media.HTML5AudioContext.getError","lime/media/HTML5AudioContext.hx",140,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_152_getLoop,"lime.media.HTML5AudioContext","getLoop",0x5df6348c,"lime.media.HTML5AudioContext.getLoop","lime/media/HTML5AudioContext.hx",152,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_164_getMuted,"lime.media.HTML5AudioContext","getMuted",0x70d96443,"lime.media.HTML5AudioContext.getMuted","lime/media/HTML5AudioContext.hx",164,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_176_getNetworkState,"lime.media.HTML5AudioContext","getNetworkState",0xdb0360ab,"lime.media.HTML5AudioContext.getNetworkState","lime/media/HTML5AudioContext.hx",176,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_188_getPaused,"lime.media.HTML5AudioContext","getPaused",0xfd20a8d6,"lime.media.HTML5AudioContext.getPaused","lime/media/HTML5AudioContext.hx",188,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_200_getPlaybackRate,"lime.media.HTML5AudioContext","getPlaybackRate",0x22c030c3,"lime.media.HTML5AudioContext.getPlaybackRate","lime/media/HTML5AudioContext.hx",200,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_212_getPlayed,"lime.media.HTML5AudioContext","getPlayed",0x4555537b,"lime.media.HTML5AudioContext.getPlayed","lime/media/HTML5AudioContext.hx",212,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_224_getPreload,"lime.media.HTML5AudioContext","getPreload",0x108202a1,"lime.media.HTML5AudioContext.getPreload","lime/media/HTML5AudioContext.hx",224,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_236_getReadyState,"lime.media.HTML5AudioContext","getReadyState",0xfd469ad6,"lime.media.HTML5AudioContext.getReadyState","lime/media/HTML5AudioContext.hx",236,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_248_getSeekable,"lime.media.HTML5AudioContext","getSeekable",0x5399d13a,"lime.media.HTML5AudioContext.getSeekable","lime/media/HTML5AudioContext.hx",248,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_260_getSeeking,"lime.media.HTML5AudioContext","getSeeking",0x59f0fd42,"lime.media.HTML5AudioContext.getSeeking","lime/media/HTML5AudioContext.hx",260,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_272_getSrc,"lime.media.HTML5AudioContext","getSrc",0xd03a15bc,"lime.media.HTML5AudioContext.getSrc","lime/media/HTML5AudioContext.hx",272,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_284_getStartTime,"lime.media.HTML5AudioContext","getStartTime",0x3a756667,"lime.media.HTML5AudioContext.getStartTime","lime/media/HTML5AudioContext.hx",284,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_296_getVolume,"lime.media.HTML5AudioContext","getVolume",0x6cef9202,"lime.media.HTML5AudioContext.getVolume","lime/media/HTML5AudioContext.hx",296,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_300_load,"lime.media.HTML5AudioContext","load",0x10622074,"lime.media.HTML5AudioContext.load","lime/media/HTML5AudioContext.hx",300,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_310_pause,"lime.media.HTML5AudioContext","pause",0x89e2d4e8,"lime.media.HTML5AudioContext.pause","lime/media/HTML5AudioContext.hx",310,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_320_play,"lime.media.HTML5AudioContext","play",0x1304b442,"lime.media.HTML5AudioContext.play","lime/media/HTML5AudioContext.hx",320,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_330_setAutoplay,"lime.media.HTML5AudioContext","setAutoplay",0x48b8ba17,"lime.media.HTML5AudioContext.setAutoplay","lime/media/HTML5AudioContext.hx",330,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_340_setCurrentTime,"lime.media.HTML5AudioContext","setCurrentTime",0xde5f9432,"lime.media.HTML5AudioContext.setCurrentTime","lime/media/HTML5AudioContext.hx",340,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_350_setDefaultPlaybackRate,"lime.media.HTML5AudioContext","setDefaultPlaybackRate",0xe6671848,"lime.media.HTML5AudioContext.setDefaultPlaybackRate","lime/media/HTML5AudioContext.hx",350,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_360_setLoop,"lime.media.HTML5AudioContext","setLoop",0x50f7c598,"lime.media.HTML5AudioContext.setLoop","lime/media/HTML5AudioContext.hx",360,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_370_setMuted,"lime.media.HTML5AudioContext","setMuted",0x1f36bdb7,"lime.media.HTML5AudioContext.setMuted","lime/media/HTML5AudioContext.hx",370,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_380_setPlaybackRate,"lime.media.HTML5AudioContext","setPlaybackRate",0x1e8badcf,"lime.media.HTML5AudioContext.setPlaybackRate","lime/media/HTML5AudioContext.hx",380,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_390_setPreload,"lime.media.HTML5AudioContext","setPreload",0x13ffa115,"lime.media.HTML5AudioContext.setPreload","lime/media/HTML5AudioContext.hx",390,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_400_setSrc,"lime.media.HTML5AudioContext","setSrc",0x9c826a30,"lime.media.HTML5AudioContext.setSrc","lime/media/HTML5AudioContext.hx",400,0x102d35a0)
HX_LOCAL_STACK_FRAME(_hx_pos_ceb4b8903a0efe61_410_setVolume,"lime.media.HTML5AudioContext","setVolume",0x50407e0e,"lime.media.HTML5AudioContext.setVolume","lime/media/HTML5AudioContext.hx",410,0x102d35a0)
namespace lime{
namespace media{

void HTML5AudioContext_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_9_new)
HXLINE(  19)		this->NETWORK_NO_SOURCE = 3;
HXLINE(  18)		this->NETWORK_LOADING = 2;
HXLINE(  17)		this->NETWORK_IDLE = 1;
HXLINE(  16)		this->NETWORK_EMPTY = 0;
HXLINE(  15)		this->HAVE_NOTHING = 0;
HXLINE(  14)		this->HAVE_METADATA = 1;
HXLINE(  13)		this->HAVE_FUTURE_DATA = 3;
HXLINE(  12)		this->HAVE_ENOUGH_DATA = 4;
HXLINE(  11)		this->HAVE_CURRENT_DATA = 2;
            	}

Dynamic HTML5AudioContext_obj::__CreateEmpty() { return new HTML5AudioContext_obj; }

void *HTML5AudioContext_obj::_hx_vtable = 0;

Dynamic HTML5AudioContext_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< HTML5AudioContext_obj > _hx_result = new HTML5AudioContext_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool HTML5AudioContext_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x15fc3c60;
}

::String HTML5AudioContext_obj::canPlayType( ::lime::media::AudioBuffer buffer,::String type){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_32_canPlayType)
HXDLIN(  32)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(HTML5AudioContext_obj,canPlayType,return )

 ::lime::media::AudioBuffer HTML5AudioContext_obj::createBuffer(::String urlString){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_43_createBuffer)
HXDLIN(  43)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,createBuffer,return )

bool HTML5AudioContext_obj::getAutoplay( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_56_getAutoplay)
HXDLIN(  56)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getAutoplay,return )

 ::Dynamic HTML5AudioContext_obj::getBuffered( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_68_getBuffered)
HXDLIN(  68)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getBuffered,return )

::String HTML5AudioContext_obj::getCurrentSrc( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_80_getCurrentSrc)
HXDLIN(  80)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getCurrentSrc,return )

Float HTML5AudioContext_obj::getCurrentTime( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_92_getCurrentTime)
HXDLIN(  92)		return ( (Float)(0) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getCurrentTime,return )

Float HTML5AudioContext_obj::getDefaultPlaybackRate( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_104_getDefaultPlaybackRate)
HXDLIN( 104)		return ( (Float)(1) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getDefaultPlaybackRate,return )

Float HTML5AudioContext_obj::getDuration( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_116_getDuration)
HXDLIN( 116)		return ( (Float)(0) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getDuration,return )

bool HTML5AudioContext_obj::getEnded( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_128_getEnded)
HXDLIN( 128)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getEnded,return )

 ::Dynamic HTML5AudioContext_obj::getError( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_140_getError)
HXDLIN( 140)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getError,return )

bool HTML5AudioContext_obj::getLoop( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_152_getLoop)
HXDLIN( 152)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getLoop,return )

bool HTML5AudioContext_obj::getMuted( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_164_getMuted)
HXDLIN( 164)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getMuted,return )

int HTML5AudioContext_obj::getNetworkState( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_176_getNetworkState)
HXDLIN( 176)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getNetworkState,return )

bool HTML5AudioContext_obj::getPaused( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_188_getPaused)
HXDLIN( 188)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getPaused,return )

Float HTML5AudioContext_obj::getPlaybackRate( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_200_getPlaybackRate)
HXDLIN( 200)		return ( (Float)(1) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getPlaybackRate,return )

 ::Dynamic HTML5AudioContext_obj::getPlayed( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_212_getPlayed)
HXDLIN( 212)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getPlayed,return )

::String HTML5AudioContext_obj::getPreload( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_224_getPreload)
HXDLIN( 224)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getPreload,return )

int HTML5AudioContext_obj::getReadyState( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_236_getReadyState)
HXDLIN( 236)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getReadyState,return )

 ::Dynamic HTML5AudioContext_obj::getSeekable( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_248_getSeekable)
HXDLIN( 248)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getSeekable,return )

bool HTML5AudioContext_obj::getSeeking( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_260_getSeeking)
HXDLIN( 260)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getSeeking,return )

::String HTML5AudioContext_obj::getSrc( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_272_getSrc)
HXDLIN( 272)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getSrc,return )

Float HTML5AudioContext_obj::getStartTime( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_284_getStartTime)
HXDLIN( 284)		return ( (Float)(0) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getStartTime,return )

Float HTML5AudioContext_obj::getVolume( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_296_getVolume)
HXDLIN( 296)		return ( (Float)(1) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,getVolume,return )

void HTML5AudioContext_obj::load( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_300_load)
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,load,(void))

void HTML5AudioContext_obj::pause( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_310_pause)
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,pause,(void))

void HTML5AudioContext_obj::play( ::lime::media::AudioBuffer buffer){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_320_play)
            	}


HX_DEFINE_DYNAMIC_FUNC1(HTML5AudioContext_obj,play,(void))

void HTML5AudioContext_obj::setAutoplay( ::lime::media::AudioBuffer buffer,bool value){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_330_setAutoplay)
            	}


HX_DEFINE_DYNAMIC_FUNC2(HTML5AudioContext_obj,setAutoplay,(void))

void HTML5AudioContext_obj::setCurrentTime( ::lime::media::AudioBuffer buffer,Float value){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_340_setCurrentTime)
            	}


HX_DEFINE_DYNAMIC_FUNC2(HTML5AudioContext_obj,setCurrentTime,(void))

void HTML5AudioContext_obj::setDefaultPlaybackRate( ::lime::media::AudioBuffer buffer,Float value){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_350_setDefaultPlaybackRate)
            	}


HX_DEFINE_DYNAMIC_FUNC2(HTML5AudioContext_obj,setDefaultPlaybackRate,(void))

void HTML5AudioContext_obj::setLoop( ::lime::media::AudioBuffer buffer,bool value){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_360_setLoop)
            	}


HX_DEFINE_DYNAMIC_FUNC2(HTML5AudioContext_obj,setLoop,(void))

void HTML5AudioContext_obj::setMuted( ::lime::media::AudioBuffer buffer,bool value){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_370_setMuted)
            	}


HX_DEFINE_DYNAMIC_FUNC2(HTML5AudioContext_obj,setMuted,(void))

void HTML5AudioContext_obj::setPlaybackRate( ::lime::media::AudioBuffer buffer,Float value){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_380_setPlaybackRate)
            	}


HX_DEFINE_DYNAMIC_FUNC2(HTML5AudioContext_obj,setPlaybackRate,(void))

void HTML5AudioContext_obj::setPreload( ::lime::media::AudioBuffer buffer,::String value){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_390_setPreload)
            	}


HX_DEFINE_DYNAMIC_FUNC2(HTML5AudioContext_obj,setPreload,(void))

void HTML5AudioContext_obj::setSrc( ::lime::media::AudioBuffer buffer,::String value){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_400_setSrc)
            	}


HX_DEFINE_DYNAMIC_FUNC2(HTML5AudioContext_obj,setSrc,(void))

void HTML5AudioContext_obj::setVolume( ::lime::media::AudioBuffer buffer,Float value){
            	HX_STACKFRAME(&_hx_pos_ceb4b8903a0efe61_410_setVolume)
            	}


HX_DEFINE_DYNAMIC_FUNC2(HTML5AudioContext_obj,setVolume,(void))


hx::ObjectPtr< HTML5AudioContext_obj > HTML5AudioContext_obj::__new() {
	hx::ObjectPtr< HTML5AudioContext_obj > __this = new HTML5AudioContext_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< HTML5AudioContext_obj > HTML5AudioContext_obj::__alloc(hx::Ctx *_hx_ctx) {
	HTML5AudioContext_obj *__this = (HTML5AudioContext_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(HTML5AudioContext_obj), false, "lime.media.HTML5AudioContext"));
	*(void **)__this = HTML5AudioContext_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

HTML5AudioContext_obj::HTML5AudioContext_obj()
{
}

hx::Val HTML5AudioContext_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"load") ) { return hx::Val( load_dyn() ); }
		if (HX_FIELD_EQ(inName,"play") ) { return hx::Val( play_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"pause") ) { return hx::Val( pause_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"getSrc") ) { return hx::Val( getSrc_dyn() ); }
		if (HX_FIELD_EQ(inName,"setSrc") ) { return hx::Val( setSrc_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getLoop") ) { return hx::Val( getLoop_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLoop") ) { return hx::Val( setLoop_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getEnded") ) { return hx::Val( getEnded_dyn() ); }
		if (HX_FIELD_EQ(inName,"getError") ) { return hx::Val( getError_dyn() ); }
		if (HX_FIELD_EQ(inName,"getMuted") ) { return hx::Val( getMuted_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMuted") ) { return hx::Val( setMuted_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getPaused") ) { return hx::Val( getPaused_dyn() ); }
		if (HX_FIELD_EQ(inName,"getPlayed") ) { return hx::Val( getPlayed_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVolume") ) { return hx::Val( getVolume_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVolume") ) { return hx::Val( setVolume_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getPreload") ) { return hx::Val( getPreload_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSeeking") ) { return hx::Val( getSeeking_dyn() ); }
		if (HX_FIELD_EQ(inName,"setPreload") ) { return hx::Val( setPreload_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"canPlayType") ) { return hx::Val( canPlayType_dyn() ); }
		if (HX_FIELD_EQ(inName,"getAutoplay") ) { return hx::Val( getAutoplay_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBuffered") ) { return hx::Val( getBuffered_dyn() ); }
		if (HX_FIELD_EQ(inName,"getDuration") ) { return hx::Val( getDuration_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSeekable") ) { return hx::Val( getSeekable_dyn() ); }
		if (HX_FIELD_EQ(inName,"setAutoplay") ) { return hx::Val( setAutoplay_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"HAVE_NOTHING") ) { return hx::Val( HAVE_NOTHING ); }
		if (HX_FIELD_EQ(inName,"NETWORK_IDLE") ) { return hx::Val( NETWORK_IDLE ); }
		if (HX_FIELD_EQ(inName,"createBuffer") ) { return hx::Val( createBuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"getStartTime") ) { return hx::Val( getStartTime_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"HAVE_METADATA") ) { return hx::Val( HAVE_METADATA ); }
		if (HX_FIELD_EQ(inName,"NETWORK_EMPTY") ) { return hx::Val( NETWORK_EMPTY ); }
		if (HX_FIELD_EQ(inName,"getCurrentSrc") ) { return hx::Val( getCurrentSrc_dyn() ); }
		if (HX_FIELD_EQ(inName,"getReadyState") ) { return hx::Val( getReadyState_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getCurrentTime") ) { return hx::Val( getCurrentTime_dyn() ); }
		if (HX_FIELD_EQ(inName,"setCurrentTime") ) { return hx::Val( setCurrentTime_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"NETWORK_LOADING") ) { return hx::Val( NETWORK_LOADING ); }
		if (HX_FIELD_EQ(inName,"getNetworkState") ) { return hx::Val( getNetworkState_dyn() ); }
		if (HX_FIELD_EQ(inName,"getPlaybackRate") ) { return hx::Val( getPlaybackRate_dyn() ); }
		if (HX_FIELD_EQ(inName,"setPlaybackRate") ) { return hx::Val( setPlaybackRate_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"HAVE_ENOUGH_DATA") ) { return hx::Val( HAVE_ENOUGH_DATA ); }
		if (HX_FIELD_EQ(inName,"HAVE_FUTURE_DATA") ) { return hx::Val( HAVE_FUTURE_DATA ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"HAVE_CURRENT_DATA") ) { return hx::Val( HAVE_CURRENT_DATA ); }
		if (HX_FIELD_EQ(inName,"NETWORK_NO_SOURCE") ) { return hx::Val( NETWORK_NO_SOURCE ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"getDefaultPlaybackRate") ) { return hx::Val( getDefaultPlaybackRate_dyn() ); }
		if (HX_FIELD_EQ(inName,"setDefaultPlaybackRate") ) { return hx::Val( setDefaultPlaybackRate_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val HTML5AudioContext_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"HAVE_NOTHING") ) { HAVE_NOTHING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NETWORK_IDLE") ) { NETWORK_IDLE=inValue.Cast< int >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"HAVE_METADATA") ) { HAVE_METADATA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NETWORK_EMPTY") ) { NETWORK_EMPTY=inValue.Cast< int >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"NETWORK_LOADING") ) { NETWORK_LOADING=inValue.Cast< int >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"HAVE_ENOUGH_DATA") ) { HAVE_ENOUGH_DATA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"HAVE_FUTURE_DATA") ) { HAVE_FUTURE_DATA=inValue.Cast< int >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"HAVE_CURRENT_DATA") ) { HAVE_CURRENT_DATA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NETWORK_NO_SOURCE") ) { NETWORK_NO_SOURCE=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void HTML5AudioContext_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("HAVE_CURRENT_DATA",c7,06,ef,83));
	outFields->push(HX_("HAVE_ENOUGH_DATA",c2,82,d2,0d));
	outFields->push(HX_("HAVE_FUTURE_DATA",4f,47,cb,85));
	outFields->push(HX_("HAVE_METADATA",66,e7,bd,4f));
	outFields->push(HX_("HAVE_NOTHING",d6,6b,51,b3));
	outFields->push(HX_("NETWORK_EMPTY",bc,30,aa,1e));
	outFields->push(HX_("NETWORK_IDLE",a5,2f,7b,65));
	outFields->push(HX_("NETWORK_LOADING",6b,d2,4f,04));
	outFields->push(HX_("NETWORK_NO_SOURCE",28,36,8b,93));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo HTML5AudioContext_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(HTML5AudioContext_obj,HAVE_CURRENT_DATA),HX_("HAVE_CURRENT_DATA",c7,06,ef,83)},
	{hx::fsInt,(int)offsetof(HTML5AudioContext_obj,HAVE_ENOUGH_DATA),HX_("HAVE_ENOUGH_DATA",c2,82,d2,0d)},
	{hx::fsInt,(int)offsetof(HTML5AudioContext_obj,HAVE_FUTURE_DATA),HX_("HAVE_FUTURE_DATA",4f,47,cb,85)},
	{hx::fsInt,(int)offsetof(HTML5AudioContext_obj,HAVE_METADATA),HX_("HAVE_METADATA",66,e7,bd,4f)},
	{hx::fsInt,(int)offsetof(HTML5AudioContext_obj,HAVE_NOTHING),HX_("HAVE_NOTHING",d6,6b,51,b3)},
	{hx::fsInt,(int)offsetof(HTML5AudioContext_obj,NETWORK_EMPTY),HX_("NETWORK_EMPTY",bc,30,aa,1e)},
	{hx::fsInt,(int)offsetof(HTML5AudioContext_obj,NETWORK_IDLE),HX_("NETWORK_IDLE",a5,2f,7b,65)},
	{hx::fsInt,(int)offsetof(HTML5AudioContext_obj,NETWORK_LOADING),HX_("NETWORK_LOADING",6b,d2,4f,04)},
	{hx::fsInt,(int)offsetof(HTML5AudioContext_obj,NETWORK_NO_SOURCE),HX_("NETWORK_NO_SOURCE",28,36,8b,93)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *HTML5AudioContext_obj_sStaticStorageInfo = 0;
#endif

static ::String HTML5AudioContext_obj_sMemberFields[] = {
	HX_("HAVE_CURRENT_DATA",c7,06,ef,83),
	HX_("HAVE_ENOUGH_DATA",c2,82,d2,0d),
	HX_("HAVE_FUTURE_DATA",4f,47,cb,85),
	HX_("HAVE_METADATA",66,e7,bd,4f),
	HX_("HAVE_NOTHING",d6,6b,51,b3),
	HX_("NETWORK_EMPTY",bc,30,aa,1e),
	HX_("NETWORK_IDLE",a5,2f,7b,65),
	HX_("NETWORK_LOADING",6b,d2,4f,04),
	HX_("NETWORK_NO_SOURCE",28,36,8b,93),
	HX_("canPlayType",fe,16,c4,6c),
	HX_("createBuffer",1c,fd,e9,f2),
	HX_("getAutoplay",99,b3,9a,68),
	HX_("getBuffered",15,18,f2,d2),
	HX_("getCurrentSrc",61,c8,a4,23),
	HX_("getCurrentTime",f0,f7,2c,0d),
	HX_("getDefaultPlaybackRate",06,6a,fb,14),
	HX_("getDuration",0a,d2,81,3a),
	HX_("getEnded",84,58,51,d0),
	HX_("getError",52,db,00,d3),
	HX_("getLoop",1a,56,3a,1a),
	HX_("getMuted",f5,9e,32,70),
	HX_("getNetworkState",39,c0,b8,9b),
	HX_("getPaused",e4,c9,da,6b),
	HX_("getPlaybackRate",51,90,75,e3),
	HX_("getPlayed",89,74,0f,b4),
	HX_("getPreload",d3,cd,a4,84),
	HX_("getReadyState",e4,5a,c1,99),
	HX_("getSeekable",c8,d1,e8,7d),
	HX_("getSeeking",74,c8,13,ce),
	HX_("getSrc",ee,df,26,a3),
	HX_("getStartTime",19,e2,46,15),
	HX_("getVolume",10,b3,a9,db),
	HX_("load",26,9a,b7,47),
	HX_("pause",f6,d6,57,bd),
	HX_("play",f4,2d,5a,4a),
	HX_("setAutoplay",a5,ba,07,73),
	HX_("setCurrentTime",64,e0,4c,2d),
	HX_("setDefaultPlaybackRate",7a,e6,a6,48),
	HX_("setLoop",26,e7,3b,0d),
	HX_("setMuted",69,f8,8f,1e),
	HX_("setPlaybackRate",5d,0d,41,df),
	HX_("setPreload",47,6c,22,88),
	HX_("setSrc",62,34,6f,6f),
	HX_("setVolume",1c,9f,fa,be),
	::String(null()) };

hx::Class HTML5AudioContext_obj::__mClass;

void HTML5AudioContext_obj::__register()
{
	HTML5AudioContext_obj _hx_dummy;
	HTML5AudioContext_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("lime.media.HTML5AudioContext",e0,7c,93,2f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(HTML5AudioContext_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< HTML5AudioContext_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HTML5AudioContext_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HTML5AudioContext_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace media
