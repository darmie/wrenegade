// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_lime_media_WebAudioContext
#include <lime/media/WebAudioContext.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_14_new,"lime.media.WebAudioContext","new",0xf7fe0c9c,"lime.media.WebAudioContext.new","lime/media/WebAudioContext.hx",14,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_18_createAnalyser,"lime.media.WebAudioContext","createAnalyser",0x9feccc3f,"lime.media.WebAudioContext.createAnalyser","lime/media/WebAudioContext.hx",18,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_23_createBiquadFilter,"lime.media.WebAudioContext","createBiquadFilter",0x1ea034c6,"lime.media.WebAudioContext.createBiquadFilter","lime/media/WebAudioContext.hx",23,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_29_createBuffer,"lime.media.WebAudioContext","createBuffer",0x3b8c5960,"lime.media.WebAudioContext.createBuffer","lime/media/WebAudioContext.hx",29,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_34_createBufferSource,"lime.media.WebAudioContext","createBufferSource",0x61a7c65b,"lime.media.WebAudioContext.createBufferSource","lime/media/WebAudioContext.hx",34,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_39_createChannelMerger,"lime.media.WebAudioContext","createChannelMerger",0x4226577d,"lime.media.WebAudioContext.createChannelMerger","lime/media/WebAudioContext.hx",39,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_44_createChannelSplitter,"lime.media.WebAudioContext","createChannelSplitter",0xc538c6ca,"lime.media.WebAudioContext.createChannelSplitter","lime/media/WebAudioContext.hx",44,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_49_createConvolver,"lime.media.WebAudioContext","createConvolver",0x83ee6292,"lime.media.WebAudioContext.createConvolver","lime/media/WebAudioContext.hx",49,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_54_createDelay,"lime.media.WebAudioContext","createDelay",0xb77ce723,"lime.media.WebAudioContext.createDelay","lime/media/WebAudioContext.hx",54,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_59_createDynamicsCompressor,"lime.media.WebAudioContext","createDynamicsCompressor",0x43ae56d9,"lime.media.WebAudioContext.createDynamicsCompressor","lime/media/WebAudioContext.hx",59,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_64_createGain,"lime.media.WebAudioContext","createGain",0x4314b4df,"lime.media.WebAudioContext.createGain","lime/media/WebAudioContext.hx",64,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_69_createMediaElementSource,"lime.media.WebAudioContext","createMediaElementSource",0x6f154193,"lime.media.WebAudioContext.createMediaElementSource","lime/media/WebAudioContext.hx",69,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_74_createMediaStreamSource,"lime.media.WebAudioContext","createMediaStreamSource",0x11e8b01f,"lime.media.WebAudioContext.createMediaStreamSource","lime/media/WebAudioContext.hx",74,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_79_createOscillator,"lime.media.WebAudioContext","createOscillator",0x69410000,"lime.media.WebAudioContext.createOscillator","lime/media/WebAudioContext.hx",79,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_84_createPanner,"lime.media.WebAudioContext","createPanner",0x55d7937e,"lime.media.WebAudioContext.createPanner","lime/media/WebAudioContext.hx",84,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_89_createScriptProcessor,"lime.media.WebAudioContext","createScriptProcessor",0xb0598d67,"lime.media.WebAudioContext.createScriptProcessor","lime/media/WebAudioContext.hx",89,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_94_createWaveShaper,"lime.media.WebAudioContext","createWaveShaper",0xe27a912a,"lime.media.WebAudioContext.createWaveShaper","lime/media/WebAudioContext.hx",94,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_99_createWaveTable,"lime.media.WebAudioContext","createWaveTable",0xcb7cc335,"lime.media.WebAudioContext.createWaveTable","lime/media/WebAudioContext.hx",99,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_103_decodeAudioData,"lime.media.WebAudioContext","decodeAudioData",0xf97e314e,"lime.media.WebAudioContext.decodeAudioData","lime/media/WebAudioContext.hx",103,0x7d65c996)
HX_LOCAL_STACK_FRAME(_hx_pos_8f3cbf1fbb3e6ea9_105_startRendering,"lime.media.WebAudioContext","startRendering",0x67d39fce,"lime.media.WebAudioContext.startRendering","lime/media/WebAudioContext.hx",105,0x7d65c996)
namespace lime{
namespace media{

void WebAudioContext_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_14_new)
            	}

Dynamic WebAudioContext_obj::__CreateEmpty() { return new WebAudioContext_obj; }

void *WebAudioContext_obj::_hx_vtable = 0;

Dynamic WebAudioContext_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< WebAudioContext_obj > _hx_result = new WebAudioContext_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool WebAudioContext_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x30db9fc6;
}

 ::Dynamic WebAudioContext_obj::createAnalyser(){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_18_createAnalyser)
HXDLIN(  18)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(WebAudioContext_obj,createAnalyser,return )

 ::Dynamic WebAudioContext_obj::createBiquadFilter(){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_23_createBiquadFilter)
HXDLIN(  23)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(WebAudioContext_obj,createBiquadFilter,return )

 ::Dynamic WebAudioContext_obj::createBuffer( ::Dynamic buffer,bool mixToMono){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_29_createBuffer)
HXDLIN(  29)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(WebAudioContext_obj,createBuffer,return )

 ::Dynamic WebAudioContext_obj::createBufferSource(){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_34_createBufferSource)
HXDLIN(  34)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(WebAudioContext_obj,createBufferSource,return )

 ::Dynamic WebAudioContext_obj::createChannelMerger( ::Dynamic numberOfInputs){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_39_createChannelMerger)
HXDLIN(  39)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(WebAudioContext_obj,createChannelMerger,return )

 ::Dynamic WebAudioContext_obj::createChannelSplitter( ::Dynamic numberOfOutputs){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_44_createChannelSplitter)
HXDLIN(  44)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(WebAudioContext_obj,createChannelSplitter,return )

 ::Dynamic WebAudioContext_obj::createConvolver(){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_49_createConvolver)
HXDLIN(  49)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(WebAudioContext_obj,createConvolver,return )

 ::Dynamic WebAudioContext_obj::createDelay( ::Dynamic maxDelayTime){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_54_createDelay)
HXDLIN(  54)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(WebAudioContext_obj,createDelay,return )

 ::Dynamic WebAudioContext_obj::createDynamicsCompressor(){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_59_createDynamicsCompressor)
HXDLIN(  59)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(WebAudioContext_obj,createDynamicsCompressor,return )

 ::Dynamic WebAudioContext_obj::createGain(){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_64_createGain)
HXDLIN(  64)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(WebAudioContext_obj,createGain,return )

 ::Dynamic WebAudioContext_obj::createMediaElementSource( ::Dynamic mediaElement){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_69_createMediaElementSource)
HXDLIN(  69)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(WebAudioContext_obj,createMediaElementSource,return )

 ::Dynamic WebAudioContext_obj::createMediaStreamSource( ::Dynamic mediaStream){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_74_createMediaStreamSource)
HXDLIN(  74)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(WebAudioContext_obj,createMediaStreamSource,return )

 ::Dynamic WebAudioContext_obj::createOscillator(){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_79_createOscillator)
HXDLIN(  79)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(WebAudioContext_obj,createOscillator,return )

 ::Dynamic WebAudioContext_obj::createPanner(){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_84_createPanner)
HXDLIN(  84)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(WebAudioContext_obj,createPanner,return )

 ::Dynamic WebAudioContext_obj::createScriptProcessor(int bufferSize, ::Dynamic numberOfInputChannels, ::Dynamic numberOfOutputChannels){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_89_createScriptProcessor)
HXDLIN(  89)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(WebAudioContext_obj,createScriptProcessor,return )

 ::Dynamic WebAudioContext_obj::createWaveShaper(){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_94_createWaveShaper)
HXDLIN(  94)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(WebAudioContext_obj,createWaveShaper,return )

 ::Dynamic WebAudioContext_obj::createWaveTable( ::Dynamic real, ::Dynamic imag){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_99_createWaveTable)
HXDLIN(  99)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(WebAudioContext_obj,createWaveTable,return )

void WebAudioContext_obj::decodeAudioData( ::Dynamic audioData, ::Dynamic successCallback, ::Dynamic errorCallback){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_103_decodeAudioData)
            	}


HX_DEFINE_DYNAMIC_FUNC3(WebAudioContext_obj,decodeAudioData,(void))

void WebAudioContext_obj::startRendering(){
            	HX_STACKFRAME(&_hx_pos_8f3cbf1fbb3e6ea9_105_startRendering)
            	}


HX_DEFINE_DYNAMIC_FUNC0(WebAudioContext_obj,startRendering,(void))


WebAudioContext_obj::WebAudioContext_obj()
{
}

void WebAudioContext_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(WebAudioContext);
	HX_MARK_MEMBER_NAME(activeSourceCount,"activeSourceCount");
	HX_MARK_MEMBER_NAME(currentTime,"currentTime");
	HX_MARK_MEMBER_NAME(destination,"destination");
	HX_MARK_MEMBER_NAME(listener,"listener");
	HX_MARK_MEMBER_NAME(oncomplete,"oncomplete");
	HX_MARK_MEMBER_NAME(sampleRate,"sampleRate");
	HX_MARK_END_CLASS();
}

void WebAudioContext_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(activeSourceCount,"activeSourceCount");
	HX_VISIT_MEMBER_NAME(currentTime,"currentTime");
	HX_VISIT_MEMBER_NAME(destination,"destination");
	HX_VISIT_MEMBER_NAME(listener,"listener");
	HX_VISIT_MEMBER_NAME(oncomplete,"oncomplete");
	HX_VISIT_MEMBER_NAME(sampleRate,"sampleRate");
}

hx::Val WebAudioContext_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"listener") ) { return hx::Val( listener ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"oncomplete") ) { return hx::Val( oncomplete ); }
		if (HX_FIELD_EQ(inName,"sampleRate") ) { return hx::Val( sampleRate ); }
		if (HX_FIELD_EQ(inName,"createGain") ) { return hx::Val( createGain_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"currentTime") ) { return hx::Val( currentTime ); }
		if (HX_FIELD_EQ(inName,"destination") ) { return hx::Val( destination ); }
		if (HX_FIELD_EQ(inName,"createDelay") ) { return hx::Val( createDelay_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"createBuffer") ) { return hx::Val( createBuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"createPanner") ) { return hx::Val( createPanner_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"createAnalyser") ) { return hx::Val( createAnalyser_dyn() ); }
		if (HX_FIELD_EQ(inName,"startRendering") ) { return hx::Val( startRendering_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"createConvolver") ) { return hx::Val( createConvolver_dyn() ); }
		if (HX_FIELD_EQ(inName,"createWaveTable") ) { return hx::Val( createWaveTable_dyn() ); }
		if (HX_FIELD_EQ(inName,"decodeAudioData") ) { return hx::Val( decodeAudioData_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"createOscillator") ) { return hx::Val( createOscillator_dyn() ); }
		if (HX_FIELD_EQ(inName,"createWaveShaper") ) { return hx::Val( createWaveShaper_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"activeSourceCount") ) { return hx::Val( activeSourceCount ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"createBiquadFilter") ) { return hx::Val( createBiquadFilter_dyn() ); }
		if (HX_FIELD_EQ(inName,"createBufferSource") ) { return hx::Val( createBufferSource_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"createChannelMerger") ) { return hx::Val( createChannelMerger_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"createChannelSplitter") ) { return hx::Val( createChannelSplitter_dyn() ); }
		if (HX_FIELD_EQ(inName,"createScriptProcessor") ) { return hx::Val( createScriptProcessor_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"createMediaStreamSource") ) { return hx::Val( createMediaStreamSource_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"createDynamicsCompressor") ) { return hx::Val( createDynamicsCompressor_dyn() ); }
		if (HX_FIELD_EQ(inName,"createMediaElementSource") ) { return hx::Val( createMediaElementSource_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val WebAudioContext_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"listener") ) { listener=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"oncomplete") ) { oncomplete=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"sampleRate") ) { sampleRate=inValue.Cast< Float >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"currentTime") ) { currentTime=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"destination") ) { destination=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"activeSourceCount") ) { activeSourceCount=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void WebAudioContext_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("activeSourceCount",ce,c9,f9,75));
	outFields->push(HX_("currentTime",e6,a4,8e,85));
	outFields->push(HX_("destination",8e,8a,fb,11));
	outFields->push(HX_("listener",74,00,32,38));
	outFields->push(HX_("oncomplete",d8,18,cd,83));
	outFields->push(HX_("sampleRate",2a,3c,4c,67));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo WebAudioContext_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(WebAudioContext_obj,activeSourceCount),HX_("activeSourceCount",ce,c9,f9,75)},
	{hx::fsFloat,(int)offsetof(WebAudioContext_obj,currentTime),HX_("currentTime",e6,a4,8e,85)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(WebAudioContext_obj,destination),HX_("destination",8e,8a,fb,11)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(WebAudioContext_obj,listener),HX_("listener",74,00,32,38)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(WebAudioContext_obj,oncomplete),HX_("oncomplete",d8,18,cd,83)},
	{hx::fsFloat,(int)offsetof(WebAudioContext_obj,sampleRate),HX_("sampleRate",2a,3c,4c,67)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *WebAudioContext_obj_sStaticStorageInfo = 0;
#endif

static ::String WebAudioContext_obj_sMemberFields[] = {
	HX_("activeSourceCount",ce,c9,f9,75),
	HX_("currentTime",e6,a4,8e,85),
	HX_("destination",8e,8a,fb,11),
	HX_("listener",74,00,32,38),
	HX_("oncomplete",d8,18,cd,83),
	HX_("sampleRate",2a,3c,4c,67),
	HX_("createAnalyser",fb,d6,c7,24),
	HX_("createBiquadFilter",82,4d,1d,ee),
	HX_("createBuffer",1c,fd,e9,f2),
	HX_("createBufferSource",17,df,24,31),
	HX_("createChannelMerger",41,e3,1e,00),
	HX_("createChannelSplitter",8e,cb,3e,5b),
	HX_("createConvolver",56,bc,bc,3e),
	HX_("createDelay",e7,0e,a2,00),
	HX_("createDynamicsCompressor",95,a4,d0,db),
	HX_("createGain",9b,b1,ec,56),
	HX_("createMediaElementSource",4f,8f,37,07),
	HX_("createMediaStreamSource",e3,6d,0c,b9),
	HX_("createOscillator",bc,31,01,23),
	HX_("createPanner",3a,37,35,0d),
	HX_("createScriptProcessor",2b,92,5f,46),
	HX_("createWaveShaper",e6,c2,3a,9c),
	HX_("createWaveTable",f9,1c,4b,86),
	HX_("decodeAudioData",12,8b,4c,b4),
	HX_("startRendering",8a,aa,ae,ec),
	::String(null()) };

hx::Class WebAudioContext_obj::__mClass;

void WebAudioContext_obj::__register()
{
	WebAudioContext_obj _hx_dummy;
	WebAudioContext_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("lime.media.WebAudioContext",aa,ce,a4,c9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(WebAudioContext_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< WebAudioContext_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = WebAudioContext_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = WebAudioContext_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace media
