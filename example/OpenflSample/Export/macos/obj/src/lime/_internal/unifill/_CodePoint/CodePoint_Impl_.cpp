// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_BytesBuffer
#include <haxe/io/BytesBuffer.h>
#endif
#ifndef INCLUDED_lime__internal_unifill_Exception
#include <lime/_internal/unifill/Exception.h>
#endif
#ifndef INCLUDED_lime__internal_unifill_InvalidCodePoint
#include <lime/_internal/unifill/InvalidCodePoint.h>
#endif
#ifndef INCLUDED_lime__internal_unifill__CodePoint_CodePoint_Impl_
#include <lime/_internal/unifill/_CodePoint/CodePoint_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_1297f01fb39de7fa_7_fromInt,"lime._internal.unifill._CodePoint.CodePoint_Impl_","fromInt",0xceb79596,"lime._internal.unifill._CodePoint.CodePoint_Impl_.fromInt","lime/_internal/unifill/CodePoint.hx",7,0x4a34f5c4)
HX_LOCAL_STACK_FRAME(_hx_pos_1297f01fb39de7fa_17_cons,"lime._internal.unifill._CodePoint.CodePoint_Impl_","cons",0x49371160,"lime._internal.unifill._CodePoint.CodePoint_Impl_.cons","lime/_internal/unifill/CodePoint.hx",17,0x4a34f5c4)
HX_LOCAL_STACK_FRAME(_hx_pos_1297f01fb39de7fa_21_snoc,"lime._internal.unifill._CodePoint.CodePoint_Impl_","snoc",0x53c9b9de,"lime._internal.unifill._CodePoint.CodePoint_Impl_.snoc","lime/_internal/unifill/CodePoint.hx",21,0x4a34f5c4)
HX_LOCAL_STACK_FRAME(_hx_pos_1297f01fb39de7fa_25_addInt,"lime._internal.unifill._CodePoint.CodePoint_Impl_","addInt",0x294b6e7d,"lime._internal.unifill._CodePoint.CodePoint_Impl_.addInt","lime/_internal/unifill/CodePoint.hx",25,0x4a34f5c4)
HX_LOCAL_STACK_FRAME(_hx_pos_1297f01fb39de7fa_29_sub,"lime._internal.unifill._CodePoint.CodePoint_Impl_","sub",0x441b54f1,"lime._internal.unifill._CodePoint.CodePoint_Impl_.sub","lime/_internal/unifill/CodePoint.hx",29,0x4a34f5c4)
HX_LOCAL_STACK_FRAME(_hx_pos_1297f01fb39de7fa_33_subInt,"lime._internal.unifill._CodePoint.CodePoint_Impl_","subInt",0x24355c7e,"lime._internal.unifill._CodePoint.CodePoint_Impl_.subInt","lime/_internal/unifill/CodePoint.hx",33,0x4a34f5c4)
HX_LOCAL_STACK_FRAME(_hx_pos_1297f01fb39de7fa_47__new,"lime._internal.unifill._CodePoint.CodePoint_Impl_","_new",0x46916cd0,"lime._internal.unifill._CodePoint.CodePoint_Impl_._new","lime/_internal/unifill/CodePoint.hx",47,0x4a34f5c4)
HX_LOCAL_STACK_FRAME(_hx_pos_1297f01fb39de7fa_54_toString,"lime._internal.unifill._CodePoint.CodePoint_Impl_","toString",0xa6d30b9b,"lime._internal.unifill._CodePoint.CodePoint_Impl_.toString","lime/_internal/unifill/CodePoint.hx",54,0x4a34f5c4)
HX_LOCAL_STACK_FRAME(_hx_pos_1297f01fb39de7fa_58_toInt,"lime._internal.unifill._CodePoint.CodePoint_Impl_","toInt",0x90abe7e5,"lime._internal.unifill._CodePoint.CodePoint_Impl_.toInt","lime/_internal/unifill/CodePoint.hx",58,0x4a34f5c4)
namespace lime{
namespace _internal{
namespace unifill{
namespace _CodePoint{

void CodePoint_Impl__obj::__construct() { }

Dynamic CodePoint_Impl__obj::__CreateEmpty() { return new CodePoint_Impl__obj; }

void *CodePoint_Impl__obj::_hx_vtable = 0;

Dynamic CodePoint_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CodePoint_Impl__obj > _hx_result = new CodePoint_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CodePoint_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x478d2bb3;
}

int CodePoint_Impl__obj::fromInt(int code){
            	HX_GC_STACKFRAME(&_hx_pos_1297f01fb39de7fa_7_fromInt)
HXLINE(   8)		bool _hx_tmp;
HXDLIN(   8)		bool _hx_tmp1;
HXDLIN(   8)		bool _hx_tmp2;
HXDLIN(   8)		if ((0 <= code)) {
HXLINE(   8)			_hx_tmp2 = (code <= 1114111);
            		}
            		else {
HXLINE(   8)			_hx_tmp2 = false;
            		}
HXDLIN(   8)		if (_hx_tmp2) {
HXLINE(   8)			bool _hx_tmp3;
HXDLIN(   8)			if ((55296 <= code)) {
HXLINE(   8)				_hx_tmp3 = (code <= 56319);
            			}
            			else {
HXLINE(   8)				_hx_tmp3 = false;
            			}
HXDLIN(   8)			_hx_tmp1 = !(_hx_tmp3);
            		}
            		else {
HXLINE(   8)			_hx_tmp1 = false;
            		}
HXDLIN(   8)		if (_hx_tmp1) {
HXLINE(   8)			bool _hx_tmp4;
HXDLIN(   8)			if ((56320 <= code)) {
HXLINE(   8)				_hx_tmp4 = (code <= 57343);
            			}
            			else {
HXLINE(   8)				_hx_tmp4 = false;
            			}
HXDLIN(   8)			_hx_tmp = !(_hx_tmp4);
            		}
            		else {
HXLINE(   8)			_hx_tmp = false;
            		}
HXDLIN(   8)		if (!(_hx_tmp)) {
HXLINE(  10)			HX_STACK_DO_THROW( ::lime::_internal::unifill::InvalidCodePoint_obj::__alloc( HX_CTX ,code));
            		}
HXLINE(  12)		int this1 = code;
HXDLIN(  12)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CodePoint_Impl__obj,fromInt,return )

::String CodePoint_Impl__obj::cons(int a,::String b){
            	HX_GC_STACKFRAME(&_hx_pos_1297f01fb39de7fa_17_cons)
HXDLIN(  17)		 ::haxe::io::BytesBuffer buf =  ::haxe::io::BytesBuffer_obj::__alloc( HX_CTX );
HXDLIN(  17)		if ((a <= 127)) {
HXDLIN(  17)			buf->b->push(a);
            		}
            		else {
HXDLIN(  17)			if ((a <= 2047)) {
HXDLIN(  17)				buf->b->push((192 | (a >> 6)));
HXDLIN(  17)				buf->b->push((128 | (a & 63)));
            			}
            			else {
HXDLIN(  17)				if ((a <= 65535)) {
HXDLIN(  17)					buf->b->push((224 | (a >> 12)));
HXDLIN(  17)					buf->b->push((128 | ((a >> 6) & 63)));
HXDLIN(  17)					buf->b->push((128 | (a & 63)));
            				}
            				else {
HXDLIN(  17)					if ((a <= 1114111)) {
HXDLIN(  17)						buf->b->push((240 | (a >> 18)));
HXDLIN(  17)						buf->b->push((128 | ((a >> 12) & 63)));
HXDLIN(  17)						buf->b->push((128 | ((a >> 6) & 63)));
HXDLIN(  17)						buf->b->push((128 | (a & 63)));
            					}
            					else {
HXDLIN(  17)						HX_STACK_DO_THROW( ::lime::_internal::unifill::InvalidCodePoint_obj::__alloc( HX_CTX ,a));
            					}
            				}
            			}
            		}
HXDLIN(  17)		::String this1 = buf->getBytes()->toString();
HXDLIN(  17)		::String this2 = this1;
HXDLIN(  17)		return (this2 + b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CodePoint_Impl__obj,cons,return )

::String CodePoint_Impl__obj::snoc(::String a,int b){
            	HX_GC_STACKFRAME(&_hx_pos_1297f01fb39de7fa_21_snoc)
HXDLIN(  21)		 ::haxe::io::BytesBuffer buf =  ::haxe::io::BytesBuffer_obj::__alloc( HX_CTX );
HXDLIN(  21)		if ((b <= 127)) {
HXDLIN(  21)			buf->b->push(b);
            		}
            		else {
HXDLIN(  21)			if ((b <= 2047)) {
HXDLIN(  21)				buf->b->push((192 | (b >> 6)));
HXDLIN(  21)				buf->b->push((128 | (b & 63)));
            			}
            			else {
HXDLIN(  21)				if ((b <= 65535)) {
HXDLIN(  21)					buf->b->push((224 | (b >> 12)));
HXDLIN(  21)					buf->b->push((128 | ((b >> 6) & 63)));
HXDLIN(  21)					buf->b->push((128 | (b & 63)));
            				}
            				else {
HXDLIN(  21)					if ((b <= 1114111)) {
HXDLIN(  21)						buf->b->push((240 | (b >> 18)));
HXDLIN(  21)						buf->b->push((128 | ((b >> 12) & 63)));
HXDLIN(  21)						buf->b->push((128 | ((b >> 6) & 63)));
HXDLIN(  21)						buf->b->push((128 | (b & 63)));
            					}
            					else {
HXDLIN(  21)						HX_STACK_DO_THROW( ::lime::_internal::unifill::InvalidCodePoint_obj::__alloc( HX_CTX ,b));
            					}
            				}
            			}
            		}
HXDLIN(  21)		::String this1 = buf->getBytes()->toString();
HXDLIN(  21)		::String this2 = this1;
HXDLIN(  21)		return (a + this2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CodePoint_Impl__obj,snoc,return )

int CodePoint_Impl__obj::addInt(int a,int b){
            	HX_GC_STACKFRAME(&_hx_pos_1297f01fb39de7fa_25_addInt)
HXDLIN(  25)		int code = (a + b);
HXDLIN(  25)		bool _hx_tmp;
HXDLIN(  25)		bool _hx_tmp1;
HXDLIN(  25)		bool _hx_tmp2;
HXDLIN(  25)		if ((0 <= code)) {
HXDLIN(  25)			_hx_tmp2 = (code <= 1114111);
            		}
            		else {
HXDLIN(  25)			_hx_tmp2 = false;
            		}
HXDLIN(  25)		if (_hx_tmp2) {
HXDLIN(  25)			bool _hx_tmp3;
HXDLIN(  25)			if ((55296 <= code)) {
HXDLIN(  25)				_hx_tmp3 = (code <= 56319);
            			}
            			else {
HXDLIN(  25)				_hx_tmp3 = false;
            			}
HXDLIN(  25)			_hx_tmp1 = !(_hx_tmp3);
            		}
            		else {
HXDLIN(  25)			_hx_tmp1 = false;
            		}
HXDLIN(  25)		if (_hx_tmp1) {
HXDLIN(  25)			bool _hx_tmp4;
HXDLIN(  25)			if ((56320 <= code)) {
HXDLIN(  25)				_hx_tmp4 = (code <= 57343);
            			}
            			else {
HXDLIN(  25)				_hx_tmp4 = false;
            			}
HXDLIN(  25)			_hx_tmp = !(_hx_tmp4);
            		}
            		else {
HXDLIN(  25)			_hx_tmp = false;
            		}
HXDLIN(  25)		if (!(_hx_tmp)) {
HXDLIN(  25)			HX_STACK_DO_THROW( ::lime::_internal::unifill::InvalidCodePoint_obj::__alloc( HX_CTX ,code));
            		}
HXDLIN(  25)		int this1 = code;
HXDLIN(  25)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CodePoint_Impl__obj,addInt,return )

int CodePoint_Impl__obj::sub(int a,int b){
            	HX_STACKFRAME(&_hx_pos_1297f01fb39de7fa_29_sub)
HXDLIN(  29)		return (a - b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CodePoint_Impl__obj,sub,return )

int CodePoint_Impl__obj::subInt(int a,int b){
            	HX_GC_STACKFRAME(&_hx_pos_1297f01fb39de7fa_33_subInt)
HXDLIN(  33)		int code = (a - b);
HXDLIN(  33)		bool _hx_tmp;
HXDLIN(  33)		bool _hx_tmp1;
HXDLIN(  33)		bool _hx_tmp2;
HXDLIN(  33)		if ((0 <= code)) {
HXDLIN(  33)			_hx_tmp2 = (code <= 1114111);
            		}
            		else {
HXDLIN(  33)			_hx_tmp2 = false;
            		}
HXDLIN(  33)		if (_hx_tmp2) {
HXDLIN(  33)			bool _hx_tmp3;
HXDLIN(  33)			if ((55296 <= code)) {
HXDLIN(  33)				_hx_tmp3 = (code <= 56319);
            			}
            			else {
HXDLIN(  33)				_hx_tmp3 = false;
            			}
HXDLIN(  33)			_hx_tmp1 = !(_hx_tmp3);
            		}
            		else {
HXDLIN(  33)			_hx_tmp1 = false;
            		}
HXDLIN(  33)		if (_hx_tmp1) {
HXDLIN(  33)			bool _hx_tmp4;
HXDLIN(  33)			if ((56320 <= code)) {
HXDLIN(  33)				_hx_tmp4 = (code <= 57343);
            			}
            			else {
HXDLIN(  33)				_hx_tmp4 = false;
            			}
HXDLIN(  33)			_hx_tmp = !(_hx_tmp4);
            		}
            		else {
HXDLIN(  33)			_hx_tmp = false;
            		}
HXDLIN(  33)		if (!(_hx_tmp)) {
HXDLIN(  33)			HX_STACK_DO_THROW( ::lime::_internal::unifill::InvalidCodePoint_obj::__alloc( HX_CTX ,code));
            		}
HXDLIN(  33)		int this1 = code;
HXDLIN(  33)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CodePoint_Impl__obj,subInt,return )

int CodePoint_Impl__obj::_new(int code){
            	HX_STACKFRAME(&_hx_pos_1297f01fb39de7fa_47__new)
HXDLIN(  47)		int this1 = code;
HXDLIN(  47)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CodePoint_Impl__obj,_new,return )

::String CodePoint_Impl__obj::toString(int this1){
            	HX_GC_STACKFRAME(&_hx_pos_1297f01fb39de7fa_54_toString)
HXDLIN(  54)		 ::haxe::io::BytesBuffer buf =  ::haxe::io::BytesBuffer_obj::__alloc( HX_CTX );
HXDLIN(  54)		if ((this1 <= 127)) {
HXDLIN(  54)			buf->b->push(this1);
            		}
            		else {
HXDLIN(  54)			if ((this1 <= 2047)) {
HXDLIN(  54)				buf->b->push((192 | (this1 >> 6)));
HXDLIN(  54)				buf->b->push((128 | (this1 & 63)));
            			}
            			else {
HXDLIN(  54)				if ((this1 <= 65535)) {
HXDLIN(  54)					buf->b->push((224 | (this1 >> 12)));
HXDLIN(  54)					buf->b->push((128 | ((this1 >> 6) & 63)));
HXDLIN(  54)					buf->b->push((128 | (this1 & 63)));
            				}
            				else {
HXDLIN(  54)					if ((this1 <= 1114111)) {
HXDLIN(  54)						buf->b->push((240 | (this1 >> 18)));
HXDLIN(  54)						buf->b->push((128 | ((this1 >> 12) & 63)));
HXDLIN(  54)						buf->b->push((128 | ((this1 >> 6) & 63)));
HXDLIN(  54)						buf->b->push((128 | (this1 & 63)));
            					}
            					else {
HXDLIN(  54)						HX_STACK_DO_THROW( ::lime::_internal::unifill::InvalidCodePoint_obj::__alloc( HX_CTX ,this1));
            					}
            				}
            			}
            		}
HXDLIN(  54)		::String this2 = buf->getBytes()->toString();
HXDLIN(  54)		::String this3 = this2;
HXDLIN(  54)		return this3;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CodePoint_Impl__obj,toString,return )

int CodePoint_Impl__obj::toInt(int this1){
            	HX_STACKFRAME(&_hx_pos_1297f01fb39de7fa_58_toInt)
HXDLIN(  58)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CodePoint_Impl__obj,toInt,return )


CodePoint_Impl__obj::CodePoint_Impl__obj()
{
}

bool CodePoint_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"sub") ) { outValue = sub_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"cons") ) { outValue = cons_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"snoc") ) { outValue = snoc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toInt") ) { outValue = toInt_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"addInt") ) { outValue = addInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"subInt") ) { outValue = subInt_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fromInt") ) { outValue = fromInt_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *CodePoint_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *CodePoint_Impl__obj_sStaticStorageInfo = 0;
#endif

hx::Class CodePoint_Impl__obj::__mClass;

static ::String CodePoint_Impl__obj_sStaticFields[] = {
	HX_("fromInt",a5,dd,fa,57),
	HX_("cons",f1,b9,c4,41),
	HX_("snoc",6f,62,57,4c),
	HX_("addInt",4e,1d,01,9f),
	HX_("sub",80,a9,57,00),
	HX_("subInt",4f,0b,eb,99),
	HX_("_new",61,15,1f,3f),
	HX_("toString",ac,d0,6e,38),
	HX_("toInt",34,be,11,14),
	::String(null())
};

void CodePoint_Impl__obj::__register()
{
	CodePoint_Impl__obj _hx_dummy;
	CodePoint_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("lime._internal.unifill._CodePoint.CodePoint_Impl_",5f,3f,3f,a8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CodePoint_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(CodePoint_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< CodePoint_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CodePoint_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CodePoint_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace _internal
} // end namespace unifill
} // end namespace _CodePoint
