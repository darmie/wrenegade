// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_38344beec7696400
#define INCLUDED_38344beec7696400
#include "cpp/Int64.h"
#endif
#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime__internal_backend_native_NativeCFFI
#include <lime/_internal/backend/native/NativeCFFI.h>
#endif
#ifndef INCLUDED_lime__internal_backend_native_NativeOpenGLRenderContext
#include <lime/_internal/backend/native/NativeOpenGLRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLObject
#include <lime/graphics/opengl/GLObject.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLBuffer_GLBuffer_Impl_
#include <lime/graphics/opengl/_GLBuffer/GLBuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLFramebuffer_GLFramebuffer_Impl_
#include <lime/graphics/opengl/_GLFramebuffer/GLFramebuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLProgram_GLProgram_Impl_
#include <lime/graphics/opengl/_GLProgram/GLProgram_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLQuery_GLQuery_Impl_
#include <lime/graphics/opengl/_GLQuery/GLQuery_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLRenderbuffer_GLRenderbuffer_Impl_
#include <lime/graphics/opengl/_GLRenderbuffer/GLRenderbuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLTexture_GLTexture_Impl_
#include <lime/graphics/opengl/_GLTexture/GLTexture_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_compressed_3DC_texture
#include <lime/graphics/opengl/ext/AMD_compressed_3DC_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_compressed_ATC_texture
#include <lime/graphics/opengl/ext/AMD_compressed_ATC_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_performance_monitor
#include <lime/graphics/opengl/ext/AMD_performance_monitor.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_AMD_program_binary_Z400
#include <lime/graphics/opengl/ext/AMD_program_binary_Z400.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_framebuffer_blit
#include <lime/graphics/opengl/ext/ANGLE_framebuffer_blit.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_framebuffer_multisample
#include <lime/graphics/opengl/ext/ANGLE_framebuffer_multisample.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_instanced_arrays
#include <lime/graphics/opengl/ext/ANGLE_instanced_arrays.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_pack_reverse_row_order
#include <lime/graphics/opengl/ext/ANGLE_pack_reverse_row_order.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_texture_compression_dxt3
#include <lime/graphics/opengl/ext/ANGLE_texture_compression_dxt3.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_texture_compression_dxt5
#include <lime/graphics/opengl/ext/ANGLE_texture_compression_dxt5.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_texture_usage
#include <lime/graphics/opengl/ext/ANGLE_texture_usage.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ANGLE_translated_shader_source
#include <lime/graphics/opengl/ext/ANGLE_translated_shader_source.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_copy_texture_levels
#include <lime/graphics/opengl/ext/APPLE_copy_texture_levels.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_framebuffer_multisample
#include <lime/graphics/opengl/ext/APPLE_framebuffer_multisample.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_rgb_422
#include <lime/graphics/opengl/ext/APPLE_rgb_422.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_sync
#include <lime/graphics/opengl/ext/APPLE_sync.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_texture_format_BGRA8888
#include <lime/graphics/opengl/ext/APPLE_texture_format_BGRA8888.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_APPLE_texture_max_level
#include <lime/graphics/opengl/ext/APPLE_texture_max_level.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ARM_mali_program_binary
#include <lime/graphics/opengl/ext/ARM_mali_program_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ARM_mali_shader_binary
#include <lime/graphics/opengl/ext/ARM_mali_shader_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_ARM_rgba8
#include <lime/graphics/opengl/ext/ARM_rgba8.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_DMP_shader_binary
#include <lime/graphics/opengl/ext/DMP_shader_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_bgra
#include <lime/graphics/opengl/ext/EXT_bgra.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_blend_minmax
#include <lime/graphics/opengl/ext/EXT_blend_minmax.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_color_buffer_float
#include <lime/graphics/opengl/ext/EXT_color_buffer_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_color_buffer_half_float
#include <lime/graphics/opengl/ext/EXT_color_buffer_half_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_debug_label
#include <lime/graphics/opengl/ext/EXT_debug_label.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_debug_marker
#include <lime/graphics/opengl/ext/EXT_debug_marker.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_discard_framebuffer
#include <lime/graphics/opengl/ext/EXT_discard_framebuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_map_buffer_range
#include <lime/graphics/opengl/ext/EXT_map_buffer_range.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_multi_draw_arrays
#include <lime/graphics/opengl/ext/EXT_multi_draw_arrays.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_multisampled_render_to_texture
#include <lime/graphics/opengl/ext/EXT_multisampled_render_to_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_multiview_draw_buffers
#include <lime/graphics/opengl/ext/EXT_multiview_draw_buffers.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_occlusion_query_boolean
#include <lime/graphics/opengl/ext/EXT_occlusion_query_boolean.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_packed_depth_stencil
#include <lime/graphics/opengl/ext/EXT_packed_depth_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_read_format_bgra
#include <lime/graphics/opengl/ext/EXT_read_format_bgra.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_robustness
#include <lime/graphics/opengl/ext/EXT_robustness.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_sRGB
#include <lime/graphics/opengl/ext/EXT_sRGB.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_separate_shader_objects
#include <lime/graphics/opengl/ext/EXT_separate_shader_objects.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_shader_framebuffer_fetch
#include <lime/graphics/opengl/ext/EXT_shader_framebuffer_fetch.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_shader_texture_lod
#include <lime/graphics/opengl/ext/EXT_shader_texture_lod.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_shadow_samplers
#include <lime/graphics/opengl/ext/EXT_shadow_samplers.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_compression_dxt1
#include <lime/graphics/opengl/ext/EXT_texture_compression_dxt1.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_compression_s3tc
#include <lime/graphics/opengl/ext/EXT_texture_compression_s3tc.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_filter_anisotropic
#include <lime/graphics/opengl/ext/EXT_texture_filter_anisotropic.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_format_BGRA8888
#include <lime/graphics/opengl/ext/EXT_texture_format_BGRA8888.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_rg
#include <lime/graphics/opengl/ext/EXT_texture_rg.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_storage
#include <lime/graphics/opengl/ext/EXT_texture_storage.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_texture_type_2_10_10_10_REV
#include <lime/graphics/opengl/ext/EXT_texture_type_2_10_10_10_REV.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_EXT_unpack_subimage
#include <lime/graphics/opengl/ext/EXT_unpack_subimage.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_FJ_shader_binary_GCCSO
#include <lime/graphics/opengl/ext/FJ_shader_binary_GCCSO.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_multisampled_render_to_texture
#include <lime/graphics/opengl/ext/IMG_multisampled_render_to_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_program_binary
#include <lime/graphics/opengl/ext/IMG_program_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_read_format
#include <lime/graphics/opengl/ext/IMG_read_format.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_shader_binary
#include <lime/graphics/opengl/ext/IMG_shader_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_IMG_texture_compression_pvrtc
#include <lime/graphics/opengl/ext/IMG_texture_compression_pvrtc.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_KHR_debug
#include <lime/graphics/opengl/ext/KHR_debug.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_KHR_texture_compression_astc_ldr
#include <lime/graphics/opengl/ext/KHR_texture_compression_astc_ldr.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_coverage_sample
#include <lime/graphics/opengl/ext/NV_coverage_sample.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_depth_nonlinear
#include <lime/graphics/opengl/ext/NV_depth_nonlinear.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_draw_buffers
#include <lime/graphics/opengl/ext/NV_draw_buffers.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_fbo_color_attachments
#include <lime/graphics/opengl/ext/NV_fbo_color_attachments.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_fence
#include <lime/graphics/opengl/ext/NV_fence.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_buffer
#include <lime/graphics/opengl/ext/NV_read_buffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_buffer_front
#include <lime/graphics/opengl/ext/NV_read_buffer_front.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_depth
#include <lime/graphics/opengl/ext/NV_read_depth.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_depth_stencil
#include <lime/graphics/opengl/ext/NV_read_depth_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_read_stencil
#include <lime/graphics/opengl/ext/NV_read_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_texture_compression_s3tc_update
#include <lime/graphics/opengl/ext/NV_texture_compression_s3tc_update.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_NV_texture_npot_2D_mipmap
#include <lime/graphics/opengl/ext/NV_texture_npot_2D_mipmap.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_EGL_image
#include <lime/graphics/opengl/ext/OES_EGL_image.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_EGL_image_external
#include <lime/graphics/opengl/ext/OES_EGL_image_external.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_compressed_ETC1_RGB8_texture
#include <lime/graphics/opengl/ext/OES_compressed_ETC1_RGB8_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_compressed_paletted_texture
#include <lime/graphics/opengl/ext/OES_compressed_paletted_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_depth24
#include <lime/graphics/opengl/ext/OES_depth24.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_depth32
#include <lime/graphics/opengl/ext/OES_depth32.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_depth_texture
#include <lime/graphics/opengl/ext/OES_depth_texture.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_element_index_uint
#include <lime/graphics/opengl/ext/OES_element_index_uint.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_get_program_binary
#include <lime/graphics/opengl/ext/OES_get_program_binary.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_mapbuffer
#include <lime/graphics/opengl/ext/OES_mapbuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_packed_depth_stencil
#include <lime/graphics/opengl/ext/OES_packed_depth_stencil.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_required_internalformat
#include <lime/graphics/opengl/ext/OES_required_internalformat.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_rgb8_rgba8
#include <lime/graphics/opengl/ext/OES_rgb8_rgba8.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_standard_derivatives
#include <lime/graphics/opengl/ext/OES_standard_derivatives.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_stencil1
#include <lime/graphics/opengl/ext/OES_stencil1.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_stencil4
#include <lime/graphics/opengl/ext/OES_stencil4.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_surfaceless_context
#include <lime/graphics/opengl/ext/OES_surfaceless_context.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_3D
#include <lime/graphics/opengl/ext/OES_texture_3D.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_float
#include <lime/graphics/opengl/ext/OES_texture_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_float_linear
#include <lime/graphics/opengl/ext/OES_texture_float_linear.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_half_float
#include <lime/graphics/opengl/ext/OES_texture_half_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_half_float_linear
#include <lime/graphics/opengl/ext/OES_texture_half_float_linear.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_texture_npot
#include <lime/graphics/opengl/ext/OES_texture_npot.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_vertex_array_object
#include <lime/graphics/opengl/ext/OES_vertex_array_object.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_vertex_half_float
#include <lime/graphics/opengl/ext/OES_vertex_half_float.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_OES_vertex_type_10_10_10_2
#include <lime/graphics/opengl/ext/OES_vertex_type_10_10_10_2.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_alpha_test
#include <lime/graphics/opengl/ext/QCOM_alpha_test.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_binning_control
#include <lime/graphics/opengl/ext/QCOM_binning_control.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_driver_control
#include <lime/graphics/opengl/ext/QCOM_driver_control.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_extended_get
#include <lime/graphics/opengl/ext/QCOM_extended_get.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_extended_get2
#include <lime/graphics/opengl/ext/QCOM_extended_get2.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_perfmon_global_mode
#include <lime/graphics/opengl/ext/QCOM_perfmon_global_mode.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_tiled_rendering
#include <lime/graphics/opengl/ext/QCOM_tiled_rendering.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_QCOM_writeonly_rendering
#include <lime/graphics/opengl/ext/QCOM_writeonly_rendering.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_ext_VIV_shader_binary
#include <lime/graphics/opengl/ext/VIV_shader_binary.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_lime_utils__DataPointer_DataPointer_Impl_
#include <lime/utils/_DataPointer/DataPointer_Impl_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_65c657fec0b420d3_36_new,"lime._internal.backend.native.NativeOpenGLRenderContext","new",0x66fa8113,"lime._internal.backend.native.NativeOpenGLRenderContext.new","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",36,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_663_activeTexture,"lime._internal.backend.native.NativeOpenGLRenderContext","activeTexture",0xce11c228,"lime._internal.backend.native.NativeOpenGLRenderContext.activeTexture","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",663,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_668_attachShader,"lime._internal.backend.native.NativeOpenGLRenderContext","attachShader",0xed8cf1b7,"lime._internal.backend.native.NativeOpenGLRenderContext.attachShader","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",668,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_689_beginQuery,"lime._internal.backend.native.NativeOpenGLRenderContext","beginQuery",0xda88b7cc,"lime._internal.backend.native.NativeOpenGLRenderContext.beginQuery","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",689,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_696_beginTransformFeedback,"lime._internal.backend.native.NativeOpenGLRenderContext","beginTransformFeedback",0xaf6218d5,"lime._internal.backend.native.NativeOpenGLRenderContext.beginTransformFeedback","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",696,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_703_bindAttribLocation,"lime._internal.backend.native.NativeOpenGLRenderContext","bindAttribLocation",0x853cb6e9,"lime._internal.backend.native.NativeOpenGLRenderContext.bindAttribLocation","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",703,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_708_bindBuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","bindBuffer",0xff93ae4a,"lime._internal.backend.native.NativeOpenGLRenderContext.bindBuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",708,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_720_bindBufferBase,"lime._internal.backend.native.NativeOpenGLRenderContext","bindBufferBase",0x4593af7b,"lime._internal.backend.native.NativeOpenGLRenderContext.bindBufferBase","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",720,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_727_bindBufferRange,"lime._internal.backend.native.NativeOpenGLRenderContext","bindBufferRange",0xd20b5b13,"lime._internal.backend.native.NativeOpenGLRenderContext.bindBufferRange","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",727,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_732_bindFramebuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","bindFramebuffer",0xcae83763,"lime._internal.backend.native.NativeOpenGLRenderContext.bindFramebuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",732,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_741_bindRenderbuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","bindRenderbuffer",0x46d451a0,"lime._internal.backend.native.NativeOpenGLRenderContext.bindRenderbuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",741,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_752_bindSampler,"lime._internal.backend.native.NativeOpenGLRenderContext","bindSampler",0x73ddf47e,"lime._internal.backend.native.NativeOpenGLRenderContext.bindSampler","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",752,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_757_bindTexture,"lime._internal.backend.native.NativeOpenGLRenderContext","bindTexture",0x8ef4f851,"lime._internal.backend.native.NativeOpenGLRenderContext.bindTexture","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",757,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_769_bindTransformFeedback,"lime._internal.backend.native.NativeOpenGLRenderContext","bindTransformFeedback",0xce1c3507,"lime._internal.backend.native.NativeOpenGLRenderContext.bindTransformFeedback","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",769,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_776_bindVertexArray,"lime._internal.backend.native.NativeOpenGLRenderContext","bindVertexArray",0x8a6b5a0b,"lime._internal.backend.native.NativeOpenGLRenderContext.bindVertexArray","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",776,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_783_blendColor,"lime._internal.backend.native.NativeOpenGLRenderContext","blendColor",0xe9894eff,"lime._internal.backend.native.NativeOpenGLRenderContext.blendColor","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",783,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_790_blendEquation,"lime._internal.backend.native.NativeOpenGLRenderContext","blendEquation",0x7a154770,"lime._internal.backend.native.NativeOpenGLRenderContext.blendEquation","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",790,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_797_blendEquationSeparate,"lime._internal.backend.native.NativeOpenGLRenderContext","blendEquationSeparate",0x35a012f3,"lime._internal.backend.native.NativeOpenGLRenderContext.blendEquationSeparate","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",797,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_804_blendFunc,"lime._internal.backend.native.NativeOpenGLRenderContext","blendFunc",0xc3e8b528,"lime._internal.backend.native.NativeOpenGLRenderContext.blendFunc","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",804,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_811_blendFuncSeparate,"lime._internal.backend.native.NativeOpenGLRenderContext","blendFuncSeparate",0x71abf8ab,"lime._internal.backend.native.NativeOpenGLRenderContext.blendFuncSeparate","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",811,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_818_blitFramebuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","blitFramebuffer",0xd22497eb,"lime._internal.backend.native.NativeOpenGLRenderContext.blitFramebuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",818,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_825_bufferData,"lime._internal.backend.native.NativeOpenGLRenderContext","bufferData",0x9a48daf7,"lime._internal.backend.native.NativeOpenGLRenderContext.bufferData","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",825,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_832_bufferSubData,"lime._internal.backend.native.NativeOpenGLRenderContext","bufferSubData",0xbd4ca51d,"lime._internal.backend.native.NativeOpenGLRenderContext.bufferSubData","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",832,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_839_checkFramebufferStatus,"lime._internal.backend.native.NativeOpenGLRenderContext","checkFramebufferStatus",0xed1b9144,"lime._internal.backend.native.NativeOpenGLRenderContext.checkFramebufferStatus","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",839,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_848_clear,"lime._internal.backend.native.NativeOpenGLRenderContext","clear",0xaa95f500,"lime._internal.backend.native.NativeOpenGLRenderContext.clear","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",848,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_855_clearBufferfi,"lime._internal.backend.native.NativeOpenGLRenderContext","clearBufferfi",0x57c30763,"lime._internal.backend.native.NativeOpenGLRenderContext.clearBufferfi","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",855,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_862_clearBufferfv,"lime._internal.backend.native.NativeOpenGLRenderContext","clearBufferfv",0x57c30770,"lime._internal.backend.native.NativeOpenGLRenderContext.clearBufferfv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",862,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_869_clearBufferiv,"lime._internal.backend.native.NativeOpenGLRenderContext","clearBufferiv",0x57c30a0d,"lime._internal.backend.native.NativeOpenGLRenderContext.clearBufferiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",869,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_876_clearBufferuiv,"lime._internal.backend.native.NativeOpenGLRenderContext","clearBufferuiv",0x72eed182,"lime._internal.backend.native.NativeOpenGLRenderContext.clearBufferuiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",876,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_883_clearColor,"lime._internal.backend.native.NativeOpenGLRenderContext","clearColor",0x263bcc43,"lime._internal.backend.native.NativeOpenGLRenderContext.clearColor","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",883,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_890_clearDepthf,"lime._internal.backend.native.NativeOpenGLRenderContext","clearDepthf",0xf5191b23,"lime._internal.backend.native.NativeOpenGLRenderContext.clearDepthf","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",890,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_897_clearStencil,"lime._internal.backend.native.NativeOpenGLRenderContext","clearStencil",0x969790dc,"lime._internal.backend.native.NativeOpenGLRenderContext.clearStencil","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",897,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_904_clientWaitSync,"lime._internal.backend.native.NativeOpenGLRenderContext","clientWaitSync",0xed285f08,"lime._internal.backend.native.NativeOpenGLRenderContext.clientWaitSync","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",904,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_913_colorMask,"lime._internal.backend.native.NativeOpenGLRenderContext","colorMask",0xe01084e2,"lime._internal.backend.native.NativeOpenGLRenderContext.colorMask","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",913,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_920_compileShader,"lime._internal.backend.native.NativeOpenGLRenderContext","compileShader",0x521a1f6b,"lime._internal.backend.native.NativeOpenGLRenderContext.compileShader","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",920,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_928_compressedTexImage2D,"lime._internal.backend.native.NativeOpenGLRenderContext","compressedTexImage2D",0x73112e94,"lime._internal.backend.native.NativeOpenGLRenderContext.compressedTexImage2D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",928,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_936_compressedTexImage3D,"lime._internal.backend.native.NativeOpenGLRenderContext","compressedTexImage3D",0x73112f73,"lime._internal.backend.native.NativeOpenGLRenderContext.compressedTexImage3D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",936,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_944_compressedTexSubImage2D,"lime._internal.backend.native.NativeOpenGLRenderContext","compressedTexSubImage2D",0xa5751206,"lime._internal.backend.native.NativeOpenGLRenderContext.compressedTexSubImage2D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",944,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_952_compressedTexSubImage3D,"lime._internal.backend.native.NativeOpenGLRenderContext","compressedTexSubImage3D",0xa57512e5,"lime._internal.backend.native.NativeOpenGLRenderContext.compressedTexSubImage3D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",952,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_959_copyBufferSubData,"lime._internal.backend.native.NativeOpenGLRenderContext","copyBufferSubData",0x68ef01a8,"lime._internal.backend.native.NativeOpenGLRenderContext.copyBufferSubData","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",959,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_966_copyTexImage2D,"lime._internal.backend.native.NativeOpenGLRenderContext","copyTexImage2D",0xe7c7c708,"lime._internal.backend.native.NativeOpenGLRenderContext.copyTexImage2D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",966,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_973_copyTexSubImage2D,"lime._internal.backend.native.NativeOpenGLRenderContext","copyTexSubImage2D",0x4b9a3a12,"lime._internal.backend.native.NativeOpenGLRenderContext.copyTexSubImage2D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",973,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_980_copyTexSubImage3D,"lime._internal.backend.native.NativeOpenGLRenderContext","copyTexSubImage3D",0x4b9a3af1,"lime._internal.backend.native.NativeOpenGLRenderContext.copyTexSubImage3D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",980,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_985_createBuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","createBuffer",0x2dff1e09,"lime._internal.backend.native.NativeOpenGLRenderContext.createBuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",985,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_998_createFramebuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","createFramebuffer",0x73d45344,"lime._internal.backend.native.NativeOpenGLRenderContext.createFramebuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",998,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1011_createProgram,"lime._internal.backend.native.NativeOpenGLRenderContext","createProgram",0x53a3d15b,"lime._internal.backend.native.NativeOpenGLRenderContext.createProgram","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1011,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1024_createQuery,"lime._internal.backend.native.NativeOpenGLRenderContext","createQuery",0x7b08de1f,"lime._internal.backend.native.NativeOpenGLRenderContext.createQuery","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1024,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1037_createRenderbuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","createRenderbuffer",0x6c809a9f,"lime._internal.backend.native.NativeOpenGLRenderContext.createRenderbuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1037,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1050_createSampler,"lime._internal.backend.native.NativeOpenGLRenderContext","createSampler",0xe3744bdf,"lime._internal.backend.native.NativeOpenGLRenderContext.createSampler","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1050,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1063_createShader,"lime._internal.backend.native.NativeOpenGLRenderContext","createShader",0x7a8b202e,"lime._internal.backend.native.NativeOpenGLRenderContext.createShader","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1063,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1076_createTexture,"lime._internal.backend.native.NativeOpenGLRenderContext","createTexture",0xfe8b4fb2,"lime._internal.backend.native.NativeOpenGLRenderContext.createTexture","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1076,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1089_createTransformFeedback,"lime._internal.backend.native.NativeOpenGLRenderContext","createTransformFeedback",0x3febefa8,"lime._internal.backend.native.NativeOpenGLRenderContext.createTransformFeedback","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1089,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1102_createVertexArray,"lime._internal.backend.native.NativeOpenGLRenderContext","createVertexArray",0x335775ec,"lime._internal.backend.native.NativeOpenGLRenderContext.createVertexArray","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1102,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1117_cullFace,"lime._internal.backend.native.NativeOpenGLRenderContext","cullFace",0xcd2ecddc,"lime._internal.backend.native.NativeOpenGLRenderContext.cullFace","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1117,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1122_deleteBuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","deleteBuffer",0x72420478,"lime._internal.backend.native.NativeOpenGLRenderContext.deleteBuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1122,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1130_deleteFramebuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","deleteFramebuffer",0xf6ecba75,"lime._internal.backend.native.NativeOpenGLRenderContext.deleteFramebuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1130,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1138_deleteProgram,"lime._internal.backend.native.NativeOpenGLRenderContext","deleteProgram",0xc9ea8c0c,"lime._internal.backend.native.NativeOpenGLRenderContext.deleteProgram","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1138,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1146_deleteQuery,"lime._internal.backend.native.NativeOpenGLRenderContext","deleteQuery",0xe182da90,"lime._internal.backend.native.NativeOpenGLRenderContext.deleteQuery","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1146,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1154_deleteRenderbuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","deleteRenderbuffer",0x9ec27e4e,"lime._internal.backend.native.NativeOpenGLRenderContext.deleteRenderbuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1154,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1162_deleteSampler,"lime._internal.backend.native.NativeOpenGLRenderContext","deleteSampler",0x59bb0690,"lime._internal.backend.native.NativeOpenGLRenderContext.deleteSampler","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1162,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1170_deleteShader,"lime._internal.backend.native.NativeOpenGLRenderContext","deleteShader",0xbece069d,"lime._internal.backend.native.NativeOpenGLRenderContext.deleteShader","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1170,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1180_deleteSync,"lime._internal.backend.native.NativeOpenGLRenderContext","deleteSync",0xa681b3d3,"lime._internal.backend.native.NativeOpenGLRenderContext.deleteSync","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1180,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1185_deleteTexture,"lime._internal.backend.native.NativeOpenGLRenderContext","deleteTexture",0x74d20a63,"lime._internal.backend.native.NativeOpenGLRenderContext.deleteTexture","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1185,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1193_deleteTransformFeedback,"lime._internal.backend.native.NativeOpenGLRenderContext","deleteTransformFeedback",0x3d675199,"lime._internal.backend.native.NativeOpenGLRenderContext.deleteTransformFeedback","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1193,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1201_deleteVertexArray,"lime._internal.backend.native.NativeOpenGLRenderContext","deleteVertexArray",0xb66fdd1d,"lime._internal.backend.native.NativeOpenGLRenderContext.deleteVertexArray","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1201,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1211_depthFunc,"lime._internal.backend.native.NativeOpenGLRenderContext","depthFunc",0x5694feda,"lime._internal.backend.native.NativeOpenGLRenderContext.depthFunc","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1211,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1218_depthMask,"lime._internal.backend.native.NativeOpenGLRenderContext","depthMask",0x5b265482,"lime._internal.backend.native.NativeOpenGLRenderContext.depthMask","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1218,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1225_depthRangef,"lime._internal.backend.native.NativeOpenGLRenderContext","depthRangef",0x2d3e051f,"lime._internal.backend.native.NativeOpenGLRenderContext.depthRangef","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1225,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1230_detachShader,"lime._internal.backend.native.NativeOpenGLRenderContext","detachShader",0x25c2f1c5,"lime._internal.backend.native.NativeOpenGLRenderContext.detachShader","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1230,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1244_disable,"lime._internal.backend.native.NativeOpenGLRenderContext","disable",0xf9d0f01b,"lime._internal.backend.native.NativeOpenGLRenderContext.disable","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1244,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1251_disableVertexAttribArray,"lime._internal.backend.native.NativeOpenGLRenderContext","disableVertexAttribArray",0xf3edba50,"lime._internal.backend.native.NativeOpenGLRenderContext.disableVertexAttribArray","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1251,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1258_drawArrays,"lime._internal.backend.native.NativeOpenGLRenderContext","drawArrays",0x00890f8b,"lime._internal.backend.native.NativeOpenGLRenderContext.drawArrays","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1258,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1265_drawArraysInstanced,"lime._internal.backend.native.NativeOpenGLRenderContext","drawArraysInstanced",0xd8b98a24,"lime._internal.backend.native.NativeOpenGLRenderContext.drawArraysInstanced","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1265,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1278_drawBuffers,"lime._internal.backend.native.NativeOpenGLRenderContext","drawBuffers",0xee7c0382,"lime._internal.backend.native.NativeOpenGLRenderContext.drawBuffers","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1278,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1285_drawElements,"lime._internal.backend.native.NativeOpenGLRenderContext","drawElements",0x94cce348,"lime._internal.backend.native.NativeOpenGLRenderContext.drawElements","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1285,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1292_drawElementsInstanced,"lime._internal.backend.native.NativeOpenGLRenderContext","drawElementsInstanced",0x7bddd6c7,"lime._internal.backend.native.NativeOpenGLRenderContext.drawElementsInstanced","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1292,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1299_drawRangeElements,"lime._internal.backend.native.NativeOpenGLRenderContext","drawRangeElements",0x08f27263,"lime._internal.backend.native.NativeOpenGLRenderContext.drawRangeElements","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1299,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1306_enable,"lime._internal.backend.native.NativeOpenGLRenderContext","enable",0x89802fb0,"lime._internal.backend.native.NativeOpenGLRenderContext.enable","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1306,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1313_enableVertexAttribArray,"lime._internal.backend.native.NativeOpenGLRenderContext","enableVertexAttribArray",0x1b51a31b,"lime._internal.backend.native.NativeOpenGLRenderContext.enableVertexAttribArray","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1313,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1320_endQuery,"lime._internal.backend.native.NativeOpenGLRenderContext","endQuery",0x7ce5039a,"lime._internal.backend.native.NativeOpenGLRenderContext.endQuery","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1320,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1327_endTransformFeedback,"lime._internal.backend.native.NativeOpenGLRenderContext","endTransformFeedback",0xf167e1a3,"lime._internal.backend.native.NativeOpenGLRenderContext.endTransformFeedback","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1327,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1334_fenceSync,"lime._internal.backend.native.NativeOpenGLRenderContext","fenceSync",0x2ba2d29f,"lime._internal.backend.native.NativeOpenGLRenderContext.fenceSync","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1334,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1343_finish,"lime._internal.backend.native.NativeOpenGLRenderContext","finish",0x1777c180,"lime._internal.backend.native.NativeOpenGLRenderContext.finish","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1343,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1350_flush,"lime._internal.backend.native.NativeOpenGLRenderContext","flush",0x64d5e637,"lime._internal.backend.native.NativeOpenGLRenderContext.flush","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1350,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1357_framebufferRenderbuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","framebufferRenderbuffer",0xa5aa3996,"lime._internal.backend.native.NativeOpenGLRenderContext.framebufferRenderbuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1357,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1364_framebufferTexture2D,"lime._internal.backend.native.NativeOpenGLRenderContext","framebufferTexture2D",0x72d5bcad,"lime._internal.backend.native.NativeOpenGLRenderContext.framebufferTexture2D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1364,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1371_framebufferTextureLayer,"lime._internal.backend.native.NativeOpenGLRenderContext","framebufferTextureLayer",0x02b41bb6,"lime._internal.backend.native.NativeOpenGLRenderContext.framebufferTextureLayer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1371,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1378_frontFace,"lime._internal.backend.native.NativeOpenGLRenderContext","frontFace",0x3d0dbad9,"lime._internal.backend.native.NativeOpenGLRenderContext.frontFace","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1378,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1385_generateMipmap,"lime._internal.backend.native.NativeOpenGLRenderContext","generateMipmap",0x5e5eccca,"lime._internal.backend.native.NativeOpenGLRenderContext.generateMipmap","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1385,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1407_getActiveAttrib,"lime._internal.backend.native.NativeOpenGLRenderContext","getActiveAttrib",0x46a8fc99,"lime._internal.backend.native.NativeOpenGLRenderContext.getActiveAttrib","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1407,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1432_getActiveUniform,"lime._internal.backend.native.NativeOpenGLRenderContext","getActiveUniform",0x096ad105,"lime._internal.backend.native.NativeOpenGLRenderContext.getActiveUniform","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1432,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1442_getActiveUniformBlocki,"lime._internal.backend.native.NativeOpenGLRenderContext","getActiveUniformBlocki",0xa7478561,"lime._internal.backend.native.NativeOpenGLRenderContext.getActiveUniformBlocki","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1442,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1451_getActiveUniformBlockiv,"lime._internal.backend.native.NativeOpenGLRenderContext","getActiveUniformBlockiv",0xb74d2ff5,"lime._internal.backend.native.NativeOpenGLRenderContext.getActiveUniformBlockiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1451,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1456_getActiveUniformBlockName,"lime._internal.backend.native.NativeOpenGLRenderContext","getActiveUniformBlockName",0xf7088473,"lime._internal.backend.native.NativeOpenGLRenderContext.getActiveUniformBlockName","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1456,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1472_getActiveUniformBlockParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getActiveUniformBlockParameter",0x84cc5281,"lime._internal.backend.native.NativeOpenGLRenderContext.getActiveUniformBlockParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1472,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1479_getActiveUniforms,"lime._internal.backend.native.NativeOpenGLRenderContext","getActiveUniforms",0x340c13ce,"lime._internal.backend.native.NativeOpenGLRenderContext.getActiveUniforms","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1479,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1491_getActiveUniformsiv,"lime._internal.backend.native.NativeOpenGLRenderContext","getActiveUniformsiv",0x5e137f3b,"lime._internal.backend.native.NativeOpenGLRenderContext.getActiveUniformsiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1491,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1496_getAttachedShaders,"lime._internal.backend.native.NativeOpenGLRenderContext","getAttachedShaders",0xfa833f61,"lime._internal.backend.native.NativeOpenGLRenderContext.getAttachedShaders","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1496,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1516_getAttribLocation,"lime._internal.backend.native.NativeOpenGLRenderContext","getAttribLocation",0x03fb7ec8,"lime._internal.backend.native.NativeOpenGLRenderContext.getAttribLocation","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1516,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1525_getBoolean,"lime._internal.backend.native.NativeOpenGLRenderContext","getBoolean",0xd4358c5f,"lime._internal.backend.native.NativeOpenGLRenderContext.getBoolean","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1525,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1534_getBooleanv,"lime._internal.backend.native.NativeOpenGLRenderContext","getBooleanv",0xdaa54737,"lime._internal.backend.native.NativeOpenGLRenderContext.getBooleanv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1534,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1540_getBufferParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getBufferParameter",0x7bc06940,"lime._internal.backend.native.NativeOpenGLRenderContext.getBufferParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1540,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1546_getBufferParameteri,"lime._internal.backend.native.NativeOpenGLRenderContext","getBufferParameteri",0xcc9baf29,"lime._internal.backend.native.NativeOpenGLRenderContext.getBufferParameteri","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1546,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1555_getBufferParameteri64v,"lime._internal.backend.native.NativeOpenGLRenderContext","getBufferParameteri64v",0x8dde97ef,"lime._internal.backend.native.NativeOpenGLRenderContext.getBufferParameteri64v","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1555,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1562_getBufferParameteriv,"lime._internal.backend.native.NativeOpenGLRenderContext","getBufferParameteriv",0x3b9d952d,"lime._internal.backend.native.NativeOpenGLRenderContext.getBufferParameteriv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1562,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1569_getBufferPointerv,"lime._internal.backend.native.NativeOpenGLRenderContext","getBufferPointerv",0x5e917162,"lime._internal.backend.native.NativeOpenGLRenderContext.getBufferPointerv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1569,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1578_getBufferSubData,"lime._internal.backend.native.NativeOpenGLRenderContext","getBufferSubData",0xe2223ba1,"lime._internal.backend.native.NativeOpenGLRenderContext.getBufferSubData","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1578,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1583_getContextAttributes,"lime._internal.backend.native.NativeOpenGLRenderContext","getContextAttributes",0xfc95301d,"lime._internal.backend.native.NativeOpenGLRenderContext.getContextAttributes","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1583,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1597_getError,"lime._internal.backend.native.NativeOpenGLRenderContext","getError",0xf3fdc1bf,"lime._internal.backend.native.NativeOpenGLRenderContext.getError","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1597,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1604_getExtension,"lime._internal.backend.native.NativeOpenGLRenderContext","getExtension",0x2f7c50f6,"lime._internal.backend.native.NativeOpenGLRenderContext.getExtension","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1604,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1644_getFloat,"lime._internal.backend.native.NativeOpenGLRenderContext","getFloat",0x836abb93,"lime._internal.backend.native.NativeOpenGLRenderContext.getFloat","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1644,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1653_getFloatv,"lime._internal.backend.native.NativeOpenGLRenderContext","getFloatv",0x79f96583,"lime._internal.backend.native.NativeOpenGLRenderContext.getFloatv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1653,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1660_getFragDataLocation,"lime._internal.backend.native.NativeOpenGLRenderContext","getFragDataLocation",0x2054923a,"lime._internal.backend.native.NativeOpenGLRenderContext.getFragDataLocation","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1660,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1667_getFramebufferAttachmentParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getFramebufferAttachmentParameter",0x041f7982,"lime._internal.backend.native.NativeOpenGLRenderContext.getFramebufferAttachmentParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1667,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1685_getFramebufferAttachmentParameteri,"lime._internal.backend.native.NativeOpenGLRenderContext","getFramebufferAttachmentParameteri",0x976ad8a7,"lime._internal.backend.native.NativeOpenGLRenderContext.getFramebufferAttachmentParameteri","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1685,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1694_getFramebufferAttachmentParameteriv,"lime._internal.backend.native.NativeOpenGLRenderContext","getFramebufferAttachmentParameteriv",0xe612b9ef,"lime._internal.backend.native.NativeOpenGLRenderContext.getFramebufferAttachmentParameteriv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1694,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1702_getIndexedParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getIndexedParameter",0x764422e1,"lime._internal.backend.native.NativeOpenGLRenderContext.getIndexedParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1702,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1708_getInteger,"lime._internal.backend.native.NativeOpenGLRenderContext","getInteger",0x6d525f75,"lime._internal.backend.native.NativeOpenGLRenderContext.getInteger","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1708,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1721_getInteger64,"lime._internal.backend.native.NativeOpenGLRenderContext","getInteger64",0x2e4115f3,"lime._internal.backend.native.NativeOpenGLRenderContext.getInteger64","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1721,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1732_getInteger64i,"lime._internal.backend.native.NativeOpenGLRenderContext","getInteger64i",0x4ab21f16,"lime._internal.backend.native.NativeOpenGLRenderContext.getInteger64i","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1732,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1739_getInteger64i_v,"lime._internal.backend.native.NativeOpenGLRenderContext","getInteger64i_v",0xf2c8e3cd,"lime._internal.backend.native.NativeOpenGLRenderContext.getInteger64i_v","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1739,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1746_getInteger64v,"lime._internal.backend.native.NativeOpenGLRenderContext","getInteger64v",0x4ab21f23,"lime._internal.backend.native.NativeOpenGLRenderContext.getInteger64v","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1746,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1753_getIntegeri_v,"lime._internal.backend.native.NativeOpenGLRenderContext","getIntegeri_v",0x4ad8f78b,"lime._internal.backend.native.NativeOpenGLRenderContext.getIntegeri_v","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1753,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1760_getIntegerv,"lime._internal.backend.native.NativeOpenGLRenderContext","getIntegerv",0x3ac12761,"lime._internal.backend.native.NativeOpenGLRenderContext.getIntegerv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1760,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1771_getInternalformati,"lime._internal.backend.native.NativeOpenGLRenderContext","getInternalformati",0x583a1c6c,"lime._internal.backend.native.NativeOpenGLRenderContext.getInternalformati","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1771,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1778_getInternalformativ,"lime._internal.backend.native.NativeOpenGLRenderContext","getInternalformativ",0xda9ec28a,"lime._internal.backend.native.NativeOpenGLRenderContext.getInternalformativ","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1778,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1786_getInternalformatParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getInternalformatParameter",0xed0d6c8c,"lime._internal.backend.native.NativeOpenGLRenderContext.getInternalformatParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1786,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1791_getParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getParameter",0x931bf320,"lime._internal.backend.native.NativeOpenGLRenderContext.getParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1791,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1865_getProgrami,"lime._internal.backend.native.NativeOpenGLRenderContext","getProgrami",0x9fbec7ce,"lime._internal.backend.native.NativeOpenGLRenderContext.getProgrami","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1865,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1874_getProgramiv,"lime._internal.backend.native.NativeOpenGLRenderContext","getProgramiv",0x27300ce8,"lime._internal.backend.native.NativeOpenGLRenderContext.getProgramiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1874,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1879_getProgramBinary,"lime._internal.backend.native.NativeOpenGLRenderContext","getProgramBinary",0x17fb7a9c,"lime._internal.backend.native.NativeOpenGLRenderContext.getProgramBinary","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1879,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1890_getProgramInfoLog,"lime._internal.backend.native.NativeOpenGLRenderContext","getProgramInfoLog",0x74de55bb,"lime._internal.backend.native.NativeOpenGLRenderContext.getProgramInfoLog","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1890,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1904_getProgramParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getProgramParameter",0x5a1f49ee,"lime._internal.backend.native.NativeOpenGLRenderContext.getProgramParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1904,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1909_getQuery,"lime._internal.backend.native.NativeOpenGLRenderContext","getQuery",0xdebe80ff,"lime._internal.backend.native.NativeOpenGLRenderContext.getQuery","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1909,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1915_getQueryi,"lime._internal.backend.native.NativeOpenGLRenderContext","getQueryi",0x07f25e8a,"lime._internal.backend.native.NativeOpenGLRenderContext.getQueryi","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1915,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1924_getQueryiv,"lime._internal.backend.native.NativeOpenGLRenderContext","getQueryiv",0xec205aac,"lime._internal.backend.native.NativeOpenGLRenderContext.getQueryiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1924,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1931_getQueryObjectui,"lime._internal.backend.native.NativeOpenGLRenderContext","getQueryObjectui",0xfc9426f2,"lime._internal.backend.native.NativeOpenGLRenderContext.getQueryObjectui","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1931,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1940_getQueryObjectuiv,"lime._internal.backend.native.NativeOpenGLRenderContext","getQueryObjectuiv",0x050ded44,"lime._internal.backend.native.NativeOpenGLRenderContext.getQueryObjectuiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1940,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1948_getQueryParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getQueryParameter",0x0a21fcaa,"lime._internal.backend.native.NativeOpenGLRenderContext.getQueryParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1948,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1953_getRenderbufferParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getRenderbufferParameter",0xe65111ea,"lime._internal.backend.native.NativeOpenGLRenderContext.getRenderbufferParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1953,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1959_getRenderbufferParameteri,"lime._internal.backend.native.NativeOpenGLRenderContext","getRenderbufferParameteri",0xa09e9b3f,"lime._internal.backend.native.NativeOpenGLRenderContext.getRenderbufferParameteri","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1959,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1968_getRenderbufferParameteriv,"lime._internal.backend.native.NativeOpenGLRenderContext","getRenderbufferParameteriv",0xea293c57,"lime._internal.backend.native.NativeOpenGLRenderContext.getRenderbufferParameteriv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1968,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1976_getSamplerParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getSamplerParameter",0xf3d55eea,"lime._internal.backend.native.NativeOpenGLRenderContext.getSamplerParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1976,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1982_getSamplerParameterf,"lime._internal.backend.native.NativeOpenGLRenderContext","getSamplerParameterf",0x66ddae3c,"lime._internal.backend.native.NativeOpenGLRenderContext.getSamplerParameterf","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1982,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1991_getSamplerParameterfv,"lime._internal.backend.native.NativeOpenGLRenderContext","getSamplerParameterfv",0x9b1ac6ba,"lime._internal.backend.native.NativeOpenGLRenderContext.getSamplerParameterfv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1991,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_1998_getSamplerParameteri,"lime._internal.backend.native.NativeOpenGLRenderContext","getSamplerParameteri",0x66ddae3f,"lime._internal.backend.native.NativeOpenGLRenderContext.getSamplerParameteri","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",1998,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2007_getSamplerParameteriv,"lime._internal.backend.native.NativeOpenGLRenderContext","getSamplerParameteriv",0x9b1ac957,"lime._internal.backend.native.NativeOpenGLRenderContext.getSamplerParameteriv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2007,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2014_getShaderi,"lime._internal.backend.native.NativeOpenGLRenderContext","getShaderi",0xb5bd235b,"lime._internal.backend.native.NativeOpenGLRenderContext.getShaderi","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2014,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2023_getShaderiv,"lime._internal.backend.native.NativeOpenGLRenderContext","getShaderiv",0x4fc1ccbb,"lime._internal.backend.native.NativeOpenGLRenderContext.getShaderiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2023,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2028_getShaderInfoLog,"lime._internal.backend.native.NativeOpenGLRenderContext","getShaderInfoLog",0x25e55908,"lime._internal.backend.native.NativeOpenGLRenderContext.getShaderInfoLog","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2028,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2042_getShaderParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getShaderParameter",0x9d677a7b,"lime._internal.backend.native.NativeOpenGLRenderContext.getShaderParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2042,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2048_getShaderPrecisionFormat,"lime._internal.backend.native.NativeOpenGLRenderContext","getShaderPrecisionFormat",0x78490967,"lime._internal.backend.native.NativeOpenGLRenderContext.getShaderPrecisionFormat","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2048,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2055_getShaderSource,"lime._internal.backend.native.NativeOpenGLRenderContext","getShaderSource",0xa88b14c9,"lime._internal.backend.native.NativeOpenGLRenderContext.getShaderSource","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2055,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2068_getString,"lime._internal.backend.native.NativeOpenGLRenderContext","getString",0x49d36afa,"lime._internal.backend.native.NativeOpenGLRenderContext.getString","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2068,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2081_getStringi,"lime._internal.backend.native.NativeOpenGLRenderContext","getStringi",0x4f2a302f,"lime._internal.backend.native.NativeOpenGLRenderContext.getStringi","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2081,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2094_getSupportedExtensions,"lime._internal.backend.native.NativeOpenGLRenderContext","getSupportedExtensions",0x8413e419,"lime._internal.backend.native.NativeOpenGLRenderContext.getSupportedExtensions","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2094,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2127_getSyncParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getSyncParameter",0xac11fcc5,"lime._internal.backend.native.NativeOpenGLRenderContext.getSyncParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2127,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2134_getSyncParameteri,"lime._internal.backend.native.NativeOpenGLRenderContext","getSyncParameteri",0xe3ab3004,"lime._internal.backend.native.NativeOpenGLRenderContext.getSyncParameteri","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2134,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2138_getSyncParameteriv,"lime._internal.backend.native.NativeOpenGLRenderContext","getSyncParameteriv",0x521ed3f2,"lime._internal.backend.native.NativeOpenGLRenderContext.getSyncParameteriv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2138,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2144_getTexParameter,"lime._internal.backend.native.NativeOpenGLRenderContext","getTexParameter",0xb65a09ab,"lime._internal.backend.native.NativeOpenGLRenderContext.getTexParameter","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2144,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2160_getTexParameterf,"lime._internal.backend.native.NativeOpenGLRenderContext","getTexParameterf",0xd86e6c5b,"lime._internal.backend.native.NativeOpenGLRenderContext.getTexParameterf","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2160,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2169_getTexParameterfv,"lime._internal.backend.native.NativeOpenGLRenderContext","getTexParameterfv",0x883063bb,"lime._internal.backend.native.NativeOpenGLRenderContext.getTexParameterfv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2169,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2176_getTexParameteri,"lime._internal.backend.native.NativeOpenGLRenderContext","getTexParameteri",0xd86e6c5e,"lime._internal.backend.native.NativeOpenGLRenderContext.getTexParameteri","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2176,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2185_getTexParameteriv,"lime._internal.backend.native.NativeOpenGLRenderContext","getTexParameteriv",0x88306658,"lime._internal.backend.native.NativeOpenGLRenderContext.getTexParameteriv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2185,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2190_getTransformFeedbackVarying,"lime._internal.backend.native.NativeOpenGLRenderContext","getTransformFeedbackVarying",0xe38f62c8,"lime._internal.backend.native.NativeOpenGLRenderContext.getTransformFeedbackVarying","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2190,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2216_getUniform,"lime._internal.backend.native.NativeOpenGLRenderContext","getUniform",0x0b9ae2eb,"lime._internal.backend.native.NativeOpenGLRenderContext.getUniform","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2216,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2320_getUniformf,"lime._internal.backend.native.NativeOpenGLRenderContext","getUniformf",0x1bebab1b,"lime._internal.backend.native.NativeOpenGLRenderContext.getUniformf","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2320,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2329_getUniformfv,"lime._internal.backend.native.NativeOpenGLRenderContext","getUniformfv",0x524a0cfb,"lime._internal.backend.native.NativeOpenGLRenderContext.getUniformfv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2329,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2336_getUniformi,"lime._internal.backend.native.NativeOpenGLRenderContext","getUniformi",0x1bebab1e,"lime._internal.backend.native.NativeOpenGLRenderContext.getUniformi","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2336,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2345_getUniformiv,"lime._internal.backend.native.NativeOpenGLRenderContext","getUniformiv",0x524a0f98,"lime._internal.backend.native.NativeOpenGLRenderContext.getUniformiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2345,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2352_getUniformui,"lime._internal.backend.native.NativeOpenGLRenderContext","getUniformui",0x524a19ff,"lime._internal.backend.native.NativeOpenGLRenderContext.getUniformui","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2352,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2361_getUniformuiv,"lime._internal.backend.native.NativeOpenGLRenderContext","getUniformuiv",0xae8ca597,"lime._internal.backend.native.NativeOpenGLRenderContext.getUniformuiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2361,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2368_getUniformBlockIndex,"lime._internal.backend.native.NativeOpenGLRenderContext","getUniformBlockIndex",0x831f1950,"lime._internal.backend.native.NativeOpenGLRenderContext.getUniformBlockIndex","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2368,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2378_getUniformIndices,"lime._internal.backend.native.NativeOpenGLRenderContext","getUniformIndices",0xb6598f7c,"lime._internal.backend.native.NativeOpenGLRenderContext.getUniformIndices","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2378,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2384_getUniformLocation,"lime._internal.backend.native.NativeOpenGLRenderContext","getUniformLocation",0xb6e07040,"lime._internal.backend.native.NativeOpenGLRenderContext.getUniformLocation","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2384,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2392_getVertexAttrib,"lime._internal.backend.native.NativeOpenGLRenderContext","getVertexAttrib",0x86a2a0b7,"lime._internal.backend.native.NativeOpenGLRenderContext.getVertexAttrib","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2392,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2398_getVertexAttribf,"lime._internal.backend.native.NativeOpenGLRenderContext","getVertexAttribf",0x47a9ffcf,"lime._internal.backend.native.NativeOpenGLRenderContext.getVertexAttribf","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2398,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2407_getVertexAttribfv,"lime._internal.backend.native.NativeOpenGLRenderContext","getVertexAttribfv",0x6d15d5c7,"lime._internal.backend.native.NativeOpenGLRenderContext.getVertexAttribfv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2407,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2414_getVertexAttribi,"lime._internal.backend.native.NativeOpenGLRenderContext","getVertexAttribi",0x47a9ffd2,"lime._internal.backend.native.NativeOpenGLRenderContext.getVertexAttribi","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2414,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2423_getVertexAttribIi,"lime._internal.backend.native.NativeOpenGLRenderContext","getVertexAttribIi",0x6d15bc77,"lime._internal.backend.native.NativeOpenGLRenderContext.getVertexAttribIi","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2423,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2432_getVertexAttribIiv,"lime._internal.backend.native.NativeOpenGLRenderContext","getVertexAttribIiv",0x05ef2c1f,"lime._internal.backend.native.NativeOpenGLRenderContext.getVertexAttribIiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2432,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2439_getVertexAttribIui,"lime._internal.backend.native.NativeOpenGLRenderContext","getVertexAttribIui",0x05ef3686,"lime._internal.backend.native.NativeOpenGLRenderContext.getVertexAttribIui","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2439,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2448_getVertexAttribIuiv,"lime._internal.backend.native.NativeOpenGLRenderContext","getVertexAttribIuiv",0x2b607f30,"lime._internal.backend.native.NativeOpenGLRenderContext.getVertexAttribIuiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2448,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2455_getVertexAttribiv,"lime._internal.backend.native.NativeOpenGLRenderContext","getVertexAttribiv",0x6d15d864,"lime._internal.backend.native.NativeOpenGLRenderContext.getVertexAttribiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2455,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2462_getVertexAttribPointerv,"lime._internal.backend.native.NativeOpenGLRenderContext","getVertexAttribPointerv",0x2aed50f0,"lime._internal.backend.native.NativeOpenGLRenderContext.getVertexAttribPointerv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2462,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2471_hint,"lime._internal.backend.native.NativeOpenGLRenderContext","hint",0xb0422974,"lime._internal.backend.native.NativeOpenGLRenderContext.hint","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2471,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2484_invalidateFramebuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","invalidateFramebuffer",0x0a76b8a5,"lime._internal.backend.native.NativeOpenGLRenderContext.invalidateFramebuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2484,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2497_invalidateSubFramebuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","invalidateSubFramebuffer",0x5690f295,"lime._internal.backend.native.NativeOpenGLRenderContext.invalidateSubFramebuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2497,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2504_isBuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","isBuffer",0x49fb3ef7,"lime._internal.backend.native.NativeOpenGLRenderContext.isBuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2504,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2512_isContextLost,"lime._internal.backend.native.NativeOpenGLRenderContext","isContextLost",0xa5478e1c,"lime._internal.backend.native.NativeOpenGLRenderContext.isContextLost","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2512,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2518_isEnabled,"lime._internal.backend.native.NativeOpenGLRenderContext","isEnabled",0x3e7c3aaa,"lime._internal.backend.native.NativeOpenGLRenderContext.isEnabled","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2518,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2527_isFramebuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","isFramebuffer",0xfad41396,"lime._internal.backend.native.NativeOpenGLRenderContext.isFramebuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2527,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2536_isProgram,"lime._internal.backend.native.NativeOpenGLRenderContext","isProgram",0xb44480ad,"lime._internal.backend.native.NativeOpenGLRenderContext.isProgram","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2536,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2545_isQuery,"lime._internal.backend.native.NativeOpenGLRenderContext","isQuery",0x42e8b4f1,"lime._internal.backend.native.NativeOpenGLRenderContext.isQuery","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2545,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2554_isRenderbuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","isRenderbuffer",0x0549220d,"lime._internal.backend.native.NativeOpenGLRenderContext.isRenderbuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2554,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2563_isSampler,"lime._internal.backend.native.NativeOpenGLRenderContext","isSampler",0x4414fb31,"lime._internal.backend.native.NativeOpenGLRenderContext.isSampler","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2563,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2572_isShader,"lime._internal.backend.native.NativeOpenGLRenderContext","isShader",0x9687411c,"lime._internal.backend.native.NativeOpenGLRenderContext.isShader","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2572,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2581_isSync,"lime._internal.backend.native.NativeOpenGLRenderContext","isSync",0xfabf0092,"lime._internal.backend.native.NativeOpenGLRenderContext.isSync","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2581,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2590_isTexture,"lime._internal.backend.native.NativeOpenGLRenderContext","isTexture",0x5f2bff04,"lime._internal.backend.native.NativeOpenGLRenderContext.isTexture","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2590,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2599_isTransformFeedback,"lime._internal.backend.native.NativeOpenGLRenderContext","isTransformFeedback",0xfb1bb97a,"lime._internal.backend.native.NativeOpenGLRenderContext.isTransformFeedback","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2599,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2608_isVertexArray,"lime._internal.backend.native.NativeOpenGLRenderContext","isVertexArray",0xba57363e,"lime._internal.backend.native.NativeOpenGLRenderContext.isVertexArray","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2608,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2617_lineWidth,"lime._internal.backend.native.NativeOpenGLRenderContext","lineWidth",0xcdaa7265,"lime._internal.backend.native.NativeOpenGLRenderContext.lineWidth","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2617,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2624_linkProgram,"lime._internal.backend.native.NativeOpenGLRenderContext","linkProgram",0x7d1ec95d,"lime._internal.backend.native.NativeOpenGLRenderContext.linkProgram","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2624,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2631_mapBufferRange,"lime._internal.backend.native.NativeOpenGLRenderContext","mapBufferRange",0x7e6ac98e,"lime._internal.backend.native.NativeOpenGLRenderContext.mapBufferRange","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2631,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2640_pauseTransformFeedback,"lime._internal.backend.native.NativeOpenGLRenderContext","pauseTransformFeedback",0xcb7cf568,"lime._internal.backend.native.NativeOpenGLRenderContext.pauseTransformFeedback","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2640,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2647_pixelStorei,"lime._internal.backend.native.NativeOpenGLRenderContext","pixelStorei",0x746b5041,"lime._internal.backend.native.NativeOpenGLRenderContext.pixelStorei","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2647,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2654_polygonOffset,"lime._internal.backend.native.NativeOpenGLRenderContext","polygonOffset",0xddb4d420,"lime._internal.backend.native.NativeOpenGLRenderContext.polygonOffset","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2654,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2661_programBinary,"lime._internal.backend.native.NativeOpenGLRenderContext","programBinary",0xf325e418,"lime._internal.backend.native.NativeOpenGLRenderContext.programBinary","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2661,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2668_programParameteri,"lime._internal.backend.native.NativeOpenGLRenderContext","programParameteri",0xb2043e37,"lime._internal.backend.native.NativeOpenGLRenderContext.programParameteri","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2668,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2675_readBuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","readBuffer",0xd0e5bca3,"lime._internal.backend.native.NativeOpenGLRenderContext.readBuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2675,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2682_readPixels,"lime._internal.backend.native.NativeOpenGLRenderContext","readPixels",0x8cfaeed0,"lime._internal.backend.native.NativeOpenGLRenderContext.readPixels","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2682,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2689_releaseShaderCompiler,"lime._internal.backend.native.NativeOpenGLRenderContext","releaseShaderCompiler",0x2eb2297e,"lime._internal.backend.native.NativeOpenGLRenderContext.releaseShaderCompiler","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2689,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2696_renderbufferStorage,"lime._internal.backend.native.NativeOpenGLRenderContext","renderbufferStorage",0x4af327b8,"lime._internal.backend.native.NativeOpenGLRenderContext.renderbufferStorage","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2696,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2703_renderbufferStorageMultisample,"lime._internal.backend.native.NativeOpenGLRenderContext","renderbufferStorageMultisample",0x2872268b,"lime._internal.backend.native.NativeOpenGLRenderContext.renderbufferStorageMultisample","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2703,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2710_resumeTransformFeedback,"lime._internal.backend.native.NativeOpenGLRenderContext","resumeTransformFeedback",0xdeccd5d7,"lime._internal.backend.native.NativeOpenGLRenderContext.resumeTransformFeedback","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2710,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2717_sampleCoverage,"lime._internal.backend.native.NativeOpenGLRenderContext","sampleCoverage",0x3ed25e5f,"lime._internal.backend.native.NativeOpenGLRenderContext.sampleCoverage","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2717,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2724_samplerParameterf,"lime._internal.backend.native.NativeOpenGLRenderContext","samplerParameterf",0x97a085b8,"lime._internal.backend.native.NativeOpenGLRenderContext.samplerParameterf","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2724,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2731_samplerParameteri,"lime._internal.backend.native.NativeOpenGLRenderContext","samplerParameteri",0x97a085bb,"lime._internal.backend.native.NativeOpenGLRenderContext.samplerParameteri","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2731,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2738_scissor,"lime._internal.backend.native.NativeOpenGLRenderContext","scissor",0x4d5fae4f,"lime._internal.backend.native.NativeOpenGLRenderContext.scissor","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2738,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2751_shaderBinary,"lime._internal.backend.native.NativeOpenGLRenderContext","shaderBinary",0x980979f3,"lime._internal.backend.native.NativeOpenGLRenderContext.shaderBinary","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2751,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2758_shaderSource,"lime._internal.backend.native.NativeOpenGLRenderContext","shaderSource",0xdd2f6ecd,"lime._internal.backend.native.NativeOpenGLRenderContext.shaderSource","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2758,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2765_stencilFunc,"lime._internal.backend.native.NativeOpenGLRenderContext","stencilFunc",0x34619f13,"lime._internal.backend.native.NativeOpenGLRenderContext.stencilFunc","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2765,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2772_stencilFuncSeparate,"lime._internal.backend.native.NativeOpenGLRenderContext","stencilFuncSeparate",0x76514596,"lime._internal.backend.native.NativeOpenGLRenderContext.stencilFuncSeparate","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2772,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2779_stencilMask,"lime._internal.backend.native.NativeOpenGLRenderContext","stencilMask",0x38f2f4bb,"lime._internal.backend.native.NativeOpenGLRenderContext.stencilMask","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2779,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2786_stencilMaskSeparate,"lime._internal.backend.native.NativeOpenGLRenderContext","stencilMaskSeparate",0x8a2c833e,"lime._internal.backend.native.NativeOpenGLRenderContext.stencilMaskSeparate","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2786,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2793_stencilOp,"lime._internal.backend.native.NativeOpenGLRenderContext","stencilOp",0x13393330,"lime._internal.backend.native.NativeOpenGLRenderContext.stencilOp","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2793,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2800_stencilOpSeparate,"lime._internal.backend.native.NativeOpenGLRenderContext","stencilOpSeparate",0xfa35beb3,"lime._internal.backend.native.NativeOpenGLRenderContext.stencilOpSeparate","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2800,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2808_texImage2D,"lime._internal.backend.native.NativeOpenGLRenderContext","texImage2D",0xc03c9873,"lime._internal.backend.native.NativeOpenGLRenderContext.texImage2D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2808,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2816_texImage3D,"lime._internal.backend.native.NativeOpenGLRenderContext","texImage3D",0xc03c9952,"lime._internal.backend.native.NativeOpenGLRenderContext.texImage3D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2816,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2823_texStorage2D,"lime._internal.backend.native.NativeOpenGLRenderContext","texStorage2D",0x0a59bdd3,"lime._internal.backend.native.NativeOpenGLRenderContext.texStorage2D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2823,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2830_texStorage3D,"lime._internal.backend.native.NativeOpenGLRenderContext","texStorage3D",0x0a59beb2,"lime._internal.backend.native.NativeOpenGLRenderContext.texStorage3D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2830,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2837_texParameterf,"lime._internal.backend.native.NativeOpenGLRenderContext","texParameterf",0xb398d5d7,"lime._internal.backend.native.NativeOpenGLRenderContext.texParameterf","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2837,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2844_texParameteri,"lime._internal.backend.native.NativeOpenGLRenderContext","texParameteri",0xb398d5da,"lime._internal.backend.native.NativeOpenGLRenderContext.texParameteri","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2844,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2851_texSubImage2D,"lime._internal.backend.native.NativeOpenGLRenderContext","texSubImage2D",0x9ff7dd87,"lime._internal.backend.native.NativeOpenGLRenderContext.texSubImage2D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2851,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2859_texSubImage3D,"lime._internal.backend.native.NativeOpenGLRenderContext","texSubImage3D",0x9ff7de66,"lime._internal.backend.native.NativeOpenGLRenderContext.texSubImage3D","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2859,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2865_toString,"lime._internal.backend.native.NativeOpenGLRenderContext","toString",0x596bb719,"lime._internal.backend.native.NativeOpenGLRenderContext.toString","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2865,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2877_transformFeedbackVaryings,"lime._internal.backend.native.NativeOpenGLRenderContext","transformFeedbackVaryings",0xe8c7c027,"lime._internal.backend.native.NativeOpenGLRenderContext.transformFeedbackVaryings","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2877,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2884_uniform1f,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform1f",0xc42ada3c,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform1f","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2884,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2891_uniform1fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform1fv",0xe1541aba,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform1fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2891,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2898_uniform1i,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform1i",0xc42ada3f,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform1i","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2898,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2905_uniform1iv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform1iv",0xe1541d57,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform1iv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2905,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2912_uniform1ui,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform1ui",0xe15427be,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform1ui","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2912,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2919_uniform1uiv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform1uiv",0x484e9ef8,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform1uiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2919,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2926_uniform2f,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform2f",0xc42adb1b,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform2f","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2926,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2933_uniform2fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform2fv",0xe154dcfb,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform2fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2933,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2940_uniform2i,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform2i",0xc42adb1e,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform2i","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2940,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2947_uniform2iv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform2iv",0xe154df98,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform2iv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2947,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2954_uniform2ui,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform2ui",0xe154e9ff,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform2ui","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2954,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2961_uniform2uiv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform2uiv",0x48f7d597,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform2uiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2961,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2968_uniform3f,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform3f",0xc42adbfa,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform3f","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2968,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2975_uniform3fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform3fv",0xe1559f3c,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform3fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2975,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2982_uniform3i,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform3i",0xc42adbfd,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform3i","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2982,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2989_uniform3iv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform3iv",0xe155a1d9,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform3iv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2989,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_2996_uniform3ui,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform3ui",0xe155ac40,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform3ui","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",2996,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3003_uniform3uiv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform3uiv",0x49a10c36,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform3uiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3003,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3010_uniform4f,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform4f",0xc42adcd9,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform4f","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3010,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3017_uniform4fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform4fv",0xe156617d,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform4fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3017,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3024_uniform4i,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform4i",0xc42adcdc,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform4i","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3024,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3031_uniform4iv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform4iv",0xe156641a,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform4iv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3031,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3038_uniform4ui,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform4ui",0xe1566e81,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform4ui","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3038,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3045_uniform4uiv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniform4uiv",0x4a4a42d5,"lime._internal.backend.native.NativeOpenGLRenderContext.uniform4uiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3045,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3052_uniformBlockBinding,"lime._internal.backend.native.NativeOpenGLRenderContext","uniformBlockBinding",0x8347437f,"lime._internal.backend.native.NativeOpenGLRenderContext.uniformBlockBinding","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3052,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3059_uniformMatrix2fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniformMatrix2fv",0xf77625fa,"lime._internal.backend.native.NativeOpenGLRenderContext.uniformMatrix2fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3059,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3066_uniformMatrix2x3fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniformMatrix2x3fv",0x697a71f5,"lime._internal.backend.native.NativeOpenGLRenderContext.uniformMatrix2x3fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3066,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3073_uniformMatrix2x4fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniformMatrix2x4fv",0x697b3436,"lime._internal.backend.native.NativeOpenGLRenderContext.uniformMatrix2x4fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3073,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3080_uniformMatrix3fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniformMatrix3fv",0xf776e83b,"lime._internal.backend.native.NativeOpenGLRenderContext.uniformMatrix3fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3080,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3087_uniformMatrix3x2fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniformMatrix3x2fv",0xfce04435,"lime._internal.backend.native.NativeOpenGLRenderContext.uniformMatrix3x2fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3087,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3094_uniformMatrix3x4fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniformMatrix3x4fv",0xfce1c8b7,"lime._internal.backend.native.NativeOpenGLRenderContext.uniformMatrix3x4fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3094,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3101_uniformMatrix4fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniformMatrix4fv",0xf777aa7c,"lime._internal.backend.native.NativeOpenGLRenderContext.uniformMatrix4fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3101,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3108_uniformMatrix4x2fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniformMatrix4x2fv",0x9046d8b6,"lime._internal.backend.native.NativeOpenGLRenderContext.uniformMatrix4x2fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3108,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3115_uniformMatrix4x3fv,"lime._internal.backend.native.NativeOpenGLRenderContext","uniformMatrix4x3fv",0x90479af7,"lime._internal.backend.native.NativeOpenGLRenderContext.uniformMatrix4x3fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3115,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3122_unmapBuffer,"lime._internal.backend.native.NativeOpenGLRenderContext","unmapBuffer",0x2cbdbaf6,"lime._internal.backend.native.NativeOpenGLRenderContext.unmapBuffer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3122,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3129_useProgram,"lime._internal.backend.native.NativeOpenGLRenderContext","useProgram",0xfd8188aa,"lime._internal.backend.native.NativeOpenGLRenderContext.useProgram","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3129,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3140_validateProgram,"lime._internal.backend.native.NativeOpenGLRenderContext","validateProgram",0xd295f1c1,"lime._internal.backend.native.NativeOpenGLRenderContext.validateProgram","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3140,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3147_vertexAttrib1f,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttrib1f",0x57078a90,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttrib1f","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3147,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3154_vertexAttrib1fv,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttrib1fv",0xcf91b3e6,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttrib1fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3154,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3161_vertexAttrib2f,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttrib2f",0x57078b6f,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttrib2f","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3161,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3168_vertexAttrib2fv,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttrib2fv",0xcf927627,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttrib2fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3168,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3175_vertexAttrib3f,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttrib3f",0x57078c4e,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttrib3f","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3175,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3182_vertexAttrib3fv,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttrib3fv",0xcf933868,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttrib3fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3182,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3189_vertexAttrib4f,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttrib4f",0x57078d2d,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttrib4f","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3189,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3196_vertexAttrib4fv,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttrib4fv",0xcf93faa9,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttrib4fv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3196,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3203_vertexAttribDivisor,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttribDivisor",0x22f98fe3,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttribDivisor","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3203,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3210_vertexAttribI4i,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttribI4i",0xcfa3be63,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttribI4i","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3210,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3219_vertexAttribI4iv,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttribI4iv",0xdfa2d8b3,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttribI4iv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3219,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3226_vertexAttribI4ui,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttribI4ui",0xdfa2e31a,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttribI4ui","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3226,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3235_vertexAttribI4uiv,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttribI4uiv",0xcee3d41c,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttribI4uiv","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3235,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3242_vertexAttribIPointer,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttribIPointer",0xb5fe212f,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttribIPointer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3242,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3249_vertexAttribPointer,"lime._internal.backend.native.NativeOpenGLRenderContext","vertexAttribPointer",0x03388b42,"lime._internal.backend.native.NativeOpenGLRenderContext.vertexAttribPointer","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3249,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3256_viewport,"lime._internal.backend.native.NativeOpenGLRenderContext","viewport",0xbda232d3,"lime._internal.backend.native.NativeOpenGLRenderContext.viewport","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3256,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3263_waitSync,"lime._internal.backend.native.NativeOpenGLRenderContext","waitSync",0x763f05dd,"lime._internal.backend.native.NativeOpenGLRenderContext.waitSync","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3263,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3268___contextLost,"lime._internal.backend.native.NativeOpenGLRenderContext","__contextLost",0xe49b7ec6,"lime._internal.backend.native.NativeOpenGLRenderContext.__contextLost","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3268,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3282___createObject,"lime._internal.backend.native.NativeOpenGLRenderContext","__createObject",0x5ba63828,"lime._internal.backend.native.NativeOpenGLRenderContext.__createObject","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3282,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3287___getObjectID,"lime._internal.backend.native.NativeOpenGLRenderContext","__getObjectID",0x68ffde63,"lime._internal.backend.native.NativeOpenGLRenderContext.__getObjectID","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3287,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3292___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3292,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3295___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3295,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3296___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3296,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3297___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3297,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3298___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3298,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3299___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3299,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3300___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3300,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3301___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3301,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3302___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3302,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3303___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3303,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3304___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3304,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3305___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3305,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3306___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3306,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3307___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3307,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3308___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3308,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3309___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3309,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3310___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3310,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3311___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3311,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3312___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3312,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3313___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3313,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3314___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3314,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3315___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3315,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3316___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3316,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3317___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3317,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3318___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3318,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3319___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3319,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3320___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3320,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3321___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3321,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3322___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3322,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3323___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3323,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3324___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3324,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3325___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3325,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3326___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3326,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3327___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3327,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3328___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3328,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3329___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3329,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3330___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3330,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3331___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3331,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3332___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3332,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3333___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3333,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3334___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3334,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3335___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3335,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3336___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3336,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3337___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3337,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3338___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3338,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3339___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3339,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3340___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3340,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3341___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3341,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3342___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3342,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3343___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3343,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3344___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3344,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3345___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3345,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3346___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3346,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3347___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3347,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3348___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3348,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3349___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3349,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3350___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3350,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3351___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3351,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3352___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3352,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3353___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3353,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3354___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3354,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3355___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3355,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3356___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3356,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3357___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3357,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3358___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3358,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3359___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3359,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3360___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3360,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3361___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3361,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3362___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3362,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3363___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3363,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3364___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3364,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3365___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3365,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3366___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3366,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3367___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3367,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3368___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3368,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3369___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3369,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3370___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3370,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3371___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3371,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3372___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3372,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3373___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3373,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3374___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3374,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3375___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3375,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3376___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3376,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3377___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3377,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3378___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3378,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3379___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3379,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3380___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3380,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3381___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3381,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3382___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3382,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3383___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3383,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3384___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3384,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3385___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3385,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3386___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3386,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3387___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3387,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3388___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3388,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3389___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3389,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3390___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3390,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3391___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3391,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3392___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3392,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3393___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3393,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3394___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3394,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3395___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3395,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3396___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3396,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3397___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3397,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3398___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3398,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_3399___initialize,"lime._internal.backend.native.NativeOpenGLRenderContext","__initialize",0x6063cd5d,"lime._internal.backend.native.NativeOpenGLRenderContext.__initialize","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",3399,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_39_boot,"lime._internal.backend.native.NativeOpenGLRenderContext","boot",0xac4f701f,"lime._internal.backend.native.NativeOpenGLRenderContext.boot","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",39,0xd33553db)
HX_LOCAL_STACK_FRAME(_hx_pos_65c657fec0b420d3_40_boot,"lime._internal.backend.native.NativeOpenGLRenderContext","boot",0xac4f701f,"lime._internal.backend.native.NativeOpenGLRenderContext.boot","lime/_internal/backend/native/NativeOpenGLRenderContext.hx",40,0xd33553db)
namespace lime{
namespace _internal{
namespace backend{
namespace native{

void NativeOpenGLRenderContext_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_36_new)
HXLINE( 614)		this->MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 37447;
HXLINE( 613)		this->TIMEOUT_IGNORED = -1;
HXLINE( 612)		this->INVALID_INDEX = -1;
HXLINE( 611)		this->DEPTH32F_STENCIL8 = 36013;
HXLINE( 610)		this->DEPTH_COMPONENT32F = 36012;
HXLINE( 609)		this->DYNAMIC_COPY = 35050;
HXLINE( 608)		this->DYNAMIC_READ = 35049;
HXLINE( 607)		this->STATIC_COPY = 35046;
HXLINE( 606)		this->STATIC_READ = 35045;
HXLINE( 605)		this->STREAM_COPY = 35042;
HXLINE( 604)		this->STREAM_READ = 35041;
HXLINE( 603)		this->DEPTH_COMPONENT24 = 33190;
HXLINE( 602)		this->MAX = 32776;
HXLINE( 601)		this->MIN = 32775;
HXLINE( 600)		this->STENCIL = 6146;
HXLINE( 599)		this->DEPTH = 6145;
HXLINE( 598)		this->COLOR = 6144;
HXLINE( 597)		this->SYNC_FLUSH_COMMANDS_BIT = 1;
HXLINE( 596)		this->WAIT_FAILED = 37149;
HXLINE( 595)		this->CONDITION_SATISFIED = 37148;
HXLINE( 594)		this->TIMEOUT_EXPIRED = 37147;
HXLINE( 593)		this->ALREADY_SIGNALED = 37146;
HXLINE( 592)		this->SIGNALED = 37145;
HXLINE( 591)		this->UNSIGNALED = 37144;
HXLINE( 590)		this->SYNC_GPU_COMMANDS_COMPLETE = 37143;
HXLINE( 589)		this->SYNC_FENCE = 37142;
HXLINE( 588)		this->SYNC_FLAGS = 37141;
HXLINE( 587)		this->SYNC_STATUS = 37140;
HXLINE( 586)		this->SYNC_CONDITION = 37139;
HXLINE( 585)		this->OBJECT_TYPE = 37138;
HXLINE( 584)		this->UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 35398;
HXLINE( 583)		this->UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 35396;
HXLINE( 582)		this->UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 35395;
HXLINE( 581)		this->UNIFORM_BLOCK_ACTIVE_UNIFORMS = 35394;
HXLINE( 580)		this->UNIFORM_BLOCK_DATA_SIZE = 35392;
HXLINE( 579)		this->UNIFORM_BLOCK_BINDING = 35391;
HXLINE( 578)		this->UNIFORM_IS_ROW_MAJOR = 35390;
HXLINE( 577)		this->UNIFORM_MATRIX_STRIDE = 35389;
HXLINE( 576)		this->UNIFORM_ARRAY_STRIDE = 35388;
HXLINE( 575)		this->UNIFORM_OFFSET = 35387;
HXLINE( 574)		this->UNIFORM_BLOCK_INDEX = 35386;
HXLINE( 573)		this->UNIFORM_SIZE = 35384;
HXLINE( 572)		this->UNIFORM_TYPE = 35383;
HXLINE( 571)		this->ACTIVE_UNIFORM_BLOCKS = 35382;
HXLINE( 570)		this->UNIFORM_BUFFER_OFFSET_ALIGNMENT = 35380;
HXLINE( 569)		this->MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 35379;
HXLINE( 568)		this->MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 35377;
HXLINE( 567)		this->MAX_UNIFORM_BLOCK_SIZE = 35376;
HXLINE( 566)		this->MAX_UNIFORM_BUFFER_BINDINGS = 35375;
HXLINE( 565)		this->MAX_COMBINED_UNIFORM_BLOCKS = 35374;
HXLINE( 564)		this->MAX_FRAGMENT_UNIFORM_BLOCKS = 35373;
HXLINE( 563)		this->MAX_VERTEX_UNIFORM_BLOCKS = 35371;
HXLINE( 562)		this->UNIFORM_BUFFER_SIZE = 35370;
HXLINE( 561)		this->UNIFORM_BUFFER_START = 35369;
HXLINE( 560)		this->UNIFORM_BUFFER_BINDING = 35368;
HXLINE( 559)		this->UNIFORM_BUFFER = 35345;
HXLINE( 558)		this->FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 36182;
HXLINE( 557)		this->FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 36052;
HXLINE( 556)		this->RENDERBUFFER_SAMPLES = 36011;
HXLINE( 555)		this->READ_FRAMEBUFFER_BINDING = 36010;
HXLINE( 554)		this->DRAW_FRAMEBUFFER = 36009;
HXLINE( 553)		this->READ_FRAMEBUFFER = 36008;
HXLINE( 552)		this->DRAW_FRAMEBUFFER_BINDING = 36006;
HXLINE( 551)		this->DEPTH24_STENCIL8 = 35056;
HXLINE( 550)		this->FRAMEBUFFER_DEFAULT = 33304;
HXLINE( 549)		this->FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 33303;
HXLINE( 548)		this->FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 33302;
HXLINE( 547)		this->FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 33301;
HXLINE( 546)		this->FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 33300;
HXLINE( 545)		this->FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 33299;
HXLINE( 544)		this->FRAMEBUFFER_ATTACHMENT_RED_SIZE = 33298;
HXLINE( 543)		this->FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 33297;
HXLINE( 542)		this->FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 33296;
HXLINE( 541)		this->TRANSFORM_FEEDBACK_BINDING = 36389;
HXLINE( 540)		this->TRANSFORM_FEEDBACK_ACTIVE = 36388;
HXLINE( 539)		this->TRANSFORM_FEEDBACK_PAUSED = 36387;
HXLINE( 538)		this->TRANSFORM_FEEDBACK = 36386;
HXLINE( 537)		this->TRANSFORM_FEEDBACK_BUFFER_BINDING = 35983;
HXLINE( 536)		this->TRANSFORM_FEEDBACK_BUFFER = 35982;
HXLINE( 535)		this->SEPARATE_ATTRIBS = 35981;
HXLINE( 534)		this->INTERLEAVED_ATTRIBS = 35980;
HXLINE( 533)		this->MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 35979;
HXLINE( 532)		this->MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 35978;
HXLINE( 531)		this->TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 35976;
HXLINE( 530)		this->TRANSFORM_FEEDBACK_BUFFER_SIZE = 35973;
HXLINE( 529)		this->TRANSFORM_FEEDBACK_BUFFER_START = 35972;
HXLINE( 528)		this->TRANSFORM_FEEDBACK_VARYINGS = 35971;
HXLINE( 527)		this->MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 35968;
HXLINE( 526)		this->TRANSFORM_FEEDBACK_BUFFER_MODE = 35967;
HXLINE( 525)		this->VERTEX_ATTRIB_ARRAY_DIVISOR = 35070;
HXLINE( 524)		this->VERTEX_ATTRIB_ARRAY_INTEGER = 35069;
HXLINE( 523)		this->SIGNED_NORMALIZED = 36764;
HXLINE( 522)		this->UNSIGNED_NORMALIZED = 35863;
HXLINE( 521)		this->UNSIGNED_INT_VEC4 = 36296;
HXLINE( 520)		this->UNSIGNED_INT_VEC3 = 36295;
HXLINE( 519)		this->UNSIGNED_INT_VEC2 = 36294;
HXLINE( 518)		this->FLOAT_MAT4x3 = 35690;
HXLINE( 517)		this->FLOAT_MAT4x2 = 35689;
HXLINE( 516)		this->FLOAT_MAT3x4 = 35688;
HXLINE( 515)		this->FLOAT_MAT3x2 = 35687;
HXLINE( 514)		this->FLOAT_MAT2x4 = 35686;
HXLINE( 513)		this->FLOAT_MAT2x3 = 35685;
HXLINE( 512)		this->COPY_WRITE_BUFFER_BINDING = 36663;
HXLINE( 511)		this->COPY_READ_BUFFER_BINDING = 36662;
HXLINE( 510)		this->COPY_WRITE_BUFFER = 36663;
HXLINE( 509)		this->COPY_READ_BUFFER = 36662;
HXLINE( 508)		this->PIXEL_UNPACK_BUFFER_BINDING = 35055;
HXLINE( 507)		this->PIXEL_PACK_BUFFER_BINDING = 35053;
HXLINE( 506)		this->PIXEL_UNPACK_BUFFER = 35052;
HXLINE( 505)		this->PIXEL_PACK_BUFFER = 35051;
HXLINE( 504)		this->SAMPLER_BINDING = 35097;
HXLINE( 503)		this->MAX_SAMPLES = 36183;
HXLINE( 502)		this->UNSIGNED_INT_SAMPLER_2D_ARRAY = 36311;
HXLINE( 501)		this->UNSIGNED_INT_SAMPLER_CUBE = 36308;
HXLINE( 500)		this->UNSIGNED_INT_SAMPLER_3D = 36307;
HXLINE( 499)		this->UNSIGNED_INT_SAMPLER_2D = 36306;
HXLINE( 498)		this->INT_SAMPLER_2D_ARRAY = 36303;
HXLINE( 497)		this->INT_SAMPLER_CUBE = 36300;
HXLINE( 496)		this->INT_SAMPLER_3D = 36299;
HXLINE( 495)		this->INT_SAMPLER_2D = 36298;
HXLINE( 494)		this->SAMPLER_CUBE_SHADOW = 36293;
HXLINE( 493)		this->SAMPLER_2D_ARRAY_SHADOW = 36292;
HXLINE( 492)		this->SAMPLER_2D_ARRAY = 36289;
HXLINE( 491)		this->SAMPLER_2D_SHADOW = 35682;
HXLINE( 490)		this->SAMPLER_3D = 35679;
HXLINE( 489)		this->COLOR_ATTACHMENT15 = 36079;
HXLINE( 488)		this->COLOR_ATTACHMENT14 = 36078;
HXLINE( 487)		this->COLOR_ATTACHMENT13 = 36077;
HXLINE( 486)		this->COLOR_ATTACHMENT12 = 36076;
HXLINE( 485)		this->COLOR_ATTACHMENT11 = 36075;
HXLINE( 484)		this->COLOR_ATTACHMENT10 = 36074;
HXLINE( 483)		this->COLOR_ATTACHMENT9 = 36073;
HXLINE( 482)		this->COLOR_ATTACHMENT8 = 36072;
HXLINE( 481)		this->COLOR_ATTACHMENT7 = 36071;
HXLINE( 480)		this->COLOR_ATTACHMENT6 = 36070;
HXLINE( 479)		this->COLOR_ATTACHMENT5 = 36069;
HXLINE( 478)		this->COLOR_ATTACHMENT4 = 36068;
HXLINE( 477)		this->COLOR_ATTACHMENT3 = 36067;
HXLINE( 476)		this->COLOR_ATTACHMENT2 = 36066;
HXLINE( 475)		this->COLOR_ATTACHMENT1 = 36065;
HXLINE( 474)		this->MAX_COLOR_ATTACHMENTS = 36063;
HXLINE( 473)		this->DRAW_BUFFER15 = 34868;
HXLINE( 472)		this->DRAW_BUFFER14 = 34867;
HXLINE( 471)		this->DRAW_BUFFER13 = 34866;
HXLINE( 470)		this->DRAW_BUFFER12 = 34865;
HXLINE( 469)		this->DRAW_BUFFER11 = 34864;
HXLINE( 468)		this->DRAW_BUFFER10 = 34863;
HXLINE( 467)		this->DRAW_BUFFER9 = 34862;
HXLINE( 466)		this->DRAW_BUFFER8 = 34861;
HXLINE( 465)		this->DRAW_BUFFER7 = 34860;
HXLINE( 464)		this->DRAW_BUFFER6 = 34859;
HXLINE( 463)		this->DRAW_BUFFER5 = 34858;
HXLINE( 462)		this->DRAW_BUFFER4 = 34857;
HXLINE( 461)		this->DRAW_BUFFER3 = 34856;
HXLINE( 460)		this->DRAW_BUFFER2 = 34855;
HXLINE( 459)		this->DRAW_BUFFER1 = 34854;
HXLINE( 458)		this->DRAW_BUFFER0 = 34853;
HXLINE( 457)		this->MAX_DRAW_BUFFERS = 34852;
HXLINE( 456)		this->ANY_SAMPLES_PASSED_CONSERVATIVE = 36202;
HXLINE( 455)		this->ANY_SAMPLES_PASSED = 35887;
HXLINE( 454)		this->QUERY_RESULT_AVAILABLE = 34919;
HXLINE( 453)		this->QUERY_RESULT = 34918;
HXLINE( 452)		this->CURRENT_QUERY = 34917;
HXLINE( 451)		this->INT_2_10_10_10_REV = 36255;
HXLINE( 450)		this->RG_INTEGER = 33320;
HXLINE( 449)		this->RG = 33319;
HXLINE( 448)		this->HALF_FLOAT = 5131;
HXLINE( 447)		this->UNSIGNED_INT_24_8 = 34042;
HXLINE( 446)		this->FLOAT_32_UNSIGNED_INT_24_8_REV = 36269;
HXLINE( 445)		this->UNSIGNED_INT_5_9_9_9_REV = 35902;
HXLINE( 444)		this->UNSIGNED_INT_10F_11F_11F_REV = 35899;
HXLINE( 443)		this->UNSIGNED_INT_2_10_10_10_REV = 33640;
HXLINE( 442)		this->TEXTURE_IMMUTABLE_LEVELS = 33503;
HXLINE( 441)		this->TEXTURE_IMMUTABLE_FORMAT = 37167;
HXLINE( 440)		this->RGB10_A2UI = 36975;
HXLINE( 439)		this->RGBA8_SNORM = 36759;
HXLINE( 438)		this->RGB8_SNORM = 36758;
HXLINE( 437)		this->RG8_SNORM = 36757;
HXLINE( 436)		this->R8_SNORM = 36756;
HXLINE( 435)		this->RG32UI = 33340;
HXLINE( 434)		this->RG32I = 33339;
HXLINE( 433)		this->RG16UI = 33338;
HXLINE( 432)		this->RG16I = 33337;
HXLINE( 431)		this->RG8UI = 33336;
HXLINE( 430)		this->RG8I = 33335;
HXLINE( 429)		this->R32UI = 33334;
HXLINE( 428)		this->R32I = 33333;
HXLINE( 427)		this->R16UI = 33332;
HXLINE( 426)		this->R16I = 33331;
HXLINE( 425)		this->R8UI = 33330;
HXLINE( 424)		this->R8I = 33329;
HXLINE( 423)		this->RG32F = 33328;
HXLINE( 422)		this->RG16F = 33327;
HXLINE( 421)		this->R32F = 33326;
HXLINE( 420)		this->R16F = 33325;
HXLINE( 419)		this->RG8 = 33323;
HXLINE( 418)		this->R8 = 33321;
HXLINE( 417)		this->RGBA_INTEGER = 36249;
HXLINE( 416)		this->RGB_INTEGER = 36248;
HXLINE( 415)		this->RED_INTEGER = 36244;
HXLINE( 414)		this->RGB8I = 36239;
HXLINE( 413)		this->RGBA8I = 36238;
HXLINE( 412)		this->RGB16I = 36233;
HXLINE( 411)		this->RGBA16I = 36232;
HXLINE( 410)		this->RGB32I = 36227;
HXLINE( 409)		this->RGBA32I = 36226;
HXLINE( 408)		this->RGB8UI = 36221;
HXLINE( 407)		this->RGBA8UI = 36220;
HXLINE( 406)		this->RGB16UI = 36215;
HXLINE( 405)		this->RGBA16UI = 36214;
HXLINE( 404)		this->RGB32UI = 36209;
HXLINE( 403)		this->RGBA32UI = 36208;
HXLINE( 402)		this->RGB9_E5 = 35901;
HXLINE( 401)		this->R11F_G11F_B10F = 35898;
HXLINE( 400)		this->TEXTURE_BINDING_2D_ARRAY = 35869;
HXLINE( 399)		this->TEXTURE_2D_ARRAY = 35866;
HXLINE( 398)		this->RGB16F = 34843;
HXLINE( 397)		this->RGBA16F = 34842;
HXLINE( 396)		this->RGB32F = 34837;
HXLINE( 395)		this->RGBA32F = 34836;
HXLINE( 394)		this->COMPARE_REF_TO_TEXTURE = 34894;
HXLINE( 393)		this->SRGB8_ALPHA8 = 35907;
HXLINE( 392)		this->SRGB8 = 35905;
HXLINE( 391)		this->SRGB = 35904;
HXLINE( 390)		this->TEXTURE_COMPARE_FUNC = 34893;
HXLINE( 389)		this->TEXTURE_COMPARE_MODE = 34892;
HXLINE( 388)		this->TEXTURE_MAX_LEVEL = 33085;
HXLINE( 387)		this->TEXTURE_BASE_LEVEL = 33084;
HXLINE( 386)		this->TEXTURE_MAX_LOD = 33083;
HXLINE( 385)		this->TEXTURE_MIN_LOD = 33082;
HXLINE( 384)		this->TEXTURE_WRAP_R = 32882;
HXLINE( 383)		this->TEXTURE_3D = 32879;
HXLINE( 382)		this->RGB10_A2 = 32857;
HXLINE( 381)		this->RGBA8 = 32856;
HXLINE( 380)		this->RGB8 = 32849;
HXLINE( 379)		this->RED = 6403;
HXLINE( 378)		this->MAX_ELEMENT_INDEX = 36203;
HXLINE( 377)		this->MAX_SERVER_WAIT_TIMEOUT = 37137;
HXLINE( 376)		this->MAX_FRAGMENT_INPUT_COMPONENTS = 37157;
HXLINE( 375)		this->MAX_VERTEX_OUTPUT_COMPONENTS = 37154;
HXLINE( 374)		this->VERTEX_ARRAY_BINDING = 34229;
HXLINE( 373)		this->RASTERIZER_DISCARD = 35977;
HXLINE( 372)		this->FRAGMENT_SHADER_DERIVATIVE_HINT = 35723;
HXLINE( 371)		this->MAX_VARYING_COMPONENTS = 35659;
HXLINE( 370)		this->MAX_PROGRAM_TEXEL_OFFSET = 35077;
HXLINE( 369)		this->MIN_PROGRAM_TEXEL_OFFSET = 35076;
HXLINE( 368)		this->MAX_ARRAY_TEXTURE_LAYERS = 35071;
HXLINE( 367)		this->MAX_VERTEX_UNIFORM_COMPONENTS = 35658;
HXLINE( 366)		this->MAX_FRAGMENT_UNIFORM_COMPONENTS = 35657;
HXLINE( 365)		this->MAX_TEXTURE_LOD_BIAS = 34045;
HXLINE( 364)		this->MAX_ELEMENTS_INDICES = 33001;
HXLINE( 363)		this->MAX_ELEMENTS_VERTICES = 33000;
HXLINE( 362)		this->MAX_3D_TEXTURE_SIZE = 32883;
HXLINE( 361)		this->UNPACK_IMAGE_HEIGHT = 32878;
HXLINE( 360)		this->UNPACK_SKIP_IMAGES = 32877;
HXLINE( 359)		this->TEXTURE_BINDING_3D = 32874;
HXLINE( 358)		this->PACK_SKIP_PIXELS = 3332;
HXLINE( 357)		this->PACK_SKIP_ROWS = 3331;
HXLINE( 356)		this->PACK_ROW_LENGTH = 3330;
HXLINE( 355)		this->UNPACK_SKIP_PIXELS = 3316;
HXLINE( 354)		this->UNPACK_SKIP_ROWS = 3315;
HXLINE( 353)		this->UNPACK_ROW_LENGTH = 3314;
HXLINE( 352)		this->READ_BUFFER = 3074;
HXLINE( 351)		this->BROWSER_DEFAULT_WEBGL = 37444;
HXLINE( 350)		this->UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
HXLINE( 349)		this->CONTEXT_LOST_WEBGL = 37442;
HXLINE( 348)		this->UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
HXLINE( 347)		this->UNPACK_FLIP_Y_WEBGL = 37440;
HXLINE( 346)		this->INVALID_FRAMEBUFFER_OPERATION = 1286;
HXLINE( 345)		this->MAX_RENDERBUFFER_SIZE = 34024;
HXLINE( 344)		this->RENDERBUFFER_BINDING = 36007;
HXLINE( 343)		this->FRAMEBUFFER_BINDING = 36006;
HXLINE( 342)		this->FRAMEBUFFER_UNSUPPORTED = 36061;
HXLINE( 341)		this->FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
HXLINE( 340)		this->FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
HXLINE( 339)		this->FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
HXLINE( 338)		this->FRAMEBUFFER_COMPLETE = 36053;
HXLINE( 337)		this->NONE = 0;
HXLINE( 336)		this->DEPTH_STENCIL_ATTACHMENT = 33306;
HXLINE( 335)		this->STENCIL_ATTACHMENT = 36128;
HXLINE( 334)		this->DEPTH_ATTACHMENT = 36096;
HXLINE( 333)		this->COLOR_ATTACHMENT0 = 36064;
HXLINE( 332)		this->FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
HXLINE( 331)		this->FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
HXLINE( 330)		this->FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
HXLINE( 329)		this->FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
HXLINE( 328)		this->RENDERBUFFER_STENCIL_SIZE = 36181;
HXLINE( 327)		this->RENDERBUFFER_DEPTH_SIZE = 36180;
HXLINE( 326)		this->RENDERBUFFER_ALPHA_SIZE = 36179;
HXLINE( 325)		this->RENDERBUFFER_BLUE_SIZE = 36178;
HXLINE( 324)		this->RENDERBUFFER_GREEN_SIZE = 36177;
HXLINE( 323)		this->RENDERBUFFER_RED_SIZE = 36176;
HXLINE( 322)		this->RENDERBUFFER_INTERNAL_FORMAT = 36164;
HXLINE( 321)		this->RENDERBUFFER_HEIGHT = 36163;
HXLINE( 320)		this->RENDERBUFFER_WIDTH = 36162;
HXLINE( 319)		this->DEPTH_STENCIL = 34041;
HXLINE( 318)		this->STENCIL_INDEX8 = 36168;
HXLINE( 317)		this->STENCIL_INDEX = 6401;
HXLINE( 316)		this->DEPTH_COMPONENT16 = 33189;
HXLINE( 315)		this->RGB565 = 36194;
HXLINE( 314)		this->RGB5_A1 = 32855;
HXLINE( 313)		this->RGBA4 = 32854;
HXLINE( 312)		this->RENDERBUFFER = 36161;
HXLINE( 311)		this->FRAMEBUFFER = 36160;
HXLINE( 310)		this->HIGH_INT = 36341;
HXLINE( 309)		this->MEDIUM_INT = 36340;
HXLINE( 308)		this->LOW_INT = 36339;
HXLINE( 307)		this->HIGH_FLOAT = 36338;
HXLINE( 306)		this->MEDIUM_FLOAT = 36337;
HXLINE( 305)		this->LOW_FLOAT = 36336;
HXLINE( 304)		this->NUM_SHADER_BINARY_FORMATS = 36345;
HXLINE( 303)		this->SHADER_BINARY_FORMATS = 36344;
HXLINE( 302)		this->SHADER_COMPILER = 36346;
HXLINE( 301)		this->SHADER_SOURCE_LENGTH = 35720;
HXLINE( 300)		this->INFO_LOG_LENGTH = 35716;
HXLINE( 299)		this->COMPILE_STATUS = 35713;
HXLINE( 298)		this->POINT_SPRITE = 34913;
HXLINE( 297)		this->VERTEX_PROGRAM_POINT_SIZE = 34370;
HXLINE( 296)		this->IMPLEMENTATION_COLOR_READ_FORMAT = 35739;
HXLINE( 295)		this->IMPLEMENTATION_COLOR_READ_TYPE = 35738;
HXLINE( 294)		this->VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
HXLINE( 293)		this->VERTEX_ATTRIB_ARRAY_POINTER = 34373;
HXLINE( 292)		this->VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
HXLINE( 291)		this->VERTEX_ATTRIB_ARRAY_TYPE = 34341;
HXLINE( 290)		this->VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
HXLINE( 289)		this->VERTEX_ATTRIB_ARRAY_SIZE = 34339;
HXLINE( 288)		this->VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
HXLINE( 287)		this->SAMPLER_CUBE = 35680;
HXLINE( 286)		this->SAMPLER_2D = 35678;
HXLINE( 285)		this->FLOAT_MAT4 = 35676;
HXLINE( 284)		this->FLOAT_MAT3 = 35675;
HXLINE( 283)		this->FLOAT_MAT2 = 35674;
HXLINE( 282)		this->BOOL_VEC4 = 35673;
HXLINE( 281)		this->BOOL_VEC3 = 35672;
HXLINE( 280)		this->BOOL_VEC2 = 35671;
HXLINE( 279)		this->BOOL = 35670;
HXLINE( 278)		this->INT_VEC4 = 35669;
HXLINE( 277)		this->INT_VEC3 = 35668;
HXLINE( 276)		this->INT_VEC2 = 35667;
HXLINE( 275)		this->FLOAT_VEC4 = 35666;
HXLINE( 274)		this->FLOAT_VEC3 = 35665;
HXLINE( 273)		this->FLOAT_VEC2 = 35664;
HXLINE( 272)		this->MIRRORED_REPEAT = 33648;
HXLINE( 271)		this->CLAMP_TO_EDGE = 33071;
HXLINE( 270)		this->REPEAT = 10497;
HXLINE( 269)		this->ACTIVE_TEXTURE = 34016;
HXLINE( 268)		this->TEXTURE31 = 34015;
HXLINE( 267)		this->TEXTURE30 = 34014;
HXLINE( 266)		this->TEXTURE29 = 34013;
HXLINE( 265)		this->TEXTURE28 = 34012;
HXLINE( 264)		this->TEXTURE27 = 34011;
HXLINE( 263)		this->TEXTURE26 = 34010;
HXLINE( 262)		this->TEXTURE25 = 34009;
HXLINE( 261)		this->TEXTURE24 = 34008;
HXLINE( 260)		this->TEXTURE23 = 34007;
HXLINE( 259)		this->TEXTURE22 = 34006;
HXLINE( 258)		this->TEXTURE21 = 34005;
HXLINE( 257)		this->TEXTURE20 = 34004;
HXLINE( 256)		this->TEXTURE19 = 34003;
HXLINE( 255)		this->TEXTURE18 = 34002;
HXLINE( 254)		this->TEXTURE17 = 34001;
HXLINE( 253)		this->TEXTURE16 = 34000;
HXLINE( 252)		this->TEXTURE15 = 33999;
HXLINE( 251)		this->TEXTURE14 = 33998;
HXLINE( 250)		this->TEXTURE13 = 33997;
HXLINE( 249)		this->TEXTURE12 = 33996;
HXLINE( 248)		this->TEXTURE11 = 33995;
HXLINE( 247)		this->TEXTURE10 = 33994;
HXLINE( 246)		this->TEXTURE9 = 33993;
HXLINE( 245)		this->TEXTURE8 = 33992;
HXLINE( 244)		this->TEXTURE7 = 33991;
HXLINE( 243)		this->TEXTURE6 = 33990;
HXLINE( 242)		this->TEXTURE5 = 33989;
HXLINE( 241)		this->TEXTURE4 = 33988;
HXLINE( 240)		this->TEXTURE3 = 33987;
HXLINE( 239)		this->TEXTURE2 = 33986;
HXLINE( 238)		this->TEXTURE1 = 33985;
HXLINE( 237)		this->TEXTURE0 = 33984;
HXLINE( 236)		this->MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
HXLINE( 235)		this->TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
HXLINE( 234)		this->TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
HXLINE( 233)		this->TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
HXLINE( 232)		this->TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
HXLINE( 231)		this->TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
HXLINE( 230)		this->TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
HXLINE( 229)		this->TEXTURE_BINDING_CUBE_MAP = 34068;
HXLINE( 228)		this->TEXTURE_CUBE_MAP = 34067;
HXLINE( 227)		this->TEXTURE = 5890;
HXLINE( 226)		this->TEXTURE_WRAP_T = 10243;
HXLINE( 225)		this->TEXTURE_WRAP_S = 10242;
HXLINE( 224)		this->TEXTURE_MIN_FILTER = 10241;
HXLINE( 223)		this->TEXTURE_MAG_FILTER = 10240;
HXLINE( 222)		this->LINEAR_MIPMAP_LINEAR = 9987;
HXLINE( 221)		this->NEAREST_MIPMAP_LINEAR = 9986;
HXLINE( 220)		this->LINEAR_MIPMAP_NEAREST = 9985;
HXLINE( 219)		this->NEAREST_MIPMAP_NEAREST = 9984;
HXLINE( 218)		this->LINEAR = 9729;
HXLINE( 217)		this->NEAREST = 9728;
HXLINE( 216)		this->EXTENSIONS = 7939;
HXLINE( 215)		this->VERSION = 7938;
HXLINE( 214)		this->RENDERER = 7937;
HXLINE( 213)		this->VENDOR = 7936;
HXLINE( 212)		this->DECR_WRAP = 34056;
HXLINE( 211)		this->INCR_WRAP = 34055;
HXLINE( 210)		this->INVERT = 5386;
HXLINE( 209)		this->DECR = 7683;
HXLINE( 208)		this->INCR = 7682;
HXLINE( 207)		this->REPLACE = 7681;
HXLINE( 206)		this->KEEP = 7680;
HXLINE( 205)		this->ALWAYS = 519;
HXLINE( 204)		this->GEQUAL = 518;
HXLINE( 203)		this->NOTEQUAL = 517;
HXLINE( 202)		this->GREATER = 516;
HXLINE( 201)		this->LEQUAL = 515;
HXLINE( 200)		this->EQUAL = 514;
HXLINE( 199)		this->LESS = 513;
HXLINE( 198)		this->NEVER = 512;
HXLINE( 197)		this->CURRENT_PROGRAM = 35725;
HXLINE( 196)		this->SHADING_LANGUAGE_VERSION = 35724;
HXLINE( 195)		this->ACTIVE_ATTRIBUTES_MAX_LENGTH = 35722;
HXLINE( 194)		this->ACTIVE_ATTRIBUTES = 35721;
HXLINE( 193)		this->ACTIVE_UNIFORMS_MAX_LENGTH = 35719;
HXLINE( 192)		this->ACTIVE_UNIFORMS = 35718;
HXLINE( 191)		this->ATTACHED_SHADERS = 35717;
HXLINE( 190)		this->VALIDATE_STATUS = 35715;
HXLINE( 189)		this->LINK_STATUS = 35714;
HXLINE( 188)		this->DELETE_STATUS = 35712;
HXLINE( 187)		this->SHADER_TYPE = 35663;
HXLINE( 186)		this->MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
HXLINE( 185)		this->MAX_TEXTURE_IMAGE_UNITS = 34930;
HXLINE( 184)		this->MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
HXLINE( 183)		this->MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
HXLINE( 182)		this->MAX_VARYING_VECTORS = 36348;
HXLINE( 181)		this->MAX_VERTEX_UNIFORM_VECTORS = 36347;
HXLINE( 180)		this->MAX_VERTEX_ATTRIBS = 34921;
HXLINE( 179)		this->VERTEX_SHADER = 35633;
HXLINE( 178)		this->FRAGMENT_SHADER = 35632;
HXLINE( 177)		this->UNSIGNED_SHORT_5_6_5 = 33635;
HXLINE( 176)		this->UNSIGNED_SHORT_5_5_5_1 = 32820;
HXLINE( 175)		this->UNSIGNED_SHORT_4_4_4_4 = 32819;
HXLINE( 174)		this->LUMINANCE_ALPHA = 6410;
HXLINE( 173)		this->LUMINANCE = 6409;
HXLINE( 172)		this->RGBA = 6408;
HXLINE( 171)		this->RGB = 6407;
HXLINE( 170)		this->ALPHA = 6406;
HXLINE( 169)		this->DEPTH_COMPONENT = 6402;
HXLINE( 168)		this->FIXED = 5132;
HXLINE( 167)		this->FLOAT = 5126;
HXLINE( 166)		this->UNSIGNED_INT = 5125;
HXLINE( 165)		this->INT = 5124;
HXLINE( 164)		this->UNSIGNED_SHORT = 5123;
HXLINE( 163)		this->SHORT = 5122;
HXLINE( 162)		this->UNSIGNED_BYTE = 5121;
HXLINE( 161)		this->BYTE = 5120;
HXLINE( 160)		this->GENERATE_MIPMAP_HINT = 33170;
HXLINE( 159)		this->NICEST = 4354;
HXLINE( 158)		this->FASTEST = 4353;
HXLINE( 157)		this->DONT_CARE = 4352;
HXLINE( 156)		this->COMPRESSED_TEXTURE_FORMATS = 34467;
HXLINE( 155)		this->NUM_COMPRESSED_TEXTURE_FORMATS = 34466;
HXLINE( 154)		this->SAMPLE_COVERAGE_INVERT = 32939;
HXLINE( 153)		this->SAMPLE_COVERAGE_VALUE = 32938;
HXLINE( 152)		this->SAMPLES = 32937;
HXLINE( 151)		this->SAMPLE_BUFFERS = 32936;
HXLINE( 150)		this->TEXTURE_BINDING_2D = 32873;
HXLINE( 149)		this->POLYGON_OFFSET_FACTOR = 32824;
HXLINE( 148)		this->POLYGON_OFFSET_UNITS = 10752;
HXLINE( 147)		this->STENCIL_BITS = 3415;
HXLINE( 146)		this->DEPTH_BITS = 3414;
HXLINE( 145)		this->ALPHA_BITS = 3413;
HXLINE( 144)		this->BLUE_BITS = 3412;
HXLINE( 143)		this->GREEN_BITS = 3411;
HXLINE( 142)		this->RED_BITS = 3410;
HXLINE( 141)		this->SUBPIXEL_BITS = 3408;
HXLINE( 140)		this->MAX_VIEWPORT_DIMS = 3386;
HXLINE( 139)		this->MAX_TEXTURE_SIZE = 3379;
HXLINE( 138)		this->PACK_ALIGNMENT = 3333;
HXLINE( 137)		this->UNPACK_ALIGNMENT = 3317;
HXLINE( 136)		this->COLOR_WRITEMASK = 3107;
HXLINE( 135)		this->COLOR_CLEAR_VALUE = 3106;
HXLINE( 134)		this->SCISSOR_BOX = 3088;
HXLINE( 133)		this->VIEWPORT = 2978;
HXLINE( 132)		this->STENCIL_BACK_WRITEMASK = 36005;
HXLINE( 131)		this->STENCIL_BACK_VALUE_MASK = 36004;
HXLINE( 130)		this->STENCIL_BACK_REF = 36003;
HXLINE( 129)		this->STENCIL_BACK_PASS_DEPTH_PASS = 34819;
HXLINE( 128)		this->STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
HXLINE( 127)		this->STENCIL_BACK_FAIL = 34817;
HXLINE( 126)		this->STENCIL_BACK_FUNC = 34816;
HXLINE( 125)		this->STENCIL_WRITEMASK = 2968;
HXLINE( 124)		this->STENCIL_VALUE_MASK = 2963;
HXLINE( 123)		this->STENCIL_REF = 2967;
HXLINE( 122)		this->STENCIL_PASS_DEPTH_PASS = 2966;
HXLINE( 121)		this->STENCIL_PASS_DEPTH_FAIL = 2965;
HXLINE( 120)		this->STENCIL_FAIL = 2964;
HXLINE( 119)		this->STENCIL_FUNC = 2962;
HXLINE( 118)		this->STENCIL_CLEAR_VALUE = 2961;
HXLINE( 117)		this->DEPTH_FUNC = 2932;
HXLINE( 116)		this->DEPTH_CLEAR_VALUE = 2931;
HXLINE( 115)		this->DEPTH_WRITEMASK = 2930;
HXLINE( 114)		this->DEPTH_RANGE = 2928;
HXLINE( 113)		this->FRONT_FACE = 2886;
HXLINE( 112)		this->CULL_FACE_MODE = 2885;
HXLINE( 111)		this->ALIASED_LINE_WIDTH_RANGE = 33902;
HXLINE( 110)		this->ALIASED_POINT_SIZE_RANGE = 33901;
HXLINE( 109)		this->LINE_WIDTH = 2849;
HXLINE( 108)		this->CCW = 2305;
HXLINE( 107)		this->CW = 2304;
HXLINE( 106)		this->OUT_OF_MEMORY = 1285;
HXLINE( 105)		this->INVALID_OPERATION = 1282;
HXLINE( 104)		this->INVALID_VALUE = 1281;
HXLINE( 103)		this->INVALID_ENUM = 1280;
HXLINE( 102)		this->NO_ERROR = 0;
HXLINE( 101)		this->SAMPLE_COVERAGE = 32928;
HXLINE( 100)		this->SAMPLE_ALPHA_TO_COVERAGE = 32926;
HXLINE(  99)		this->POLYGON_OFFSET_FILL = 32823;
HXLINE(  98)		this->SCISSOR_TEST = 3089;
HXLINE(  97)		this->DEPTH_TEST = 2929;
HXLINE(  96)		this->STENCIL_TEST = 2960;
HXLINE(  95)		this->DITHER = 3024;
HXLINE(  94)		this->BLEND = 3042;
HXLINE(  93)		this->CULL_FACE = 2884;
HXLINE(  92)		this->TEXTURE_2D = 3553;
HXLINE(  91)		this->FRONT_AND_BACK = 1032;
HXLINE(  90)		this->BACK = 1029;
HXLINE(  89)		this->FRONT = 1028;
HXLINE(  88)		this->CURRENT_VERTEX_ATTRIB = 34342;
HXLINE(  87)		this->BUFFER_USAGE = 34661;
HXLINE(  86)		this->BUFFER_SIZE = 34660;
HXLINE(  85)		this->DYNAMIC_DRAW = 35048;
HXLINE(  84)		this->STATIC_DRAW = 35044;
HXLINE(  83)		this->STREAM_DRAW = 35040;
HXLINE(  82)		this->ELEMENT_ARRAY_BUFFER_BINDING = 34965;
HXLINE(  81)		this->ARRAY_BUFFER_BINDING = 34964;
HXLINE(  80)		this->ELEMENT_ARRAY_BUFFER = 34963;
HXLINE(  79)		this->ARRAY_BUFFER = 34962;
HXLINE(  78)		this->BLEND_COLOR = 32773;
HXLINE(  77)		this->ONE_MINUS_CONSTANT_ALPHA = 32772;
HXLINE(  76)		this->CONSTANT_ALPHA = 32771;
HXLINE(  75)		this->ONE_MINUS_CONSTANT_COLOR = 32770;
HXLINE(  74)		this->CONSTANT_COLOR = 32769;
HXLINE(  73)		this->BLEND_SRC_ALPHA = 32971;
HXLINE(  72)		this->BLEND_DST_ALPHA = 32970;
HXLINE(  71)		this->BLEND_SRC_RGB = 32969;
HXLINE(  70)		this->BLEND_DST_RGB = 32968;
HXLINE(  69)		this->FUNC_REVERSE_SUBTRACT = 32779;
HXLINE(  68)		this->FUNC_SUBTRACT = 32778;
HXLINE(  67)		this->BLEND_EQUATION_ALPHA = 34877;
HXLINE(  66)		this->BLEND_EQUATION_RGB = 32777;
HXLINE(  65)		this->BLEND_EQUATION = 32777;
HXLINE(  64)		this->FUNC_ADD = 32774;
HXLINE(  63)		this->SRC_ALPHA_SATURATE = 776;
HXLINE(  62)		this->ONE_MINUS_DST_COLOR = 775;
HXLINE(  61)		this->DST_COLOR = 774;
HXLINE(  60)		this->ONE_MINUS_DST_ALPHA = 773;
HXLINE(  59)		this->DST_ALPHA = 772;
HXLINE(  58)		this->ONE_MINUS_SRC_ALPHA = 771;
HXLINE(  57)		this->SRC_ALPHA = 770;
HXLINE(  56)		this->ONE_MINUS_SRC_COLOR = 769;
HXLINE(  55)		this->SRC_COLOR = 768;
HXLINE(  54)		this->ONE = 1;
HXLINE(  53)		this->ZERO = 0;
HXLINE(  52)		this->TRIANGLE_FAN = 6;
HXLINE(  51)		this->TRIANGLE_STRIP = 5;
HXLINE(  50)		this->TRIANGLES = 4;
HXLINE(  49)		this->LINE_STRIP = 3;
HXLINE(  48)		this->LINE_LOOP = 2;
HXLINE(  47)		this->LINES = 1;
HXLINE(  46)		this->POINTS = 0;
HXLINE(  45)		this->COLOR_BUFFER_BIT = 16384;
HXLINE(  44)		this->STENCIL_BUFFER_BIT = 1024;
HXLINE(  43)		this->DEPTH_BUFFER_BIT = 256;
HXLINE( 631)		this->_hx___contextID = ::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___lastContextID++;
HXLINE( 633)		this->_hx___initialize();
HXLINE( 636)		::String versionString = ( (::String)(this->getParameter(this->VERSION)) );
HXLINE( 637)		if ((versionString.indexOf(HX_("OpenGL ES",5f,cb,92,95),null()) > -1)) {
HXLINE( 639)			this->type = HX_("opengles",9d,f6,c9,fa);
            		}
            		else {
HXLINE( 643)			this->type = HX_("opengl",6f,64,94,21);
            		}
HXLINE( 645)		 ::EReg ereg =  ::EReg_obj::__alloc( HX_CTX ,HX_("[0-9]+[.]?[0-9]?",27,05,1c,6e),HX_("i",69,00,00,00));
HXLINE( 646)		if (ereg->match(versionString)) {
HXLINE( 648)			this->version = ::Std_obj::parseFloat(ereg->matched(0));
            		}
            		else {
HXLINE( 652)			this->version = ( (Float)(2) );
            		}
            	}

Dynamic NativeOpenGLRenderContext_obj::__CreateEmpty() { return new NativeOpenGLRenderContext_obj; }

void *NativeOpenGLRenderContext_obj::_hx_vtable = 0;

Dynamic NativeOpenGLRenderContext_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NativeOpenGLRenderContext_obj > _hx_result = new NativeOpenGLRenderContext_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool NativeOpenGLRenderContext_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x77967caf;
}

void NativeOpenGLRenderContext_obj::activeTexture(int texture){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_663_activeTexture)
HXDLIN( 663)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_active_texture(texture);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,activeTexture,(void))

void NativeOpenGLRenderContext_obj::attachShader( ::lime::graphics::opengl::GLObject program, ::lime::graphics::opengl::GLObject shader){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_668_attachShader)
HXLINE( 669)		bool _hx_tmp;
HXDLIN( 669)		if (hx::IsNotNull( program )) {
HXLINE( 669)			_hx_tmp = hx::IsNotNull( shader );
            		}
            		else {
HXLINE( 669)			_hx_tmp = false;
            		}
HXDLIN( 669)		if (_hx_tmp) {
HXLINE( 671)			if (hx::IsNull( program->refs )) {
HXLINE( 673)				program->refs = ::Array_obj< ::Dynamic>::__new(1)->init(0,shader);
            			}
            			else {
HXLINE( 675)				if ((program->refs->indexOf(shader,null()) == -1)) {
HXLINE( 677)					program->refs->push(shader);
            				}
            			}
            		}
HXLINE( 682)		int _hx_tmp1 = this->_hx___getObjectID(program);
HXDLIN( 682)		int _hx_tmp2 = this->_hx___getObjectID(shader);
HXDLIN( 682)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_attach_shader(_hx_tmp1,_hx_tmp2);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,attachShader,(void))

void NativeOpenGLRenderContext_obj::beginQuery(int target, ::lime::graphics::opengl::GLObject query){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_689_beginQuery)
HXDLIN( 689)		int _hx_tmp = this->_hx___getObjectID(query);
HXDLIN( 689)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_begin_query(target,_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,beginQuery,(void))

void NativeOpenGLRenderContext_obj::beginTransformFeedback(int primitiveNode){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_696_beginTransformFeedback)
HXDLIN( 696)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_begin_transform_feedback(primitiveNode);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,beginTransformFeedback,(void))

void NativeOpenGLRenderContext_obj::bindAttribLocation( ::lime::graphics::opengl::GLObject program,int index,::String name){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_703_bindAttribLocation)
HXDLIN( 703)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN( 703)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_bind_attrib_location(_hx_tmp,index,name);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,bindAttribLocation,(void))

void NativeOpenGLRenderContext_obj::bindBuffer(int target, ::lime::graphics::opengl::GLObject buffer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_708_bindBuffer)
HXLINE( 709)		if ((target == this->ARRAY_BUFFER)) {
HXLINE( 709)			this->_hx___arrayBufferBinding = buffer;
            		}
HXLINE( 710)		if ((target == this->ELEMENT_ARRAY_BUFFER)) {
HXLINE( 710)			this->_hx___elementBufferBinding = buffer;
            		}
HXLINE( 713)		int _hx_tmp = this->_hx___getObjectID(buffer);
HXDLIN( 713)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_bind_buffer(target,_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,bindBuffer,(void))

void NativeOpenGLRenderContext_obj::bindBufferBase(int target,int index, ::lime::graphics::opengl::GLObject buffer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_720_bindBufferBase)
HXDLIN( 720)		int _hx_tmp = this->_hx___getObjectID(buffer);
HXDLIN( 720)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_bind_buffer_base(target,index,_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,bindBufferBase,(void))

void NativeOpenGLRenderContext_obj::bindBufferRange(int target,int index, ::lime::graphics::opengl::GLObject buffer,Float offset,int size){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_727_bindBufferRange)
HXDLIN( 727)		int _hx_tmp = this->_hx___getObjectID(buffer);
HXDLIN( 727)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_bind_buffer_range(target,index,_hx_tmp,offset,size);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,bindBufferRange,(void))

void NativeOpenGLRenderContext_obj::bindFramebuffer(int target, ::lime::graphics::opengl::GLObject framebuffer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_732_bindFramebuffer)
HXLINE( 733)		this->_hx___framebufferBinding = framebuffer;
HXLINE( 736)		int _hx_tmp = this->_hx___getObjectID(framebuffer);
HXDLIN( 736)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_bind_framebuffer(target,_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,bindFramebuffer,(void))

void NativeOpenGLRenderContext_obj::bindRenderbuffer(int target, ::lime::graphics::opengl::GLObject renderbuffer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_741_bindRenderbuffer)
HXLINE( 742)		this->_hx___renderbufferBinding = renderbuffer;
HXLINE( 745)		int _hx_tmp = this->_hx___getObjectID(renderbuffer);
HXDLIN( 745)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_bind_renderbuffer(target,_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,bindRenderbuffer,(void))

void NativeOpenGLRenderContext_obj::bindSampler(int unit, ::lime::graphics::opengl::GLObject sampler){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_752_bindSampler)
HXDLIN( 752)		int _hx_tmp = this->_hx___getObjectID(sampler);
HXDLIN( 752)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_bind_sampler(unit,_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,bindSampler,(void))

void NativeOpenGLRenderContext_obj::bindTexture(int target, ::lime::graphics::opengl::GLObject texture){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_757_bindTexture)
HXLINE( 758)		if ((target == this->TEXTURE_2D)) {
HXLINE( 758)			this->_hx___texture2DBinding = texture;
            		}
HXLINE( 759)		if ((target == this->TEXTURE_CUBE_MAP)) {
HXLINE( 759)			this->_hx___textureCubeMapBinding = texture;
            		}
HXLINE( 762)		int _hx_tmp = this->_hx___getObjectID(texture);
HXDLIN( 762)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_bind_texture(target,_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,bindTexture,(void))

void NativeOpenGLRenderContext_obj::bindTransformFeedback(int target, ::lime::graphics::opengl::GLObject transformFeedback){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_769_bindTransformFeedback)
HXDLIN( 769)		int _hx_tmp = this->_hx___getObjectID(transformFeedback);
HXDLIN( 769)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_bind_transform_feedback(target,_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,bindTransformFeedback,(void))

void NativeOpenGLRenderContext_obj::bindVertexArray( ::lime::graphics::opengl::GLObject vertexArray){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_776_bindVertexArray)
HXDLIN( 776)		int _hx_tmp = this->_hx___getObjectID(vertexArray);
HXDLIN( 776)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_bind_vertex_array(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,bindVertexArray,(void))

void NativeOpenGLRenderContext_obj::blendColor(Float red,Float green,Float blue,Float alpha){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_783_blendColor)
HXDLIN( 783)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_blend_color(( (float)(red) ),( (float)(green) ),( (float)(blue) ),( (float)(alpha) ));
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,blendColor,(void))

void NativeOpenGLRenderContext_obj::blendEquation(int mode){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_790_blendEquation)
HXDLIN( 790)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_blend_equation(mode);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,blendEquation,(void))

void NativeOpenGLRenderContext_obj::blendEquationSeparate(int modeRGB,int modeAlpha){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_797_blendEquationSeparate)
HXDLIN( 797)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_blend_equation_separate(modeRGB,modeAlpha);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,blendEquationSeparate,(void))

void NativeOpenGLRenderContext_obj::blendFunc(int sfactor,int dfactor){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_804_blendFunc)
HXDLIN( 804)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_blend_func(sfactor,dfactor);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,blendFunc,(void))

void NativeOpenGLRenderContext_obj::blendFuncSeparate(int srcRGB,int dstRGB,int srcAlpha,int dstAlpha){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_811_blendFuncSeparate)
HXDLIN( 811)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_blend_func_separate(srcRGB,dstRGB,srcAlpha,dstAlpha);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,blendFuncSeparate,(void))

void NativeOpenGLRenderContext_obj::blitFramebuffer(int srcX0,int srcY0,int srcX1,int srcY1,int dstX0,int dstY0,int dstX1,int dstY1,int mask,int filter){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_818_blitFramebuffer)
HXDLIN( 818)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_blit_framebuffer(srcX0,srcY0,srcX1,srcY1,dstX0,dstY0,dstX1,dstY1,mask,filter);
            	}


HX_DEFINE_DYNAMIC_FUNC10(NativeOpenGLRenderContext_obj,blitFramebuffer,(void))

void NativeOpenGLRenderContext_obj::bufferData(int target,int size,Float srcData,int usage){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_825_bufferData)
HXDLIN( 825)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_buffer_data(target,size,srcData,usage);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,bufferData,(void))

void NativeOpenGLRenderContext_obj::bufferSubData(int target,int dstByteOffset,int size,Float srcData){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_832_bufferSubData)
HXDLIN( 832)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_buffer_sub_data(target,dstByteOffset,size,srcData);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,bufferSubData,(void))

int NativeOpenGLRenderContext_obj::checkFramebufferStatus(int target){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_839_checkFramebufferStatus)
HXDLIN( 839)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_check_framebuffer_status(target);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,checkFramebufferStatus,return )

void NativeOpenGLRenderContext_obj::clear(int mask){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_848_clear)
HXDLIN( 848)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_clear(mask);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,clear,(void))

void NativeOpenGLRenderContext_obj::clearBufferfi(int buffer,int drawbuffer,Float depth,int stencil){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_855_clearBufferfi)
HXDLIN( 855)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_clear_bufferfi(buffer,drawbuffer,( (float)(depth) ),stencil);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,clearBufferfi,(void))

void NativeOpenGLRenderContext_obj::clearBufferfv(int buffer,int drawbuffer,Float value){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_862_clearBufferfv)
HXDLIN( 862)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_clear_bufferfv(buffer,drawbuffer,value);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,clearBufferfv,(void))

void NativeOpenGLRenderContext_obj::clearBufferiv(int buffer,int drawbuffer,Float value){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_869_clearBufferiv)
HXDLIN( 869)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_clear_bufferiv(buffer,drawbuffer,value);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,clearBufferiv,(void))

void NativeOpenGLRenderContext_obj::clearBufferuiv(int buffer,int drawbuffer,Float value){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_876_clearBufferuiv)
HXDLIN( 876)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_clear_bufferuiv(buffer,drawbuffer,value);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,clearBufferuiv,(void))

void NativeOpenGLRenderContext_obj::clearColor(Float red,Float green,Float blue,Float alpha){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_883_clearColor)
HXDLIN( 883)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_clear_color(( (float)(red) ),( (float)(green) ),( (float)(blue) ),( (float)(alpha) ));
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,clearColor,(void))

void NativeOpenGLRenderContext_obj::clearDepthf(Float depth){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_890_clearDepthf)
HXDLIN( 890)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_clear_depthf(( (float)(depth) ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,clearDepthf,(void))

void NativeOpenGLRenderContext_obj::clearStencil(int s){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_897_clearStencil)
HXDLIN( 897)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_clear_stencil(s);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,clearStencil,(void))

int NativeOpenGLRenderContext_obj::clientWaitSync( ::Dynamic sync,int flags, cpp::Int64Struct timeout){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_904_clientWaitSync)
HXDLIN( 904)		int _hx_tmp = _hx_int64_high(timeout);
HXDLIN( 904)		int _hx_tmp1 = _hx_int64_low(timeout);
HXDLIN( 904)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_client_wait_sync(hx::DynamicPtr(sync),flags,_hx_tmp,_hx_tmp1);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,clientWaitSync,return )

void NativeOpenGLRenderContext_obj::colorMask(bool red,bool green,bool blue,bool alpha){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_913_colorMask)
HXDLIN( 913)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_color_mask(red,green,blue,alpha);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,colorMask,(void))

void NativeOpenGLRenderContext_obj::compileShader( ::lime::graphics::opengl::GLObject shader){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_920_compileShader)
HXDLIN( 920)		int _hx_tmp = this->_hx___getObjectID(shader);
HXDLIN( 920)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_compile_shader(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,compileShader,(void))

void NativeOpenGLRenderContext_obj::compressedTexImage2D(int target,int level,int internalformat,int width,int height,int border,int imageSize,Float data){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_928_compressedTexImage2D)
HXDLIN( 928)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_compressed_tex_image_2d(target,level,internalformat,width,height,border,imageSize,data);
            	}


HX_DEFINE_DYNAMIC_FUNC8(NativeOpenGLRenderContext_obj,compressedTexImage2D,(void))

void NativeOpenGLRenderContext_obj::compressedTexImage3D(int target,int level,int internalformat,int width,int height,int depth,int border,int imageSize,Float data){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_936_compressedTexImage3D)
HXDLIN( 936)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_compressed_tex_image_3d(target,level,internalformat,width,height,depth,border,imageSize,data);
            	}


HX_DEFINE_DYNAMIC_FUNC9(NativeOpenGLRenderContext_obj,compressedTexImage3D,(void))

void NativeOpenGLRenderContext_obj::compressedTexSubImage2D(int target,int level,int xoffset,int yoffset,int width,int height,int format,int imageSize,Float data){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_944_compressedTexSubImage2D)
HXDLIN( 944)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_compressed_tex_sub_image_2d(target,level,xoffset,yoffset,width,height,format,imageSize,data);
            	}


HX_DEFINE_DYNAMIC_FUNC9(NativeOpenGLRenderContext_obj,compressedTexSubImage2D,(void))

void NativeOpenGLRenderContext_obj::compressedTexSubImage3D(int target,int level,int xoffset,int yoffset,int zoffset,int width,int height,int depth,int format,int imageSize,Float data){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_952_compressedTexSubImage3D)
HXDLIN( 952)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_compressed_tex_sub_image_3d(target,level,xoffset,yoffset,zoffset,width,height,depth,format,imageSize,data);
            	}


HX_DEFINE_DYNAMIC_FUNC11(NativeOpenGLRenderContext_obj,compressedTexSubImage3D,(void))

void NativeOpenGLRenderContext_obj::copyBufferSubData(int readTarget,int writeTarget,Float readOffset,Float writeOffset,int size){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_959_copyBufferSubData)
HXDLIN( 959)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_copy_buffer_sub_data(readTarget,writeTarget,readOffset,writeOffset,size);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,copyBufferSubData,(void))

void NativeOpenGLRenderContext_obj::copyTexImage2D(int target,int level,int internalformat,int x,int y,int width,int height,int border){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_966_copyTexImage2D)
HXDLIN( 966)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_copy_tex_image_2d(target,level,internalformat,x,y,width,height,border);
            	}


HX_DEFINE_DYNAMIC_FUNC8(NativeOpenGLRenderContext_obj,copyTexImage2D,(void))

void NativeOpenGLRenderContext_obj::copyTexSubImage2D(int target,int level,int xoffset,int yoffset,int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_973_copyTexSubImage2D)
HXDLIN( 973)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_copy_tex_sub_image_2d(target,level,xoffset,yoffset,x,y,width,height);
            	}


HX_DEFINE_DYNAMIC_FUNC8(NativeOpenGLRenderContext_obj,copyTexSubImage2D,(void))

void NativeOpenGLRenderContext_obj::copyTexSubImage3D(int target,int level,int xoffset,int yoffset,int zoffset,int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_980_copyTexSubImage3D)
HXDLIN( 980)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_copy_tex_sub_image_3d(target,level,xoffset,yoffset,zoffset,x,y,width,height);
            	}


HX_DEFINE_DYNAMIC_FUNC9(NativeOpenGLRenderContext_obj,copyTexSubImage3D,(void))

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::createBuffer(){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_985_createBuffer)
HXLINE( 987)		int id = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_create_buffer();
HXLINE( 988)		if ((id == 0)) {
HXLINE( 988)			return null();
            		}
HXLINE( 989)		 ::lime::graphics::opengl::GLObject object =  ::lime::graphics::opengl::GLObject_obj::__alloc( HX_CTX ,id);
HXLINE( 990)		object->ptr = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_register(id,3,hx::DynamicPtr(object))) );
HXLINE( 991)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,createBuffer,return )

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::createFramebuffer(){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_998_createFramebuffer)
HXLINE(1000)		int id = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_create_framebuffer();
HXLINE(1001)		if ((id == 0)) {
HXLINE(1001)			return null();
            		}
HXLINE(1002)		 ::lime::graphics::opengl::GLObject object =  ::lime::graphics::opengl::GLObject_obj::__alloc( HX_CTX ,id);
HXLINE(1003)		object->ptr = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_register(id,5,hx::DynamicPtr(object))) );
HXLINE(1004)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,createFramebuffer,return )

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::createProgram(){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_1011_createProgram)
HXLINE(1013)		int id = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_create_program();
HXLINE(1014)		if ((id == 0)) {
HXLINE(1014)			return null();
            		}
HXLINE(1015)		 ::lime::graphics::opengl::GLObject object =  ::lime::graphics::opengl::GLObject_obj::__alloc( HX_CTX ,id);
HXLINE(1016)		object->ptr = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_register(id,1,hx::DynamicPtr(object))) );
HXLINE(1017)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,createProgram,return )

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::createQuery(){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_1024_createQuery)
HXLINE(1026)		int id = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_create_query();
HXLINE(1027)		if ((id == 0)) {
HXLINE(1027)			return null();
            		}
HXLINE(1028)		 ::lime::graphics::opengl::GLObject object =  ::lime::graphics::opengl::GLObject_obj::__alloc( HX_CTX ,id);
HXLINE(1029)		object->ptr = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_register(id,8,hx::DynamicPtr(object))) );
HXLINE(1030)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,createQuery,return )

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::createRenderbuffer(){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_1037_createRenderbuffer)
HXLINE(1039)		int id = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_create_renderbuffer();
HXLINE(1040)		if ((id == 0)) {
HXLINE(1040)			return null();
            		}
HXLINE(1041)		 ::lime::graphics::opengl::GLObject object =  ::lime::graphics::opengl::GLObject_obj::__alloc( HX_CTX ,id);
HXLINE(1042)		object->ptr = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_register(id,6,hx::DynamicPtr(object))) );
HXLINE(1043)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,createRenderbuffer,return )

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::createSampler(){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_1050_createSampler)
HXLINE(1052)		int id = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_create_sampler();
HXLINE(1053)		if ((id == 0)) {
HXLINE(1053)			return null();
            		}
HXLINE(1054)		 ::lime::graphics::opengl::GLObject object =  ::lime::graphics::opengl::GLObject_obj::__alloc( HX_CTX ,id);
HXLINE(1055)		object->ptr = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_register(id,9,hx::DynamicPtr(object))) );
HXLINE(1056)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,createSampler,return )

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::createShader(int type){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_1063_createShader)
HXLINE(1065)		int id = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_create_shader(type);
HXLINE(1066)		if ((id == 0)) {
HXLINE(1066)			return null();
            		}
HXLINE(1067)		 ::lime::graphics::opengl::GLObject object =  ::lime::graphics::opengl::GLObject_obj::__alloc( HX_CTX ,id);
HXLINE(1068)		object->ptr = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_register(id,2,hx::DynamicPtr(object))) );
HXLINE(1069)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,createShader,return )

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::createTexture(){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_1076_createTexture)
HXLINE(1078)		int id = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_create_texture();
HXLINE(1079)		if ((id == 0)) {
HXLINE(1079)			return null();
            		}
HXLINE(1080)		 ::lime::graphics::opengl::GLObject object =  ::lime::graphics::opengl::GLObject_obj::__alloc( HX_CTX ,id);
HXLINE(1081)		object->ptr = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_register(id,4,hx::DynamicPtr(object))) );
HXLINE(1082)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,createTexture,return )

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::createTransformFeedback(){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_1089_createTransformFeedback)
HXLINE(1091)		int id = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_create_transform_feedback();
HXLINE(1092)		if ((id == 0)) {
HXLINE(1092)			return null();
            		}
HXLINE(1093)		 ::lime::graphics::opengl::GLObject object =  ::lime::graphics::opengl::GLObject_obj::__alloc( HX_CTX ,id);
HXLINE(1094)		object->ptr = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_register(id,11,hx::DynamicPtr(object))) );
HXLINE(1095)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,createTransformFeedback,return )

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::createVertexArray(){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_1102_createVertexArray)
HXLINE(1104)		int id = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_create_vertex_array();
HXLINE(1105)		if ((id == 0)) {
HXLINE(1105)			return null();
            		}
HXLINE(1106)		 ::lime::graphics::opengl::GLObject object =  ::lime::graphics::opengl::GLObject_obj::__alloc( HX_CTX ,id);
HXLINE(1107)		object->ptr = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_register(id,7,hx::DynamicPtr(object))) );
HXLINE(1108)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,createVertexArray,return )

void NativeOpenGLRenderContext_obj::cullFace(int mode){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1117_cullFace)
HXDLIN(1117)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_cull_face(mode);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,cullFace,(void))

void NativeOpenGLRenderContext_obj::deleteBuffer( ::lime::graphics::opengl::GLObject buffer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1122_deleteBuffer)
HXLINE(1124)		if (hx::IsNotNull( buffer )) {
HXLINE(1124)			::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_deregister(hx::DynamicPtr(buffer));
            		}
HXLINE(1125)		int _hx_tmp = this->_hx___getObjectID(buffer);
HXDLIN(1125)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_delete_buffer(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,deleteBuffer,(void))

void NativeOpenGLRenderContext_obj::deleteFramebuffer( ::lime::graphics::opengl::GLObject framebuffer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1130_deleteFramebuffer)
HXLINE(1132)		if (hx::IsNotNull( framebuffer )) {
HXLINE(1132)			::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_deregister(hx::DynamicPtr(framebuffer));
            		}
HXLINE(1133)		int _hx_tmp = this->_hx___getObjectID(framebuffer);
HXDLIN(1133)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_delete_framebuffer(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,deleteFramebuffer,(void))

void NativeOpenGLRenderContext_obj::deleteProgram( ::lime::graphics::opengl::GLObject program){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1138_deleteProgram)
HXLINE(1140)		if (hx::IsNotNull( program )) {
HXLINE(1140)			::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_deregister(hx::DynamicPtr(program));
            		}
HXLINE(1141)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(1141)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_delete_program(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,deleteProgram,(void))

void NativeOpenGLRenderContext_obj::deleteQuery( ::lime::graphics::opengl::GLObject query){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1146_deleteQuery)
HXLINE(1148)		if (hx::IsNotNull( query )) {
HXLINE(1148)			::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_deregister(hx::DynamicPtr(query));
            		}
HXLINE(1149)		int _hx_tmp = this->_hx___getObjectID(query);
HXDLIN(1149)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_delete_query(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,deleteQuery,(void))

void NativeOpenGLRenderContext_obj::deleteRenderbuffer( ::lime::graphics::opengl::GLObject renderbuffer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1154_deleteRenderbuffer)
HXLINE(1156)		if (hx::IsNotNull( renderbuffer )) {
HXLINE(1156)			::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_deregister(hx::DynamicPtr(renderbuffer));
            		}
HXLINE(1157)		int _hx_tmp = this->_hx___getObjectID(renderbuffer);
HXDLIN(1157)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_delete_renderbuffer(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,deleteRenderbuffer,(void))

void NativeOpenGLRenderContext_obj::deleteSampler( ::lime::graphics::opengl::GLObject sampler){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1162_deleteSampler)
HXLINE(1164)		if (hx::IsNotNull( sampler )) {
HXLINE(1164)			::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_deregister(hx::DynamicPtr(sampler));
            		}
HXLINE(1165)		int _hx_tmp = this->_hx___getObjectID(sampler);
HXDLIN(1165)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_delete_sampler(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,deleteSampler,(void))

void NativeOpenGLRenderContext_obj::deleteShader( ::lime::graphics::opengl::GLObject shader){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1170_deleteShader)
HXLINE(1172)		if (hx::IsNotNull( shader )) {
HXLINE(1172)			::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_deregister(hx::DynamicPtr(shader));
            		}
HXLINE(1173)		int _hx_tmp = this->_hx___getObjectID(shader);
HXDLIN(1173)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_delete_shader(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,deleteShader,(void))

void NativeOpenGLRenderContext_obj::deleteSync( ::Dynamic sync){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1180_deleteSync)
HXDLIN(1180)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_delete_sync(hx::DynamicPtr(sync));
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,deleteSync,(void))

void NativeOpenGLRenderContext_obj::deleteTexture( ::lime::graphics::opengl::GLObject texture){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1185_deleteTexture)
HXLINE(1187)		if (hx::IsNotNull( texture )) {
HXLINE(1187)			::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_deregister(hx::DynamicPtr(texture));
            		}
HXLINE(1188)		int _hx_tmp = this->_hx___getObjectID(texture);
HXDLIN(1188)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_delete_texture(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,deleteTexture,(void))

void NativeOpenGLRenderContext_obj::deleteTransformFeedback( ::lime::graphics::opengl::GLObject transformFeedback){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1193_deleteTransformFeedback)
HXLINE(1195)		if (hx::IsNotNull( transformFeedback )) {
HXLINE(1195)			::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_deregister(hx::DynamicPtr(transformFeedback));
            		}
HXLINE(1196)		int _hx_tmp = this->_hx___getObjectID(transformFeedback);
HXDLIN(1196)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_delete_transform_feedback(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,deleteTransformFeedback,(void))

void NativeOpenGLRenderContext_obj::deleteVertexArray( ::lime::graphics::opengl::GLObject vertexArray){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1201_deleteVertexArray)
HXLINE(1203)		if (hx::IsNotNull( vertexArray )) {
HXLINE(1203)			::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_object_deregister(hx::DynamicPtr(vertexArray));
            		}
HXLINE(1204)		int _hx_tmp = this->_hx___getObjectID(vertexArray);
HXDLIN(1204)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_delete_vertex_array(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,deleteVertexArray,(void))

void NativeOpenGLRenderContext_obj::depthFunc(int func){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1211_depthFunc)
HXDLIN(1211)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_depth_func(func);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,depthFunc,(void))

void NativeOpenGLRenderContext_obj::depthMask(bool flag){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1218_depthMask)
HXDLIN(1218)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_depth_mask(flag);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,depthMask,(void))

void NativeOpenGLRenderContext_obj::depthRangef(Float zNear,Float zFar){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1225_depthRangef)
HXDLIN(1225)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_depth_rangef(( (float)(zNear) ),( (float)(zFar) ));
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,depthRangef,(void))

void NativeOpenGLRenderContext_obj::detachShader( ::lime::graphics::opengl::GLObject program, ::lime::graphics::opengl::GLObject shader){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1230_detachShader)
HXLINE(1231)		bool _hx_tmp;
HXDLIN(1231)		if (hx::IsNotNull( program )) {
HXLINE(1231)			_hx_tmp = hx::IsNotNull( program->refs );
            		}
            		else {
HXLINE(1231)			_hx_tmp = false;
            		}
HXDLIN(1231)		if (_hx_tmp) {
HXLINE(1233)			program->refs->remove(shader);
            		}
HXLINE(1237)		int _hx_tmp1 = this->_hx___getObjectID(program);
HXDLIN(1237)		int _hx_tmp2 = this->_hx___getObjectID(shader);
HXDLIN(1237)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_detach_shader(_hx_tmp1,_hx_tmp2);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,detachShader,(void))

void NativeOpenGLRenderContext_obj::disable(int cap){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1244_disable)
HXDLIN(1244)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_disable(cap);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,disable,(void))

void NativeOpenGLRenderContext_obj::disableVertexAttribArray(int index){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1251_disableVertexAttribArray)
HXDLIN(1251)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_disable_vertex_attrib_array(index);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,disableVertexAttribArray,(void))

void NativeOpenGLRenderContext_obj::drawArrays(int mode,int first,int count){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1258_drawArrays)
HXDLIN(1258)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_draw_arrays(mode,first,count);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,drawArrays,(void))

void NativeOpenGLRenderContext_obj::drawArraysInstanced(int mode,int first,int count,int instanceCount){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1265_drawArraysInstanced)
HXDLIN(1265)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_draw_arrays_instanced(mode,first,count,instanceCount);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,drawArraysInstanced,(void))

void NativeOpenGLRenderContext_obj::drawBuffers(::Array< int > buffers){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1278_drawBuffers)
HXDLIN(1278)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_draw_buffers(hx::DynamicPtr(buffers));
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,drawBuffers,(void))

void NativeOpenGLRenderContext_obj::drawElements(int mode,int count,int type,Float offset){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1285_drawElements)
HXDLIN(1285)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_draw_elements(mode,count,type,offset);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,drawElements,(void))

void NativeOpenGLRenderContext_obj::drawElementsInstanced(int mode,int count,int type,Float offset,int instanceCount){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1292_drawElementsInstanced)
HXDLIN(1292)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_draw_elements_instanced(mode,count,type,offset,instanceCount);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,drawElementsInstanced,(void))

void NativeOpenGLRenderContext_obj::drawRangeElements(int mode,int start,int end,int count,int type,Float offset){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1299_drawRangeElements)
HXDLIN(1299)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_draw_range_elements(mode,start,end,count,type,offset);
            	}


HX_DEFINE_DYNAMIC_FUNC6(NativeOpenGLRenderContext_obj,drawRangeElements,(void))

void NativeOpenGLRenderContext_obj::enable(int cap){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1306_enable)
HXDLIN(1306)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_enable(cap);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,enable,(void))

void NativeOpenGLRenderContext_obj::enableVertexAttribArray(int index){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1313_enableVertexAttribArray)
HXDLIN(1313)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_enable_vertex_attrib_array(index);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,enableVertexAttribArray,(void))

void NativeOpenGLRenderContext_obj::endQuery(int target){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1320_endQuery)
HXDLIN(1320)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_end_query(target);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,endQuery,(void))

void NativeOpenGLRenderContext_obj::endTransformFeedback(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1327_endTransformFeedback)
HXDLIN(1327)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_end_transform_feedback();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,endTransformFeedback,(void))

 ::Dynamic NativeOpenGLRenderContext_obj::fenceSync(int condition,int flags){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1334_fenceSync)
HXDLIN(1334)		return ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_fence_sync(condition,flags)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,fenceSync,return )

void NativeOpenGLRenderContext_obj::finish(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1343_finish)
HXDLIN(1343)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_finish();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,finish,(void))

void NativeOpenGLRenderContext_obj::flush(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1350_flush)
HXDLIN(1350)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_flush();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,flush,(void))

void NativeOpenGLRenderContext_obj::framebufferRenderbuffer(int target,int attachment,int renderbuffertarget, ::lime::graphics::opengl::GLObject renderbuffer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1357_framebufferRenderbuffer)
HXDLIN(1357)		int _hx_tmp = this->_hx___getObjectID(renderbuffer);
HXDLIN(1357)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_framebuffer_renderbuffer(target,attachment,renderbuffertarget,_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,framebufferRenderbuffer,(void))

void NativeOpenGLRenderContext_obj::framebufferTexture2D(int target,int attachment,int textarget, ::lime::graphics::opengl::GLObject texture,int level){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1364_framebufferTexture2D)
HXDLIN(1364)		int _hx_tmp = this->_hx___getObjectID(texture);
HXDLIN(1364)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_framebuffer_texture2D(target,attachment,textarget,_hx_tmp,level);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,framebufferTexture2D,(void))

void NativeOpenGLRenderContext_obj::framebufferTextureLayer(int target,int attachment, ::lime::graphics::opengl::GLObject texture,int level,int layer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1371_framebufferTextureLayer)
HXDLIN(1371)		int _hx_tmp = this->_hx___getObjectID(texture);
HXDLIN(1371)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_framebuffer_texture_layer(target,attachment,_hx_tmp,level,layer);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,framebufferTextureLayer,(void))

void NativeOpenGLRenderContext_obj::frontFace(int mode){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1378_frontFace)
HXDLIN(1378)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_front_face(mode);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,frontFace,(void))

void NativeOpenGLRenderContext_obj::generateMipmap(int target){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1385_generateMipmap)
HXDLIN(1385)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_generate_mipmap(target);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,generateMipmap,(void))

 ::Dynamic NativeOpenGLRenderContext_obj::getActiveAttrib( ::lime::graphics::opengl::GLObject program,int index){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1407_getActiveAttrib)
HXDLIN(1407)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(1407)		return ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_active_attrib(_hx_tmp,index)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getActiveAttrib,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getActiveUniform( ::lime::graphics::opengl::GLObject program,int index){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1432_getActiveUniform)
HXDLIN(1432)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(1432)		return ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_active_uniform(_hx_tmp,index)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getActiveUniform,return )

int NativeOpenGLRenderContext_obj::getActiveUniformBlocki( ::lime::graphics::opengl::GLObject program,int uniformBlockIndex,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1442_getActiveUniformBlocki)
HXDLIN(1442)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(1442)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_active_uniform_blocki(_hx_tmp,uniformBlockIndex,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getActiveUniformBlocki,return )

void NativeOpenGLRenderContext_obj::getActiveUniformBlockiv( ::lime::graphics::opengl::GLObject program,int uniformBlockIndex,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1451_getActiveUniformBlockiv)
HXDLIN(1451)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(1451)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_active_uniform_blockiv(_hx_tmp,uniformBlockIndex,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,getActiveUniformBlockiv,(void))

::String NativeOpenGLRenderContext_obj::getActiveUniformBlockName( ::lime::graphics::opengl::GLObject program,int uniformBlockIndex){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1456_getActiveUniformBlockName)
HXLINE(1458)		int result = this->_hx___getObjectID(program);
HXDLIN(1458)		 ::hx::Object * result1 = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_active_uniform_block_name(result,uniformBlockIndex);
HXLINE(1462)		return ( ( ::Dynamic)(result1) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getActiveUniformBlockName,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getActiveUniformBlockParameter( ::lime::graphics::opengl::GLObject program,int uniformBlockIndex,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1472_getActiveUniformBlockParameter)
HXDLIN(1472)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getActiveUniformBlockParameter,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getActiveUniforms( ::lime::graphics::opengl::GLObject program,::Array< int > uniformIndices,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1479_getActiveUniforms)
HXDLIN(1479)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getActiveUniforms,return )

void NativeOpenGLRenderContext_obj::getActiveUniformsiv( ::lime::graphics::opengl::GLObject program,::Array< int > uniformIndices,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1491_getActiveUniformsiv)
HXDLIN(1491)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(1491)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_active_uniformsiv(_hx_tmp,hx::DynamicPtr(uniformIndices),pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,getActiveUniformsiv,(void))

::Array< ::Dynamic> NativeOpenGLRenderContext_obj::getAttachedShaders( ::lime::graphics::opengl::GLObject program){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1496_getAttachedShaders)
HXLINE(1498)		int result = this->_hx___getObjectID(program);
HXDLIN(1498)		 ::hx::Object * result1 = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_attached_shaders(result);
HXLINE(1507)		return ( ( ::Dynamic)(result1) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getAttachedShaders,return )

int NativeOpenGLRenderContext_obj::getAttribLocation( ::lime::graphics::opengl::GLObject program,::String name){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1516_getAttribLocation)
HXDLIN(1516)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(1516)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_attrib_location(_hx_tmp,name);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getAttribLocation,return )

bool NativeOpenGLRenderContext_obj::getBoolean(int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1525_getBoolean)
HXDLIN(1525)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_boolean(pname);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getBoolean,return )

void NativeOpenGLRenderContext_obj::getBooleanv(int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1534_getBooleanv)
HXDLIN(1534)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_booleanv(pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getBooleanv,(void))

 ::Dynamic NativeOpenGLRenderContext_obj::getBufferParameter(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1540_getBufferParameter)
HXDLIN(1540)		return this->getBufferParameteri(target,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getBufferParameter,return )

int NativeOpenGLRenderContext_obj::getBufferParameteri(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1546_getBufferParameteri)
HXDLIN(1546)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_buffer_parameteri(target,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getBufferParameteri,return )

void NativeOpenGLRenderContext_obj::getBufferParameteri64v(int target,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1555_getBufferParameteri64v)
HXDLIN(1555)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_buffer_parameteri64v(target,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getBufferParameteri64v,(void))

void NativeOpenGLRenderContext_obj::getBufferParameteriv(int target,int pname,Float data){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1562_getBufferParameteriv)
HXDLIN(1562)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_buffer_parameteriv(target,pname,data);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getBufferParameteriv,(void))

Float NativeOpenGLRenderContext_obj::getBufferPointerv(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1569_getBufferPointerv)
HXDLIN(1569)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_buffer_pointerv(target,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getBufferPointerv,return )

void NativeOpenGLRenderContext_obj::getBufferSubData(int target,Float offset,int size,Float data){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1578_getBufferSubData)
HXDLIN(1578)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_buffer_sub_data(target,offset,size,data);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,getBufferSubData,(void))

 ::Dynamic NativeOpenGLRenderContext_obj::getContextAttributes(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1583_getContextAttributes)
HXLINE(1585)		 ::Dynamic base = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_context_attributes()) );
HXLINE(1586)		base->__SetField(HX_("premultipliedAlpha",28,8e,5c,1a),false,hx::paccDynamic);
HXLINE(1587)		base->__SetField(HX_("preserveDrawingBuffer",92,bb,1e,4b),false,hx::paccDynamic);
HXLINE(1588)		return base;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,getContextAttributes,return )

int NativeOpenGLRenderContext_obj::getError(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1597_getError)
HXDLIN(1597)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_error();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,getError,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getExtension(::String name){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_1604_getExtension)
HXLINE(1605)		if (hx::IsNull( ::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjects )) {
HXLINE(1607)			::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjects =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(1608)			::Array< ::String > supportedExtensions = this->getSupportedExtensions();
HXLINE(1610)			{
HXLINE(1610)				int _g = 0;
HXDLIN(1610)				while((_g < supportedExtensions->length)){
HXLINE(1610)					::String extension = supportedExtensions->__get(_g);
HXDLIN(1610)					_g = (_g + 1);
HXLINE(1612)					if (::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->exists(extension)) {
HXLINE(1614)						::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjects->set(extension,null());
            					}
            				}
            			}
            		}
HXLINE(1619)		if (::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjects->exists(name)) {
HXLINE(1621)			 ::Dynamic object = ::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjects->get(name);
HXLINE(1623)			if (hx::IsNull( object )) {
HXLINE(1625)				object = ::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->get(name)();
HXLINE(1626)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjects->set(name,object);
HXLINE(1629)				::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_extension(name);
            			}
HXLINE(1633)			return object;
            		}
            		else {
HXLINE(1637)			return null();
            		}
HXLINE(1619)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getExtension,return )

Float NativeOpenGLRenderContext_obj::getFloat(int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1644_getFloat)
HXDLIN(1644)		return ( (Float)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_float(pname)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getFloat,return )

void NativeOpenGLRenderContext_obj::getFloatv(int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1653_getFloatv)
HXDLIN(1653)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_floatv(pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getFloatv,(void))

int NativeOpenGLRenderContext_obj::getFragDataLocation( ::lime::graphics::opengl::GLObject program,::String name){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1660_getFragDataLocation)
HXDLIN(1660)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(1660)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_frag_data_location(_hx_tmp,name);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getFragDataLocation,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getFramebufferAttachmentParameter(int target,int attachment,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1667_getFramebufferAttachmentParameter)
HXLINE(1668)		int value = this->getFramebufferAttachmentParameteri(target,attachment,pname);
HXLINE(1670)		if ((pname == this->FRAMEBUFFER_ATTACHMENT_OBJECT_NAME)) {
HXLINE(1672)			 ::lime::graphics::opengl::GLObject texture = ::lime::graphics::opengl::_GLTexture::GLTexture_Impl__obj::fromInt(value);
HXLINE(1673)			if (hx::IsNotNull( texture )) {
HXLINE(1673)				return texture;
            			}
HXLINE(1675)			 ::lime::graphics::opengl::GLObject renderbuffer = ::lime::graphics::opengl::_GLRenderbuffer::GLRenderbuffer_Impl__obj::fromInt(value);
HXLINE(1676)			if (hx::IsNotNull( renderbuffer )) {
HXLINE(1676)				return renderbuffer;
            			}
            		}
HXLINE(1679)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getFramebufferAttachmentParameter,return )

int NativeOpenGLRenderContext_obj::getFramebufferAttachmentParameteri(int target,int attachment,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1685_getFramebufferAttachmentParameteri)
HXDLIN(1685)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_framebuffer_attachment_parameteri(target,attachment,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getFramebufferAttachmentParameteri,return )

void NativeOpenGLRenderContext_obj::getFramebufferAttachmentParameteriv(int target,int attachment,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1694_getFramebufferAttachmentParameteriv)
HXDLIN(1694)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_framebuffer_attachment_parameteriv(target,attachment,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,getFramebufferAttachmentParameteriv,(void))

 ::Dynamic NativeOpenGLRenderContext_obj::getIndexedParameter(int target,int index){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1702_getIndexedParameter)
HXDLIN(1702)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getIndexedParameter,return )

int NativeOpenGLRenderContext_obj::getInteger(int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1708_getInteger)
HXDLIN(1708)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integer(pname);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getInteger,return )

 cpp::Int64Struct NativeOpenGLRenderContext_obj::getInteger64(int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1721_getInteger64)
HXDLIN(1721)		return ( ::cpp::Int64Struct(0));
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getInteger64,return )

 cpp::Int64Struct NativeOpenGLRenderContext_obj::getInteger64i(int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1732_getInteger64i)
HXDLIN(1732)		return ( ::cpp::Int64Struct(0));
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getInteger64i,return )

void NativeOpenGLRenderContext_obj::getInteger64i_v(int pname,int index,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1739_getInteger64i_v)
HXDLIN(1739)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integer64i_v(pname,index,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getInteger64i_v,(void))

void NativeOpenGLRenderContext_obj::getInteger64v(int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1746_getInteger64v)
HXDLIN(1746)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integer64v(pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getInteger64v,(void))

void NativeOpenGLRenderContext_obj::getIntegeri_v(int pname,int index,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1753_getIntegeri_v)
HXDLIN(1753)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integeri_v(pname,index,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getIntegeri_v,(void))

void NativeOpenGLRenderContext_obj::getIntegerv(int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1760_getIntegerv)
HXDLIN(1760)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_integerv(pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getIntegerv,(void))

int NativeOpenGLRenderContext_obj::getInternalformati(int target,int internalformat,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1771_getInternalformati)
HXDLIN(1771)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getInternalformati,return )

void NativeOpenGLRenderContext_obj::getInternalformativ(int target,int internalformat,int pname,int bufSize,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1778_getInternalformativ)
HXDLIN(1778)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_internalformativ(target,internalformat,pname,bufSize,params);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,getInternalformativ,(void))

 ::Dynamic NativeOpenGLRenderContext_obj::getInternalformatParameter(int target,int internalformat,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1786_getInternalformatParameter)
HXDLIN(1786)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getInternalformatParameter,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getParameter(int pname){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_1791_getParameter)
HXDLIN(1791)		switch((int)(pname)){
            			case (int)2885: case (int)2886: case (int)2932: case (int)2961: case (int)2962: case (int)2963: case (int)2964: case (int)2965: case (int)2966: case (int)2967: case (int)2968: case (int)3317: case (int)3333: case (int)3379: case (int)3408: case (int)3410: case (int)3411: case (int)3412: case (int)3413: case (int)3414: case (int)3415: case (int)32777: case (int)32936: case (int)32937: case (int)32968: case (int)32969: case (int)32970: case (int)32971: case (int)33170: case (int)34016: case (int)34024: case (int)34076: case (int)34816: case (int)34817: case (int)34818: case (int)34819: case (int)34877: case (int)34921: case (int)34930: case (int)35660: case (int)35661: case (int)35738: case (int)35739: case (int)36003: case (int)36004: case (int)36005: case (int)36347: case (int)36348: case (int)36349: case (int)37443: {
HXLINE(1821)				return this->getInteger(pname);
            			}
            			break;
            			case (int)2928: case (int)33901: case (int)33902: {
HXLINE(1810)				 ::lime::utils::ArrayBufferView this1 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,2,8);
HXDLIN(1810)				 ::lime::utils::ArrayBufferView params = this1;
HXLINE(1811)				this->getFloatv(pname,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params));
HXLINE(1812)				return params;
            			}
            			break;
            			case (int)2884: case (int)2929: case (int)2930: case (int)2960: case (int)3024: case (int)3042: case (int)3089: case (int)32823: case (int)32939: case (int)37440: case (int)37441: {
HXLINE(1795)				return this->getBoolean(pname);
            			}
            			break;
            			case (int)2978: case (int)3088: {
HXLINE(1834)				 ::lime::utils::ArrayBufferView this2 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,4,3);
HXDLIN(1834)				 ::lime::utils::ArrayBufferView params1 = this2;
HXLINE(1835)				this->getIntegerv(pname,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params1));
HXLINE(1836)				return params1;
            			}
            			break;
            			case (int)3106: case (int)32773: {
HXLINE(1815)				 ::lime::utils::ArrayBufferView this3 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,4,8);
HXDLIN(1815)				 ::lime::utils::ArrayBufferView params2 = this3;
HXLINE(1816)				this->getFloatv(pname,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params2));
HXLINE(1817)				return params2;
            			}
            			break;
            			case (int)3107: {
HXLINE(1798)				 ::haxe::io::Bytes params3 = ::haxe::io::Bytes_obj::alloc(4);
HXLINE(1799)				this->getBooleanv(pname,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBuffer(params3));
HXLINE(1801)				::Array< bool > data = ::Array_obj< bool >::__new();
HXLINE(1802)				{
HXLINE(1803)					data[0] = (params3->b->__get(0) != 0);
HXDLIN(1803)					data[1] = (params3->b->__get(1) != 0);
HXDLIN(1803)					data[2] = (params3->b->__get(2) != 0);
HXDLIN(1803)					data[3] = (params3->b->__get(3) != 0);
            				}
HXLINE(1804)				return data;
            			}
            			break;
            			case (int)3386: {
HXLINE(1829)				 ::lime::utils::ArrayBufferView this4 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,2,3);
HXDLIN(1829)				 ::lime::utils::ArrayBufferView params4 = this4;
HXLINE(1830)				this->getIntegerv(pname,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params4));
HXLINE(1831)				return params4;
            			}
            			break;
            			case (int)7936: case (int)7937: case (int)7938: case (int)35724: {
HXLINE(1839)				return this->getString(pname);
            			}
            			break;
            			case (int)2849: case (int)2931: case (int)10752: case (int)32824: case (int)32938: {
HXLINE(1807)				return this->getFloat(pname);
            			}
            			break;
            			case (int)32873: case (int)34068: {
HXLINE(1854)				 ::lime::graphics::opengl::GLObject data1 = ::lime::graphics::opengl::_GLTexture::GLTexture_Impl__obj::fromInt(this->getInteger(pname));
HXLINE(1855)				return data1;
            			}
            			break;
            			case (int)34467: {
HXLINE(1824)				 ::Dynamic elements = this->getInteger(34466);
HXDLIN(1824)				 ::lime::utils::ArrayBufferView this5;
HXDLIN(1824)				if (hx::IsNotNull( elements )) {
HXLINE(1824)					this5 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,elements,7);
            				}
            				else {
HXLINE(1824)					HX_STACK_DO_THROW(HX_("Invalid constructor arguments for UInt32Array",10,43,eb,8e));
            				}
HXDLIN(1824)				 ::lime::utils::ArrayBufferView params5 = this5;
HXLINE(1825)				this->getIntegerv(pname,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params5));
HXLINE(1826)				return params5;
            			}
            			break;
            			case (int)34964: case (int)34965: {
HXLINE(1842)				 ::lime::graphics::opengl::GLObject data2 = ::lime::graphics::opengl::_GLBuffer::GLBuffer_Impl__obj::fromInt(this->getInteger(pname));
HXLINE(1843)				return data2;
            			}
            			break;
            			case (int)35725: {
HXLINE(1846)				 ::lime::graphics::opengl::GLObject data3 = ::lime::graphics::opengl::_GLProgram::GLProgram_Impl__obj::fromInt(this->getInteger(pname));
HXLINE(1847)				return data3;
            			}
            			break;
            			case (int)36006: {
HXLINE(1850)				 ::lime::graphics::opengl::GLObject data4 = ::lime::graphics::opengl::_GLFramebuffer::GLFramebuffer_Impl__obj::fromInt(this->getInteger(pname));
HXLINE(1851)				return data4;
            			}
            			break;
            			default:{
HXLINE(1858)				return null();
            			}
            		}
HXLINE(1791)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getParameter,return )

int NativeOpenGLRenderContext_obj::getProgrami( ::lime::graphics::opengl::GLObject program,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1865_getProgrami)
HXDLIN(1865)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(1865)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_programi(_hx_tmp,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getProgrami,return )

void NativeOpenGLRenderContext_obj::getProgramiv( ::lime::graphics::opengl::GLObject program,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1874_getProgramiv)
HXDLIN(1874)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(1874)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_programiv(_hx_tmp,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getProgramiv,(void))

 ::haxe::io::Bytes NativeOpenGLRenderContext_obj::getProgramBinary( ::lime::graphics::opengl::GLObject program,int binaryFormat){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1879_getProgramBinary)
HXLINE(1881)		 ::haxe::io::Bytes bytes = ::haxe::io::Bytes_obj::alloc(0);
HXLINE(1882)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(1882)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_program_binary(_hx_tmp,binaryFormat,hx::DynamicPtr(bytes));
HXLINE(1883)		return bytes;
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getProgramBinary,return )

::String NativeOpenGLRenderContext_obj::getProgramInfoLog( ::lime::graphics::opengl::GLObject program){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1890_getProgramInfoLog)
HXLINE(1892)		int result = this->_hx___getObjectID(program);
HXDLIN(1892)		 ::hx::Object * result1 = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_program_info_log(result);
HXLINE(1896)		return ( ( ::Dynamic)(result1) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getProgramInfoLog,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getProgramParameter( ::lime::graphics::opengl::GLObject program,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1904_getProgramParameter)
HXDLIN(1904)		return this->getProgrami(program,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getProgramParameter,return )

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::getQuery(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1909_getQuery)
HXDLIN(1909)		return ::lime::graphics::opengl::_GLQuery::GLQuery_Impl__obj::fromInt(this->getQueryi(target,pname));
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getQuery,return )

int NativeOpenGLRenderContext_obj::getQueryi(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1915_getQueryi)
HXDLIN(1915)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_queryi(target,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getQueryi,return )

void NativeOpenGLRenderContext_obj::getQueryiv(int target,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1924_getQueryiv)
HXDLIN(1924)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_queryiv(target,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getQueryiv,(void))

int NativeOpenGLRenderContext_obj::getQueryObjectui( ::lime::graphics::opengl::GLObject query,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1931_getQueryObjectui)
HXDLIN(1931)		int _hx_tmp = this->_hx___getObjectID(query);
HXDLIN(1931)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_query_objectui(_hx_tmp,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getQueryObjectui,return )

void NativeOpenGLRenderContext_obj::getQueryObjectuiv( ::lime::graphics::opengl::GLObject query,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1940_getQueryObjectuiv)
HXDLIN(1940)		int _hx_tmp = this->_hx___getObjectID(query);
HXDLIN(1940)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_query_objectuiv(_hx_tmp,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getQueryObjectuiv,(void))

 ::Dynamic NativeOpenGLRenderContext_obj::getQueryParameter( ::lime::graphics::opengl::GLObject query,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1948_getQueryParameter)
HXDLIN(1948)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getQueryParameter,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getRenderbufferParameter(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1953_getRenderbufferParameter)
HXDLIN(1953)		return this->getRenderbufferParameteri(target,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getRenderbufferParameter,return )

int NativeOpenGLRenderContext_obj::getRenderbufferParameteri(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1959_getRenderbufferParameteri)
HXDLIN(1959)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_renderbuffer_parameteri(target,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getRenderbufferParameteri,return )

void NativeOpenGLRenderContext_obj::getRenderbufferParameteriv(int target,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1968_getRenderbufferParameteriv)
HXDLIN(1968)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_renderbuffer_parameteriv(target,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getRenderbufferParameteriv,(void))

 ::Dynamic NativeOpenGLRenderContext_obj::getSamplerParameter( ::lime::graphics::opengl::GLObject sampler,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1976_getSamplerParameter)
HXDLIN(1976)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getSamplerParameter,return )

Float NativeOpenGLRenderContext_obj::getSamplerParameterf( ::lime::graphics::opengl::GLObject sampler,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1982_getSamplerParameterf)
HXDLIN(1982)		int _hx_tmp = this->_hx___getObjectID(sampler);
HXDLIN(1982)		return ( (Float)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_sampler_parameterf(_hx_tmp,pname)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getSamplerParameterf,return )

void NativeOpenGLRenderContext_obj::getSamplerParameterfv( ::lime::graphics::opengl::GLObject sampler,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1991_getSamplerParameterfv)
HXDLIN(1991)		int _hx_tmp = this->_hx___getObjectID(sampler);
HXDLIN(1991)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_sampler_parameterfv(_hx_tmp,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getSamplerParameterfv,(void))

int NativeOpenGLRenderContext_obj::getSamplerParameteri( ::lime::graphics::opengl::GLObject sampler,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_1998_getSamplerParameteri)
HXDLIN(1998)		int _hx_tmp = this->_hx___getObjectID(sampler);
HXDLIN(1998)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_sampler_parameteri(_hx_tmp,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getSamplerParameteri,return )

void NativeOpenGLRenderContext_obj::getSamplerParameteriv( ::lime::graphics::opengl::GLObject sampler,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2007_getSamplerParameteriv)
HXDLIN(2007)		int _hx_tmp = this->_hx___getObjectID(sampler);
HXDLIN(2007)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_sampler_parameteriv(_hx_tmp,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getSamplerParameteriv,(void))

int NativeOpenGLRenderContext_obj::getShaderi( ::lime::graphics::opengl::GLObject shader,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2014_getShaderi)
HXDLIN(2014)		int _hx_tmp = this->_hx___getObjectID(shader);
HXDLIN(2014)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_shaderi(_hx_tmp,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getShaderi,return )

void NativeOpenGLRenderContext_obj::getShaderiv( ::lime::graphics::opengl::GLObject shader,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2023_getShaderiv)
HXDLIN(2023)		int _hx_tmp = this->_hx___getObjectID(shader);
HXDLIN(2023)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_shaderiv(_hx_tmp,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getShaderiv,(void))

::String NativeOpenGLRenderContext_obj::getShaderInfoLog( ::lime::graphics::opengl::GLObject shader){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2028_getShaderInfoLog)
HXLINE(2030)		int result = this->_hx___getObjectID(shader);
HXDLIN(2030)		 ::hx::Object * result1 = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_shader_info_log(result);
HXLINE(2034)		return ( ( ::Dynamic)(result1) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getShaderInfoLog,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getShaderParameter( ::lime::graphics::opengl::GLObject shader,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2042_getShaderParameter)
HXDLIN(2042)		return this->getShaderi(shader,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getShaderParameter,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getShaderPrecisionFormat(int shadertype,int precisiontype){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2048_getShaderPrecisionFormat)
HXDLIN(2048)		return ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_shader_precision_format(shadertype,precisiontype)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getShaderPrecisionFormat,return )

::String NativeOpenGLRenderContext_obj::getShaderSource( ::lime::graphics::opengl::GLObject shader){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2055_getShaderSource)
HXLINE(2057)		int result = this->_hx___getObjectID(shader);
HXDLIN(2057)		 ::hx::Object * result1 = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_shader_source(result);
HXLINE(2061)		return ( ( ::Dynamic)(result1) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getShaderSource,return )

::String NativeOpenGLRenderContext_obj::getString(int name){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2068_getString)
HXLINE(2070)		 ::hx::Object * result = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_string(name);
HXLINE(2074)		return ( ( ::Dynamic)(result) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,getString,return )

::String NativeOpenGLRenderContext_obj::getStringi(int name,int index){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2081_getStringi)
HXLINE(2083)		 ::hx::Object * result = ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_stringi(name,index);
HXLINE(2087)		return ( ( ::Dynamic)(result) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getStringi,return )

::Array< ::String > NativeOpenGLRenderContext_obj::getSupportedExtensions(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2094_getSupportedExtensions)
HXLINE(2095)		if (hx::IsNull( ::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___supportedExtensions )) {
HXLINE(2099)			::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___supportedExtensions = ::Array_obj< ::String >::__new();
HXLINE(2100)			::String extensions = this->getString(7939);
HXLINE(2102)			if (hx::IsNotNull( extensions )) {
HXLINE(2104)				::Array< ::String > extensionList = extensions.split(HX_(" ",20,00,00,00));
HXLINE(2106)				{
HXLINE(2106)					int _g = 0;
HXDLIN(2106)					while((_g < extensionList->length)){
HXLINE(2106)						::String extension = extensionList->__get(_g);
HXDLIN(2106)						_g = (_g + 1);
HXLINE(2108)						if (::StringTools_obj::startsWith(extension,HX_("GL_",9a,22,36,00))) {
HXLINE(2110)							::Array< ::String > _hx_tmp = ::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___supportedExtensions;
HXDLIN(2110)							_hx_tmp->push(extension.substr(3,null()));
            						}
            						else {
HXLINE(2114)							::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___supportedExtensions->push(extension);
            						}
            					}
            				}
            			}
            		}
HXLINE(2120)		return ::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___supportedExtensions;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,getSupportedExtensions,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getSyncParameter( ::Dynamic sync,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2127_getSyncParameter)
HXDLIN(2127)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getSyncParameter,return )

int NativeOpenGLRenderContext_obj::getSyncParameteri( ::Dynamic sync,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2134_getSyncParameteri)
HXDLIN(2134)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getSyncParameteri,return )

void NativeOpenGLRenderContext_obj::getSyncParameteriv( ::Dynamic sync,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2138_getSyncParameteriv)
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getSyncParameteriv,(void))

 ::Dynamic NativeOpenGLRenderContext_obj::getTexParameter(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2144_getTexParameter)
HXDLIN(2144)		switch((int)(pname)){
            			case (int)33082: case (int)33083: {
HXLINE(2147)				return this->getTexParameterf(target,pname);
            			}
            			break;
            			case (int)37167: {
HXLINE(2150)				return (this->getTexParameterf(target,pname) != 0);
            			}
            			break;
            			default:{
HXLINE(2153)				return this->getTexParameteri(target,pname);
            			}
            		}
HXLINE(2144)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getTexParameter,return )

Float NativeOpenGLRenderContext_obj::getTexParameterf(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2160_getTexParameterf)
HXDLIN(2160)		return ( (Float)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_tex_parameterf(target,pname)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getTexParameterf,return )

void NativeOpenGLRenderContext_obj::getTexParameterfv(int target,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2169_getTexParameterfv)
HXDLIN(2169)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_tex_parameterfv(target,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getTexParameterfv,(void))

int NativeOpenGLRenderContext_obj::getTexParameteri(int target,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2176_getTexParameteri)
HXDLIN(2176)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_tex_parameteri(target,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getTexParameteri,return )

void NativeOpenGLRenderContext_obj::getTexParameteriv(int target,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2185_getTexParameteriv)
HXDLIN(2185)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_tex_parameteriv(target,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getTexParameteriv,(void))

 ::Dynamic NativeOpenGLRenderContext_obj::getTransformFeedbackVarying( ::lime::graphics::opengl::GLObject program,int index){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2190_getTransformFeedbackVarying)
HXLINE(2207)		int result = this->_hx___getObjectID(program);
HXDLIN(2207)		 ::Dynamic result1 = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_transform_feedback_varying(result,index)) );
HXLINE(2208)		return result1;
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getTransformFeedbackVarying,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getUniform( ::lime::graphics::opengl::GLObject program,int location){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_2216_getUniform)
HXLINE(2217)		 ::Dynamic info = this->getActiveUniform(program,location);
HXLINE(2219)		int bools = 0;
HXLINE(2220)		int ints = 0;
HXLINE(2221)		int floats = 0;
HXLINE(2223)		switch((int)(( (int)(info->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ))){
            			case (int)5124: {
HXLINE(2228)				ints = 1;
            			}
            			break;
            			case (int)5126: {
HXLINE(2230)				floats = 1;
            			}
            			break;
            			case (int)35664: {
HXLINE(2232)				floats = 2;
            			}
            			break;
            			case (int)35665: {
HXLINE(2238)				floats = 3;
            			}
            			break;
            			case (int)35666: {
HXLINE(2244)				floats = 4;
            			}
            			break;
            			case (int)35667: {
HXLINE(2234)				ints = 2;
            			}
            			break;
            			case (int)35668: {
HXLINE(2240)				ints = 3;
            			}
            			break;
            			case (int)35669: {
HXLINE(2246)				ints = 4;
            			}
            			break;
            			case (int)35670: {
HXLINE(2226)				bools = 1;
            			}
            			break;
            			case (int)35671: {
HXLINE(2236)				bools = 2;
            			}
            			break;
            			case (int)35672: {
HXLINE(2242)				bools = 3;
            			}
            			break;
            			case (int)35673: {
HXLINE(2248)				bools = 4;
            			}
            			break;
            			case (int)35674: {
HXLINE(2250)				floats = 4;
            			}
            			break;
            			case (int)35675: {
HXLINE(2256)				floats = 9;
            			}
            			break;
            			case (int)35676: {
HXLINE(2262)				floats = 16;
            			}
            			break;
            			case (int)35678: case (int)35679: case (int)35680: case (int)35682: {
HXLINE(2268)				ints = 1;
            			}
            			break;
            			case (int)35685: {
HXLINE(2252)				floats = 12;
            			}
            			break;
            			case (int)35686: {
HXLINE(2254)				floats = 16;
            			}
            			break;
            			case (int)35687: {
HXLINE(2258)				floats = 18;
            			}
            			break;
            			case (int)35688: {
HXLINE(2260)				floats = 36;
            			}
            			break;
            			case (int)35689: {
HXLINE(2264)				floats = 32;
            			}
            			break;
            			case (int)35690: {
HXLINE(2266)				floats = 48;
            			}
            			break;
            			default:{
HXLINE(2270)				return null();
            			}
            		}
HXLINE(2273)		if ((bools == 1)) {
HXLINE(2275)			return (this->getUniformi(program,location) != 0);
            		}
            		else {
HXLINE(2277)			if ((ints == 1)) {
HXLINE(2279)				return this->getUniformi(program,location);
            			}
            			else {
HXLINE(2281)				if ((floats == 1)) {
HXLINE(2283)					return this->getUniformf(program,location);
            				}
            				else {
HXLINE(2285)					if ((bools > 0)) {
HXLINE(2287)						 ::haxe::io::Bytes params = ::haxe::io::Bytes_obj::alloc(bools);
HXLINE(2288)						this->getUniformiv(program,location,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBuffer(params));
HXLINE(2290)						::Array< bool > data = ::Array_obj< bool >::__new();
HXLINE(2292)						{
HXLINE(2292)							int _g1 = 0;
HXDLIN(2292)							int _g2 = bools;
HXDLIN(2292)							while((_g1 < _g2)){
HXLINE(2292)								_g1 = (_g1 + 1);
HXDLIN(2292)								int i = (_g1 - 1);
HXLINE(2294)								data[i] = (params->b->__get(i) != 0);
            							}
            						}
HXLINE(2297)						return data;
            					}
            					else {
HXLINE(2299)						if ((ints > 0)) {
HXLINE(2301)							 ::lime::utils::ArrayBufferView this1;
HXDLIN(2301)							if (hx::IsNotNull( ints )) {
HXLINE(2301)								this1 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,ints,3);
            							}
            							else {
HXLINE(2301)								HX_STACK_DO_THROW(HX_("Invalid constructor arguments for Int32Array",9b,2e,53,61));
            							}
HXDLIN(2301)							 ::lime::utils::ArrayBufferView params1 = this1;
HXLINE(2302)							this->getUniformiv(program,location,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params1));
HXLINE(2303)							return params1;
            						}
            						else {
HXLINE(2305)							if ((floats > 0)) {
HXLINE(2307)								 ::lime::utils::ArrayBufferView this2;
HXDLIN(2307)								if (hx::IsNotNull( floats )) {
HXLINE(2307)									this2 =  ::lime::utils::ArrayBufferView_obj::__alloc( HX_CTX ,floats,8);
            								}
            								else {
HXLINE(2307)									HX_STACK_DO_THROW(HX_("Invalid constructor arguments for Float32Array",8e,c1,f4,d4));
            								}
HXDLIN(2307)								 ::lime::utils::ArrayBufferView params2 = this2;
HXLINE(2308)								this->getUniformfv(program,location,::lime::utils::_DataPointer::DataPointer_Impl__obj::fromArrayBufferView(params2));
HXLINE(2309)								return params2;
            							}
            							else {
HXLINE(2313)								return null();
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE(2273)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getUniform,return )

Float NativeOpenGLRenderContext_obj::getUniformf( ::lime::graphics::opengl::GLObject program,int location){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2320_getUniformf)
HXDLIN(2320)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2320)		return ( (Float)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_uniformf(_hx_tmp,location)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getUniformf,return )

void NativeOpenGLRenderContext_obj::getUniformfv( ::lime::graphics::opengl::GLObject program,int location,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2329_getUniformfv)
HXDLIN(2329)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2329)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_uniformfv(_hx_tmp,location,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getUniformfv,(void))

int NativeOpenGLRenderContext_obj::getUniformi( ::lime::graphics::opengl::GLObject program,int location){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2336_getUniformi)
HXDLIN(2336)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2336)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_uniformi(_hx_tmp,location);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getUniformi,return )

void NativeOpenGLRenderContext_obj::getUniformiv( ::lime::graphics::opengl::GLObject program,int location,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2345_getUniformiv)
HXDLIN(2345)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2345)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_uniformiv(_hx_tmp,location,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getUniformiv,(void))

int NativeOpenGLRenderContext_obj::getUniformui( ::lime::graphics::opengl::GLObject program,int location){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2352_getUniformui)
HXDLIN(2352)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2352)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_uniformui(_hx_tmp,location);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getUniformui,return )

void NativeOpenGLRenderContext_obj::getUniformuiv( ::lime::graphics::opengl::GLObject program,int location,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2361_getUniformuiv)
HXDLIN(2361)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2361)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_uniformuiv(_hx_tmp,location,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getUniformuiv,(void))

int NativeOpenGLRenderContext_obj::getUniformBlockIndex( ::lime::graphics::opengl::GLObject program,::String uniformBlockName){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2368_getUniformBlockIndex)
HXDLIN(2368)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2368)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_uniform_block_index(_hx_tmp,uniformBlockName);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getUniformBlockIndex,return )

::Array< int > NativeOpenGLRenderContext_obj::getUniformIndices( ::lime::graphics::opengl::GLObject program,::Array< ::String > uniformNames){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2378_getUniformIndices)
HXDLIN(2378)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getUniformIndices,return )

int NativeOpenGLRenderContext_obj::getUniformLocation( ::lime::graphics::opengl::GLObject program,::String name){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2384_getUniformLocation)
HXDLIN(2384)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2384)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_uniform_location(_hx_tmp,name);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getUniformLocation,return )

 ::Dynamic NativeOpenGLRenderContext_obj::getVertexAttrib(int index,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2392_getVertexAttrib)
HXDLIN(2392)		return this->getVertexAttribi(index,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getVertexAttrib,return )

Float NativeOpenGLRenderContext_obj::getVertexAttribf(int index,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2398_getVertexAttribf)
HXDLIN(2398)		return ( (Float)(::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_vertex_attribf(index,pname)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getVertexAttribf,return )

void NativeOpenGLRenderContext_obj::getVertexAttribfv(int index,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2407_getVertexAttribfv)
HXDLIN(2407)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_vertex_attribfv(index,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getVertexAttribfv,(void))

int NativeOpenGLRenderContext_obj::getVertexAttribi(int index,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2414_getVertexAttribi)
HXDLIN(2414)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_vertex_attribi(index,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getVertexAttribi,return )

int NativeOpenGLRenderContext_obj::getVertexAttribIi(int index,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2423_getVertexAttribIi)
HXDLIN(2423)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_vertex_attribii(index,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getVertexAttribIi,return )

void NativeOpenGLRenderContext_obj::getVertexAttribIiv(int index,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2432_getVertexAttribIiv)
HXDLIN(2432)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_vertex_attribiiv(index,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getVertexAttribIiv,(void))

int NativeOpenGLRenderContext_obj::getVertexAttribIui(int index,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2439_getVertexAttribIui)
HXDLIN(2439)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_vertex_attribiui(index,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getVertexAttribIui,return )

void NativeOpenGLRenderContext_obj::getVertexAttribIuiv(int index,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2448_getVertexAttribIuiv)
HXDLIN(2448)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_vertex_attribiuiv(index,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getVertexAttribIuiv,(void))

void NativeOpenGLRenderContext_obj::getVertexAttribiv(int index,int pname,Float params){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2455_getVertexAttribiv)
HXDLIN(2455)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_vertex_attribiv(index,pname,params);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,getVertexAttribiv,(void))

Float NativeOpenGLRenderContext_obj::getVertexAttribPointerv(int index,int pname){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2462_getVertexAttribPointerv)
HXDLIN(2462)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_get_vertex_attrib_pointerv(index,pname);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,getVertexAttribPointerv,return )

void NativeOpenGLRenderContext_obj::hint(int target,int mode){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2471_hint)
HXDLIN(2471)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_hint(target,mode);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,hint,(void))

void NativeOpenGLRenderContext_obj::invalidateFramebuffer(int target,::Array< int > attachments){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2484_invalidateFramebuffer)
HXDLIN(2484)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_invalidate_framebuffer(target,hx::DynamicPtr(attachments));
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,invalidateFramebuffer,(void))

void NativeOpenGLRenderContext_obj::invalidateSubFramebuffer(int target,::Array< int > attachments,int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2497_invalidateSubFramebuffer)
HXDLIN(2497)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_invalidate_sub_framebuffer(target,hx::DynamicPtr(attachments),x,y,width,height);
            	}


HX_DEFINE_DYNAMIC_FUNC6(NativeOpenGLRenderContext_obj,invalidateSubFramebuffer,(void))

bool NativeOpenGLRenderContext_obj::isBuffer( ::lime::graphics::opengl::GLObject buffer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2504_isBuffer)
HXDLIN(2504)		int _hx_tmp = this->_hx___getObjectID(buffer);
HXDLIN(2504)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_buffer(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isBuffer,return )

bool NativeOpenGLRenderContext_obj::isContextLost(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2512_isContextLost)
HXDLIN(2512)		return this->_hx___isContextLost;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,isContextLost,return )

bool NativeOpenGLRenderContext_obj::isEnabled(int cap){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2518_isEnabled)
HXDLIN(2518)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_enabled(cap);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isEnabled,return )

bool NativeOpenGLRenderContext_obj::isFramebuffer( ::lime::graphics::opengl::GLObject framebuffer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2527_isFramebuffer)
HXDLIN(2527)		int _hx_tmp = this->_hx___getObjectID(framebuffer);
HXDLIN(2527)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_framebuffer(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isFramebuffer,return )

bool NativeOpenGLRenderContext_obj::isProgram( ::lime::graphics::opengl::GLObject program){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2536_isProgram)
HXDLIN(2536)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2536)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_program(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isProgram,return )

bool NativeOpenGLRenderContext_obj::isQuery( ::lime::graphics::opengl::GLObject query){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2545_isQuery)
HXDLIN(2545)		int _hx_tmp = this->_hx___getObjectID(query);
HXDLIN(2545)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_query(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isQuery,return )

bool NativeOpenGLRenderContext_obj::isRenderbuffer( ::lime::graphics::opengl::GLObject renderbuffer){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2554_isRenderbuffer)
HXDLIN(2554)		int _hx_tmp = this->_hx___getObjectID(renderbuffer);
HXDLIN(2554)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_renderbuffer(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isRenderbuffer,return )

bool NativeOpenGLRenderContext_obj::isSampler( ::lime::graphics::opengl::GLObject sampler){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2563_isSampler)
HXDLIN(2563)		int _hx_tmp = this->_hx___getObjectID(sampler);
HXDLIN(2563)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_sampler(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isSampler,return )

bool NativeOpenGLRenderContext_obj::isShader( ::lime::graphics::opengl::GLObject shader){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2572_isShader)
HXDLIN(2572)		int _hx_tmp = this->_hx___getObjectID(shader);
HXDLIN(2572)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_shader(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isShader,return )

bool NativeOpenGLRenderContext_obj::isSync( ::Dynamic sync){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2581_isSync)
HXDLIN(2581)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_sync(hx::DynamicPtr(sync));
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isSync,return )

bool NativeOpenGLRenderContext_obj::isTexture( ::lime::graphics::opengl::GLObject texture){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2590_isTexture)
HXDLIN(2590)		int _hx_tmp = this->_hx___getObjectID(texture);
HXDLIN(2590)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_texture(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isTexture,return )

bool NativeOpenGLRenderContext_obj::isTransformFeedback( ::lime::graphics::opengl::GLObject transformFeedback){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2599_isTransformFeedback)
HXDLIN(2599)		int _hx_tmp = this->_hx___getObjectID(transformFeedback);
HXDLIN(2599)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_transform_feedback(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isTransformFeedback,return )

bool NativeOpenGLRenderContext_obj::isVertexArray( ::lime::graphics::opengl::GLObject vertexArray){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2608_isVertexArray)
HXDLIN(2608)		int _hx_tmp = this->_hx___getObjectID(vertexArray);
HXDLIN(2608)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_is_vertex_array(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,isVertexArray,return )

void NativeOpenGLRenderContext_obj::lineWidth(Float width){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2617_lineWidth)
HXDLIN(2617)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_line_width(( (float)(width) ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,lineWidth,(void))

void NativeOpenGLRenderContext_obj::linkProgram( ::lime::graphics::opengl::GLObject program){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2624_linkProgram)
HXDLIN(2624)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2624)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_link_program(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,linkProgram,(void))

Float NativeOpenGLRenderContext_obj::mapBufferRange(int target,Float offset,int length,int access){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2631_mapBufferRange)
HXDLIN(2631)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_map_buffer_range(target,offset,length,access);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,mapBufferRange,return )

void NativeOpenGLRenderContext_obj::pauseTransformFeedback(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2640_pauseTransformFeedback)
HXDLIN(2640)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_pause_transform_feedback();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,pauseTransformFeedback,(void))

void NativeOpenGLRenderContext_obj::pixelStorei(int pname,int param){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2647_pixelStorei)
HXDLIN(2647)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_pixel_storei(pname,param);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,pixelStorei,(void))

void NativeOpenGLRenderContext_obj::polygonOffset(Float factor,Float units){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2654_polygonOffset)
HXDLIN(2654)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_polygon_offset(( (float)(factor) ),( (float)(units) ));
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,polygonOffset,(void))

void NativeOpenGLRenderContext_obj::programBinary( ::lime::graphics::opengl::GLObject program,int binaryFormat,Float binary,int length){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2661_programBinary)
HXDLIN(2661)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2661)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_program_binary(_hx_tmp,binaryFormat,binary,length);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,programBinary,(void))

void NativeOpenGLRenderContext_obj::programParameteri( ::lime::graphics::opengl::GLObject program,int pname,int value){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2668_programParameteri)
HXDLIN(2668)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2668)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_program_parameteri(_hx_tmp,pname,value);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,programParameteri,(void))

void NativeOpenGLRenderContext_obj::readBuffer(int src){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2675_readBuffer)
HXDLIN(2675)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_read_buffer(src);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,readBuffer,(void))

void NativeOpenGLRenderContext_obj::readPixels(int x,int y,int width,int height,int format,int type,Float pixels){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2682_readPixels)
HXDLIN(2682)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_read_pixels(x,y,width,height,format,type,pixels);
            	}


HX_DEFINE_DYNAMIC_FUNC7(NativeOpenGLRenderContext_obj,readPixels,(void))

void NativeOpenGLRenderContext_obj::releaseShaderCompiler(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2689_releaseShaderCompiler)
HXDLIN(2689)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_release_shader_compiler();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,releaseShaderCompiler,(void))

void NativeOpenGLRenderContext_obj::renderbufferStorage(int target,int internalformat,int width,int height){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2696_renderbufferStorage)
HXDLIN(2696)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_renderbuffer_storage(target,internalformat,width,height);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,renderbufferStorage,(void))

void NativeOpenGLRenderContext_obj::renderbufferStorageMultisample(int target,int samples,int internalformat,int width,int height){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2703_renderbufferStorageMultisample)
HXDLIN(2703)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_renderbuffer_storage_multisample(target,samples,internalformat,width,height);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,renderbufferStorageMultisample,(void))

void NativeOpenGLRenderContext_obj::resumeTransformFeedback(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2710_resumeTransformFeedback)
HXDLIN(2710)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_resume_transform_feedback();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,resumeTransformFeedback,(void))

void NativeOpenGLRenderContext_obj::sampleCoverage(Float value,bool invert){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2717_sampleCoverage)
HXDLIN(2717)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_sample_coverage(( (float)(value) ),invert);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,sampleCoverage,(void))

void NativeOpenGLRenderContext_obj::samplerParameterf( ::lime::graphics::opengl::GLObject sampler,int pname,Float param){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2724_samplerParameterf)
HXDLIN(2724)		int _hx_tmp = this->_hx___getObjectID(sampler);
HXDLIN(2724)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_sampler_parameterf(_hx_tmp,pname,( (float)(param) ));
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,samplerParameterf,(void))

void NativeOpenGLRenderContext_obj::samplerParameteri( ::lime::graphics::opengl::GLObject sampler,int pname,int param){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2731_samplerParameteri)
HXDLIN(2731)		int _hx_tmp = this->_hx___getObjectID(sampler);
HXDLIN(2731)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_sampler_parameteri(_hx_tmp,pname,param);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,samplerParameteri,(void))

void NativeOpenGLRenderContext_obj::scissor(int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2738_scissor)
HXDLIN(2738)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_scissor(x,y,width,height);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,scissor,(void))

void NativeOpenGLRenderContext_obj::shaderBinary(::Array< ::Dynamic> shaders,int binaryformat,Float binary,int length){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2751_shaderBinary)
HXDLIN(2751)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_shader_binary(hx::DynamicPtr(shaders),binaryformat,binary,length);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,shaderBinary,(void))

void NativeOpenGLRenderContext_obj::shaderSource( ::lime::graphics::opengl::GLObject shader,::String source){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2758_shaderSource)
HXDLIN(2758)		int _hx_tmp = this->_hx___getObjectID(shader);
HXDLIN(2758)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_shader_source(_hx_tmp,source);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,shaderSource,(void))

void NativeOpenGLRenderContext_obj::stencilFunc(int func,int ref,int mask){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2765_stencilFunc)
HXDLIN(2765)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_stencil_func(func,ref,mask);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,stencilFunc,(void))

void NativeOpenGLRenderContext_obj::stencilFuncSeparate(int face,int func,int ref,int mask){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2772_stencilFuncSeparate)
HXDLIN(2772)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_stencil_func_separate(face,func,ref,mask);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,stencilFuncSeparate,(void))

void NativeOpenGLRenderContext_obj::stencilMask(int mask){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2779_stencilMask)
HXDLIN(2779)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_stencil_mask(mask);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,stencilMask,(void))

void NativeOpenGLRenderContext_obj::stencilMaskSeparate(int face,int mask){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2786_stencilMaskSeparate)
HXDLIN(2786)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_stencil_mask_separate(face,mask);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,stencilMaskSeparate,(void))

void NativeOpenGLRenderContext_obj::stencilOp(int fail,int zfail,int zpass){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2793_stencilOp)
HXDLIN(2793)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_stencil_op(fail,zfail,zpass);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,stencilOp,(void))

void NativeOpenGLRenderContext_obj::stencilOpSeparate(int face,int fail,int zfail,int zpass){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2800_stencilOpSeparate)
HXDLIN(2800)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_stencil_op_separate(face,fail,zfail,zpass);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,stencilOpSeparate,(void))

void NativeOpenGLRenderContext_obj::texImage2D(int target,int level,int internalformat,int width,int height,int border,int format,int type,Float data){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2808_texImage2D)
HXDLIN(2808)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_tex_image_2d(target,level,internalformat,width,height,border,format,type,data);
            	}


HX_DEFINE_DYNAMIC_FUNC9(NativeOpenGLRenderContext_obj,texImage2D,(void))

void NativeOpenGLRenderContext_obj::texImage3D(int target,int level,int internalformat,int width,int height,int depth,int border,int format,int type,Float data){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2816_texImage3D)
HXDLIN(2816)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_tex_image_3d(target,level,internalformat,width,height,depth,border,format,type,data);
            	}


HX_DEFINE_DYNAMIC_FUNC10(NativeOpenGLRenderContext_obj,texImage3D,(void))

void NativeOpenGLRenderContext_obj::texStorage2D(int target,int level,int internalformat,int width,int height){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2823_texStorage2D)
HXDLIN(2823)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_tex_storage_2d(target,level,internalformat,width,height);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,texStorage2D,(void))

void NativeOpenGLRenderContext_obj::texStorage3D(int target,int level,int internalformat,int width,int height,int depth){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2830_texStorage3D)
HXDLIN(2830)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_tex_storage_3d(target,level,internalformat,width,height,depth);
            	}


HX_DEFINE_DYNAMIC_FUNC6(NativeOpenGLRenderContext_obj,texStorage3D,(void))

void NativeOpenGLRenderContext_obj::texParameterf(int target,int pname,Float param){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2837_texParameterf)
HXDLIN(2837)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_tex_parameterf(target,pname,( (float)(param) ));
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,texParameterf,(void))

void NativeOpenGLRenderContext_obj::texParameteri(int target,int pname,int param){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2844_texParameteri)
HXDLIN(2844)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_tex_parameteri(target,pname,param);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,texParameteri,(void))

void NativeOpenGLRenderContext_obj::texSubImage2D(int target,int level,int xoffset,int yoffset,int width,int height,int format,int type,Float pixels){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2851_texSubImage2D)
HXDLIN(2851)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_tex_sub_image_2d(target,level,xoffset,yoffset,width,height,format,type,pixels);
            	}


HX_DEFINE_DYNAMIC_FUNC9(NativeOpenGLRenderContext_obj,texSubImage2D,(void))

void NativeOpenGLRenderContext_obj::texSubImage3D(int target,int level,int xoffset,int yoffset,int zoffset,int width,int height,int depth,int format,int type,Float data){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2859_texSubImage3D)
HXDLIN(2859)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_tex_sub_image_3d(target,level,xoffset,yoffset,zoffset,width,height,depth,format,type,data);
            	}


HX_DEFINE_DYNAMIC_FUNC11(NativeOpenGLRenderContext_obj,texSubImage3D,(void))

::String NativeOpenGLRenderContext_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2865_toString)
HXDLIN(2865)		return HX_("NativeOpenGLRenderContext",d3,3f,53,bf);
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,toString,return )

void NativeOpenGLRenderContext_obj::transformFeedbackVaryings( ::lime::graphics::opengl::GLObject program,::Array< ::String > varyings,int bufferMode){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2877_transformFeedbackVaryings)
HXDLIN(2877)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(2877)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_transform_feedback_varyings(_hx_tmp,hx::DynamicPtr(varyings),bufferMode);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,transformFeedbackVaryings,(void))

void NativeOpenGLRenderContext_obj::uniform1f(int location,Float v0){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2884_uniform1f)
HXDLIN(2884)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform1f(location,( (float)(v0) ));
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,uniform1f,(void))

void NativeOpenGLRenderContext_obj::uniform1fv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2891_uniform1fv)
HXDLIN(2891)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform1fv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform1fv,(void))

void NativeOpenGLRenderContext_obj::uniform1i(int location,int v0){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2898_uniform1i)
HXDLIN(2898)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform1i(location,v0);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,uniform1i,(void))

void NativeOpenGLRenderContext_obj::uniform1iv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2905_uniform1iv)
HXDLIN(2905)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform1iv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform1iv,(void))

void NativeOpenGLRenderContext_obj::uniform1ui(int location,int v0){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2912_uniform1ui)
HXDLIN(2912)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform1ui(location,v0);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,uniform1ui,(void))

void NativeOpenGLRenderContext_obj::uniform1uiv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2919_uniform1uiv)
HXDLIN(2919)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform1uiv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform1uiv,(void))

void NativeOpenGLRenderContext_obj::uniform2f(int location,Float v0,Float v1){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2926_uniform2f)
HXDLIN(2926)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform2f(location,( (float)(v0) ),( (float)(v1) ));
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform2f,(void))

void NativeOpenGLRenderContext_obj::uniform2fv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2933_uniform2fv)
HXDLIN(2933)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform2fv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform2fv,(void))

void NativeOpenGLRenderContext_obj::uniform2i(int location,int v0,int v1){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2940_uniform2i)
HXDLIN(2940)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform2i(location,v0,v1);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform2i,(void))

void NativeOpenGLRenderContext_obj::uniform2iv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2947_uniform2iv)
HXDLIN(2947)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform2iv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform2iv,(void))

void NativeOpenGLRenderContext_obj::uniform2ui(int location,int v0,int v1){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2954_uniform2ui)
HXDLIN(2954)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform2ui(location,v0,v1);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform2ui,(void))

void NativeOpenGLRenderContext_obj::uniform2uiv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2961_uniform2uiv)
HXDLIN(2961)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform2uiv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform2uiv,(void))

void NativeOpenGLRenderContext_obj::uniform3f(int location,Float v0,Float v1,Float v2){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2968_uniform3f)
HXDLIN(2968)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform3f(location,( (float)(v0) ),( (float)(v1) ),( (float)(v2) ));
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniform3f,(void))

void NativeOpenGLRenderContext_obj::uniform3fv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2975_uniform3fv)
HXDLIN(2975)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform3fv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform3fv,(void))

void NativeOpenGLRenderContext_obj::uniform3i(int location,int v0,int v1,int v2){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2982_uniform3i)
HXDLIN(2982)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform3i(location,v0,v1,v2);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniform3i,(void))

void NativeOpenGLRenderContext_obj::uniform3iv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2989_uniform3iv)
HXDLIN(2989)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform3iv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform3iv,(void))

void NativeOpenGLRenderContext_obj::uniform3ui(int location,int v0,int v1,int v2){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_2996_uniform3ui)
HXDLIN(2996)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform3ui(location,v0,v1,v2);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniform3ui,(void))

void NativeOpenGLRenderContext_obj::uniform3uiv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3003_uniform3uiv)
HXDLIN(3003)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform3uiv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform3uiv,(void))

void NativeOpenGLRenderContext_obj::uniform4f(int location,Float v0,Float v1,Float v2,Float v3){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3010_uniform4f)
HXDLIN(3010)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform4f(location,( (float)(v0) ),( (float)(v1) ),( (float)(v2) ),( (float)(v3) ));
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,uniform4f,(void))

void NativeOpenGLRenderContext_obj::uniform4fv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3017_uniform4fv)
HXDLIN(3017)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform4fv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform4fv,(void))

void NativeOpenGLRenderContext_obj::uniform4i(int location,int v0,int v1,int v2,int v3){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3024_uniform4i)
HXDLIN(3024)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform4i(location,v0,v1,v2,v3);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,uniform4i,(void))

void NativeOpenGLRenderContext_obj::uniform4iv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3031_uniform4iv)
HXDLIN(3031)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform4iv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform4iv,(void))

void NativeOpenGLRenderContext_obj::uniform4ui(int location,int v0,int v1,int v2,int v3){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3038_uniform4ui)
HXDLIN(3038)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform4ui(location,v0,v1,v2,v3);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,uniform4ui,(void))

void NativeOpenGLRenderContext_obj::uniform4uiv(int location,int count,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3045_uniform4uiv)
HXDLIN(3045)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform4uiv(location,count,v);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniform4uiv,(void))

void NativeOpenGLRenderContext_obj::uniformBlockBinding( ::lime::graphics::opengl::GLObject program,int uniformBlockIndex,int uniformBlockBinding){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3052_uniformBlockBinding)
HXDLIN(3052)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(3052)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform_block_binding(_hx_tmp,uniformBlockIndex,uniformBlockBinding);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,uniformBlockBinding,(void))

void NativeOpenGLRenderContext_obj::uniformMatrix2fv(int location,int count,bool transpose,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3059_uniformMatrix2fv)
HXDLIN(3059)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform_matrix2fv(location,count,transpose,v);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniformMatrix2fv,(void))

void NativeOpenGLRenderContext_obj::uniformMatrix2x3fv(int location,int count,bool transpose,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3066_uniformMatrix2x3fv)
HXDLIN(3066)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform_matrix2x3fv(location,count,transpose,v);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniformMatrix2x3fv,(void))

void NativeOpenGLRenderContext_obj::uniformMatrix2x4fv(int location,int count,bool transpose,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3073_uniformMatrix2x4fv)
HXDLIN(3073)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform_matrix2x4fv(location,count,transpose,v);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniformMatrix2x4fv,(void))

void NativeOpenGLRenderContext_obj::uniformMatrix3fv(int location,int count,bool transpose,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3080_uniformMatrix3fv)
HXDLIN(3080)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform_matrix3fv(location,count,transpose,v);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniformMatrix3fv,(void))

void NativeOpenGLRenderContext_obj::uniformMatrix3x2fv(int location,int count,bool transpose,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3087_uniformMatrix3x2fv)
HXDLIN(3087)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform_matrix3x2fv(location,count,transpose,v);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniformMatrix3x2fv,(void))

void NativeOpenGLRenderContext_obj::uniformMatrix3x4fv(int location,int count,bool transpose,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3094_uniformMatrix3x4fv)
HXDLIN(3094)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform_matrix3x4fv(location,count,transpose,v);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniformMatrix3x4fv,(void))

void NativeOpenGLRenderContext_obj::uniformMatrix4fv(int location,int count,bool transpose,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3101_uniformMatrix4fv)
HXDLIN(3101)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform_matrix4fv(location,count,transpose,v);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniformMatrix4fv,(void))

void NativeOpenGLRenderContext_obj::uniformMatrix4x2fv(int location,int count,bool transpose,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3108_uniformMatrix4x2fv)
HXDLIN(3108)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform_matrix4x2fv(location,count,transpose,v);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniformMatrix4x2fv,(void))

void NativeOpenGLRenderContext_obj::uniformMatrix4x3fv(int location,int count,bool transpose,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3115_uniformMatrix4x3fv)
HXDLIN(3115)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_uniform_matrix4x3fv(location,count,transpose,v);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,uniformMatrix4x3fv,(void))

bool NativeOpenGLRenderContext_obj::unmapBuffer(int target){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3122_unmapBuffer)
HXDLIN(3122)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_unmap_buffer(target);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,unmapBuffer,return )

void NativeOpenGLRenderContext_obj::useProgram( ::lime::graphics::opengl::GLObject program){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3129_useProgram)
HXLINE(3130)		this->_hx___currentProgram = program;
HXLINE(3133)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(3133)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_use_program(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,useProgram,(void))

void NativeOpenGLRenderContext_obj::validateProgram( ::lime::graphics::opengl::GLObject program){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3140_validateProgram)
HXDLIN(3140)		int _hx_tmp = this->_hx___getObjectID(program);
HXDLIN(3140)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_validate_program(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,validateProgram,(void))

void NativeOpenGLRenderContext_obj::vertexAttrib1f(int index,Float v0){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3147_vertexAttrib1f)
HXDLIN(3147)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attrib1f(index,( (float)(v0) ));
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,vertexAttrib1f,(void))

void NativeOpenGLRenderContext_obj::vertexAttrib1fv(int index,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3154_vertexAttrib1fv)
HXDLIN(3154)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attrib1fv(index,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,vertexAttrib1fv,(void))

void NativeOpenGLRenderContext_obj::vertexAttrib2f(int index,Float v0,Float y){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3161_vertexAttrib2f)
HXDLIN(3161)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attrib2f(index,( (float)(v0) ),( (float)(y) ));
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,vertexAttrib2f,(void))

void NativeOpenGLRenderContext_obj::vertexAttrib2fv(int index,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3168_vertexAttrib2fv)
HXDLIN(3168)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attrib2fv(index,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,vertexAttrib2fv,(void))

void NativeOpenGLRenderContext_obj::vertexAttrib3f(int index,Float v0,Float v1,Float v2){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3175_vertexAttrib3f)
HXDLIN(3175)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attrib3f(index,( (float)(v0) ),( (float)(v1) ),( (float)(v2) ));
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,vertexAttrib3f,(void))

void NativeOpenGLRenderContext_obj::vertexAttrib3fv(int index,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3182_vertexAttrib3fv)
HXDLIN(3182)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attrib3fv(index,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,vertexAttrib3fv,(void))

void NativeOpenGLRenderContext_obj::vertexAttrib4f(int index,Float v0,Float v1,Float v2,Float v3){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3189_vertexAttrib4f)
HXDLIN(3189)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attrib4f(index,( (float)(v0) ),( (float)(v1) ),( (float)(v2) ),( (float)(v3) ));
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,vertexAttrib4f,(void))

void NativeOpenGLRenderContext_obj::vertexAttrib4fv(int index,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3196_vertexAttrib4fv)
HXDLIN(3196)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attrib4fv(index,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,vertexAttrib4fv,(void))

void NativeOpenGLRenderContext_obj::vertexAttribDivisor(int index,int divisor){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3203_vertexAttribDivisor)
HXDLIN(3203)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attrib_divisor(index,divisor);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,vertexAttribDivisor,(void))

void NativeOpenGLRenderContext_obj::vertexAttribI4i(int index,int v0,int v1,int v2,int v3){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3210_vertexAttribI4i)
HXDLIN(3210)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attribi4i(index,v0,v1,v2,v3);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,vertexAttribI4i,(void))

void NativeOpenGLRenderContext_obj::vertexAttribI4iv(int index,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3219_vertexAttribI4iv)
HXDLIN(3219)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attribi4iv(index,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,vertexAttribI4iv,(void))

void NativeOpenGLRenderContext_obj::vertexAttribI4ui(int index,int v0,int v1,int v2,int v3){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3226_vertexAttribI4ui)
HXDLIN(3226)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attribi4ui(index,v0,v1,v2,v3);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,vertexAttribI4ui,(void))

void NativeOpenGLRenderContext_obj::vertexAttribI4uiv(int index,Float v){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3235_vertexAttribI4uiv)
HXDLIN(3235)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attribi4uiv(index,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(NativeOpenGLRenderContext_obj,vertexAttribI4uiv,(void))

void NativeOpenGLRenderContext_obj::vertexAttribIPointer(int index,int size,int type,int stride,Float offset){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3242_vertexAttribIPointer)
HXDLIN(3242)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attrib_ipointer(index,size,type,stride,offset);
            	}


HX_DEFINE_DYNAMIC_FUNC5(NativeOpenGLRenderContext_obj,vertexAttribIPointer,(void))

void NativeOpenGLRenderContext_obj::vertexAttribPointer(int index,int size,int type,bool normalized,int stride,Float offset){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3249_vertexAttribPointer)
HXDLIN(3249)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_vertex_attrib_pointer(index,size,type,normalized,stride,offset);
            	}


HX_DEFINE_DYNAMIC_FUNC6(NativeOpenGLRenderContext_obj,vertexAttribPointer,(void))

void NativeOpenGLRenderContext_obj::viewport(int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3256_viewport)
HXDLIN(3256)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_viewport(x,y,width,height);
            	}


HX_DEFINE_DYNAMIC_FUNC4(NativeOpenGLRenderContext_obj,viewport,(void))

void NativeOpenGLRenderContext_obj::waitSync( ::Dynamic sync,int flags, cpp::Int64Struct timeout){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3263_waitSync)
HXDLIN(3263)		int _hx_tmp = _hx_int64_high(timeout);
HXDLIN(3263)		int _hx_tmp1 = _hx_int64_low(timeout);
HXDLIN(3263)		::lime::_internal::backend::native::NativeCFFI_obj::lime_gl_wait_sync(hx::DynamicPtr(sync),flags,_hx_tmp,_hx_tmp1);
            	}


HX_DEFINE_DYNAMIC_FUNC3(NativeOpenGLRenderContext_obj,waitSync,(void))

void NativeOpenGLRenderContext_obj::_hx___contextLost(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3268___contextLost)
HXLINE(3269)		this->_hx___isContextLost = true;
HXLINE(3270)		this->_hx___arrayBufferBinding = null();
HXLINE(3271)		this->_hx___elementBufferBinding = null();
HXLINE(3272)		this->_hx___currentProgram = null();
HXLINE(3273)		this->_hx___framebufferBinding = null();
HXLINE(3274)		this->_hx___renderbufferBinding = null();
HXLINE(3275)		this->_hx___texture2DBinding = null();
HXLINE(3276)		this->_hx___textureCubeMapBinding = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,_hx___contextLost,(void))

 ::lime::graphics::opengl::GLObject NativeOpenGLRenderContext_obj::_hx___createObject(int id){
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3282___createObject)
HXDLIN(3282)		return  ::lime::graphics::opengl::GLObject_obj::__alloc( HX_CTX ,id);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,_hx___createObject,return )

int NativeOpenGLRenderContext_obj::_hx___getObjectID( ::lime::graphics::opengl::GLObject object){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3287___getObjectID)
HXDLIN(3287)		if (hx::IsNull( object )) {
HXDLIN(3287)			return 0;
            		}
            		else {
HXDLIN(3287)			return object->id;
            		}
HXDLIN(3287)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeOpenGLRenderContext_obj,_hx___getObjectID,return )

void NativeOpenGLRenderContext_obj::_hx___initialize(){
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_3292___initialize)
HXLINE(3293)		if (!(this->_hx___initialized)) {
HXLINE(3295)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            				 ::lime::graphics::opengl::ext::AMD_compressed_3DC_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3295___initialize)
HXLINE(3295)					return  ::lime::graphics::opengl::ext::AMD_compressed_3DC_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3295)				 ::Dynamic v =  ::Dynamic(new _hx_Closure_0());
HXDLIN(3295)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("AMD_compressed_3DC_texture",97,af,9a,80),v);
            			}
HXLINE(3296)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_1) HXARGC(0)
            				 ::lime::graphics::opengl::ext::AMD_compressed_ATC_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3296___initialize)
HXLINE(3296)					return  ::lime::graphics::opengl::ext::AMD_compressed_ATC_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3296)				 ::Dynamic v1 =  ::Dynamic(new _hx_Closure_1());
HXDLIN(3296)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("AMD_compressed_ATC_texture",15,0b,6c,91),v1);
            			}
HXLINE(3297)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_2) HXARGC(0)
            				 ::lime::graphics::opengl::ext::AMD_performance_monitor _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3297___initialize)
HXLINE(3297)					return  ::lime::graphics::opengl::ext::AMD_performance_monitor_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3297)				 ::Dynamic v2 =  ::Dynamic(new _hx_Closure_2());
HXDLIN(3297)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("AMD_performance_monitor",e4,7a,6c,36),v2);
            			}
HXLINE(3298)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_3) HXARGC(0)
            				 ::lime::graphics::opengl::ext::AMD_program_binary_Z400 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3298___initialize)
HXLINE(3298)					return  ::lime::graphics::opengl::ext::AMD_program_binary_Z400_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3298)				 ::Dynamic v3 =  ::Dynamic(new _hx_Closure_3());
HXDLIN(3298)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("AMD_program_binary_Z400",b6,66,58,28),v3);
            			}
HXLINE(3299)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_4) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_framebuffer_blit _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3299___initialize)
HXLINE(3299)					return  ::lime::graphics::opengl::ext::ANGLE_framebuffer_blit_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3299)				 ::Dynamic v4 =  ::Dynamic(new _hx_Closure_4());
HXDLIN(3299)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_framebuffer_blit",53,5d,fe,07),v4);
            			}
HXLINE(3300)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_5) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_framebuffer_multisample _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3300___initialize)
HXLINE(3300)					return  ::lime::graphics::opengl::ext::ANGLE_framebuffer_multisample_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3300)				 ::Dynamic v5 =  ::Dynamic(new _hx_Closure_5());
HXDLIN(3300)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_framebuffer_multisample",05,66,2b,e3),v5);
            			}
HXLINE(3301)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_6) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_instanced_arrays _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3301___initialize)
HXLINE(3301)					return  ::lime::graphics::opengl::ext::ANGLE_instanced_arrays_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3301)				 ::Dynamic v6 =  ::Dynamic(new _hx_Closure_6());
HXDLIN(3301)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_instanced_arrays",56,74,86,10),v6);
            			}
HXLINE(3302)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_7) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_pack_reverse_row_order _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3302___initialize)
HXLINE(3302)					return  ::lime::graphics::opengl::ext::ANGLE_pack_reverse_row_order_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3302)				 ::Dynamic v7 =  ::Dynamic(new _hx_Closure_7());
HXDLIN(3302)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_pack_reverse_row_order",f2,1c,e0,65),v7);
            			}
HXLINE(3303)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_8) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_texture_compression_dxt3 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3303___initialize)
HXLINE(3303)					return  ::lime::graphics::opengl::ext::ANGLE_texture_compression_dxt3_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3303)				 ::Dynamic v8 =  ::Dynamic(new _hx_Closure_8());
HXDLIN(3303)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_texture_compression_dxt3",fc,60,dc,b5),v8);
            			}
HXLINE(3304)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_9) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_texture_compression_dxt5 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3304___initialize)
HXLINE(3304)					return  ::lime::graphics::opengl::ext::ANGLE_texture_compression_dxt5_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3304)				 ::Dynamic v9 =  ::Dynamic(new _hx_Closure_9());
HXDLIN(3304)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_texture_compression_dxt5",fe,60,dc,b5),v9);
            			}
HXLINE(3305)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_10) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_texture_usage _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3305___initialize)
HXLINE(3305)					return  ::lime::graphics::opengl::ext::ANGLE_texture_usage_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3305)				 ::Dynamic v10 =  ::Dynamic(new _hx_Closure_10());
HXDLIN(3305)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_texture_usage",b1,62,6e,c1),v10);
            			}
HXLINE(3306)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_11) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ANGLE_translated_shader_source _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3306___initialize)
HXLINE(3306)					return  ::lime::graphics::opengl::ext::ANGLE_translated_shader_source_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3306)				 ::Dynamic v11 =  ::Dynamic(new _hx_Closure_11());
HXDLIN(3306)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ANGLE_translated_shader_source",58,8f,67,10),v11);
            			}
HXLINE(3307)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_12) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_copy_texture_levels _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3307___initialize)
HXLINE(3307)					return  ::lime::graphics::opengl::ext::APPLE_copy_texture_levels_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3307)				 ::Dynamic v12 =  ::Dynamic(new _hx_Closure_12());
HXDLIN(3307)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_copy_texture_levels",58,36,ee,e5),v12);
            			}
HXLINE(3308)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_13) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_framebuffer_multisample _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3308___initialize)
HXLINE(3308)					return  ::lime::graphics::opengl::ext::APPLE_framebuffer_multisample_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3308)				 ::Dynamic v13 =  ::Dynamic(new _hx_Closure_13());
HXDLIN(3308)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_framebuffer_multisample",8c,c4,4f,00),v13);
            			}
HXLINE(3309)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_14) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_rgb_422 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3309___initialize)
HXLINE(3309)					return  ::lime::graphics::opengl::ext::APPLE_rgb_422_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3309)				 ::Dynamic v14 =  ::Dynamic(new _hx_Closure_14());
HXDLIN(3309)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_rgb_422",3d,ac,a1,11),v14);
            			}
HXLINE(3310)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_15) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_sync _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3310___initialize)
HXLINE(3310)					return  ::lime::graphics::opengl::ext::APPLE_sync_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3310)				 ::Dynamic v15 =  ::Dynamic(new _hx_Closure_15());
HXDLIN(3310)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_sync",c0,e6,8c,8c),v15);
            			}
HXLINE(3311)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_16) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_texture_format_BGRA8888 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3311___initialize)
HXLINE(3311)					return  ::lime::graphics::opengl::ext::APPLE_texture_format_BGRA8888_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3311)				 ::Dynamic v16 =  ::Dynamic(new _hx_Closure_16());
HXDLIN(3311)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_texture_format_BGRA8888",13,8a,88,e2),v16);
            			}
HXLINE(3312)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_17) HXARGC(0)
            				 ::lime::graphics::opengl::ext::APPLE_texture_max_level _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3312___initialize)
HXLINE(3312)					return  ::lime::graphics::opengl::ext::APPLE_texture_max_level_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3312)				 ::Dynamic v17 =  ::Dynamic(new _hx_Closure_17());
HXDLIN(3312)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("APPLE_texture_max_level",40,37,3d,be),v17);
            			}
HXLINE(3313)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_18) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ARM_mali_program_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3313___initialize)
HXLINE(3313)					return  ::lime::graphics::opengl::ext::ARM_mali_program_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3313)				 ::Dynamic v18 =  ::Dynamic(new _hx_Closure_18());
HXDLIN(3313)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ARM_mali_program_binary",c7,33,f6,92),v18);
            			}
HXLINE(3314)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_19) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ARM_mali_shader_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3314___initialize)
HXLINE(3314)					return  ::lime::graphics::opengl::ext::ARM_mali_shader_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3314)				 ::Dynamic v19 =  ::Dynamic(new _hx_Closure_19());
HXDLIN(3314)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ARM_mali_shader_binary",50,43,81,cb),v19);
            			}
HXLINE(3315)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_20) HXARGC(0)
            				 ::lime::graphics::opengl::ext::ARM_rgba8 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3315___initialize)
HXLINE(3315)					return  ::lime::graphics::opengl::ext::ARM_rgba8_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3315)				 ::Dynamic v20 =  ::Dynamic(new _hx_Closure_20());
HXDLIN(3315)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("ARM_rgba8",81,03,5e,47),v20);
            			}
HXLINE(3316)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_21) HXARGC(0)
            				 ::lime::graphics::opengl::ext::DMP_shader_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3316___initialize)
HXLINE(3316)					return  ::lime::graphics::opengl::ext::DMP_shader_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3316)				 ::Dynamic v21 =  ::Dynamic(new _hx_Closure_21());
HXDLIN(3316)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("DMP_shader_binary",43,70,06,89),v21);
            			}
HXLINE(3317)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_22) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_bgra _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3317___initialize)
HXLINE(3317)					return  ::lime::graphics::opengl::ext::EXT_bgra_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3317)				 ::Dynamic v22 =  ::Dynamic(new _hx_Closure_22());
HXDLIN(3317)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_bgra",72,74,1a,40),v22);
            			}
HXLINE(3318)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_23) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_blend_minmax _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3318___initialize)
HXLINE(3318)					return  ::lime::graphics::opengl::ext::EXT_blend_minmax_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3318)				 ::Dynamic v23 =  ::Dynamic(new _hx_Closure_23());
HXDLIN(3318)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_blend_minmax",7e,f3,2e,cd),v23);
            			}
HXLINE(3319)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_24) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_color_buffer_float _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3319___initialize)
HXLINE(3319)					return  ::lime::graphics::opengl::ext::EXT_color_buffer_float_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3319)				 ::Dynamic v24 =  ::Dynamic(new _hx_Closure_24());
HXDLIN(3319)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_color_buffer_float",b7,19,0b,dd),v24);
            			}
HXLINE(3320)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_25) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_color_buffer_half_float _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3320___initialize)
HXLINE(3320)					return  ::lime::graphics::opengl::ext::EXT_color_buffer_half_float_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3320)				 ::Dynamic v25 =  ::Dynamic(new _hx_Closure_25());
HXDLIN(3320)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_color_buffer_half_float",d5,e8,0a,44),v25);
            			}
HXLINE(3321)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_26) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_debug_label _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3321___initialize)
HXLINE(3321)					return  ::lime::graphics::opengl::ext::EXT_debug_label_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3321)				 ::Dynamic v26 =  ::Dynamic(new _hx_Closure_26());
HXDLIN(3321)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_debug_label",ca,3b,0e,9c),v26);
            			}
HXLINE(3322)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_27) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_debug_marker _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3322___initialize)
HXLINE(3322)					return  ::lime::graphics::opengl::ext::EXT_debug_marker_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3322)				 ::Dynamic v27 =  ::Dynamic(new _hx_Closure_27());
HXDLIN(3322)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_debug_marker",24,63,59,61),v27);
            			}
HXLINE(3323)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_28) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_discard_framebuffer _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3323___initialize)
HXLINE(3323)					return  ::lime::graphics::opengl::ext::EXT_discard_framebuffer_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3323)				 ::Dynamic v28 =  ::Dynamic(new _hx_Closure_28());
HXDLIN(3323)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_discard_framebuffer",0e,f8,79,f7),v28);
            			}
HXLINE(3324)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_29) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_map_buffer_range _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3324___initialize)
HXLINE(3324)					return  ::lime::graphics::opengl::ext::EXT_map_buffer_range_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3324)				 ::Dynamic v29 =  ::Dynamic(new _hx_Closure_29());
HXDLIN(3324)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_map_buffer_range",7f,25,48,f8),v29);
            			}
HXLINE(3325)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_30) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_multi_draw_arrays _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3325___initialize)
HXLINE(3325)					return  ::lime::graphics::opengl::ext::EXT_multi_draw_arrays_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3325)				 ::Dynamic v30 =  ::Dynamic(new _hx_Closure_30());
HXDLIN(3325)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_multi_draw_arrays",51,b2,0b,91),v30);
            			}
HXLINE(3326)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_31) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_multisampled_render_to_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3326___initialize)
HXLINE(3326)					return  ::lime::graphics::opengl::ext::EXT_multisampled_render_to_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3326)				 ::Dynamic v31 =  ::Dynamic(new _hx_Closure_31());
HXDLIN(3326)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_multisampled_render_to_texture",40,d2,98,03),v31);
            			}
HXLINE(3327)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_32) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_multiview_draw_buffers _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3327___initialize)
HXLINE(3327)					return  ::lime::graphics::opengl::ext::EXT_multiview_draw_buffers_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3327)				 ::Dynamic v32 =  ::Dynamic(new _hx_Closure_32());
HXDLIN(3327)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_multiview_draw_buffers",f7,b6,e5,c5),v32);
            			}
HXLINE(3328)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_33) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_occlusion_query_boolean _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3328___initialize)
HXLINE(3328)					return  ::lime::graphics::opengl::ext::EXT_occlusion_query_boolean_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3328)				 ::Dynamic v33 =  ::Dynamic(new _hx_Closure_33());
HXDLIN(3328)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_occlusion_query_boolean",81,a7,94,3d),v33);
            			}
HXLINE(3329)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_34) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_packed_depth_stencil _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3329___initialize)
HXLINE(3329)					return  ::lime::graphics::opengl::ext::EXT_packed_depth_stencil_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3329)				 ::Dynamic v34 =  ::Dynamic(new _hx_Closure_34());
HXDLIN(3329)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_packed_depth_stencil",f7,88,e3,09),v34);
            			}
HXLINE(3330)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_35) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_read_format_bgra _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3330___initialize)
HXLINE(3330)					return  ::lime::graphics::opengl::ext::EXT_read_format_bgra_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3330)				 ::Dynamic v35 =  ::Dynamic(new _hx_Closure_35());
HXDLIN(3330)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_read_format_bgra",11,c1,96,f4),v35);
            			}
HXLINE(3331)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_36) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_robustness _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3331___initialize)
HXLINE(3331)					return  ::lime::graphics::opengl::ext::EXT_robustness_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3331)				 ::Dynamic v36 =  ::Dynamic(new _hx_Closure_36());
HXDLIN(3331)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_robustness",c6,8a,39,e5),v36);
            			}
HXLINE(3332)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_37) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_sRGB _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3332___initialize)
HXLINE(3332)					return  ::lime::graphics::opengl::ext::EXT_sRGB_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3332)				 ::Dynamic v37 =  ::Dynamic(new _hx_Closure_37());
HXDLIN(3332)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_sRGB",18,00,47,4b),v37);
            			}
HXLINE(3333)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_38) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_separate_shader_objects _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3333___initialize)
HXLINE(3333)					return  ::lime::graphics::opengl::ext::EXT_separate_shader_objects_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3333)				 ::Dynamic v38 =  ::Dynamic(new _hx_Closure_38());
HXDLIN(3333)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_separate_shader_objects",18,2e,eb,43),v38);
            			}
HXLINE(3334)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_39) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_shader_framebuffer_fetch _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3334___initialize)
HXLINE(3334)					return  ::lime::graphics::opengl::ext::EXT_shader_framebuffer_fetch_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3334)				 ::Dynamic v39 =  ::Dynamic(new _hx_Closure_39());
HXDLIN(3334)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_shader_framebuffer_fetch",0c,04,5a,6d),v39);
            			}
HXLINE(3335)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_40) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_shader_texture_lod _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3335___initialize)
HXLINE(3335)					return  ::lime::graphics::opengl::ext::EXT_shader_texture_lod_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3335)				 ::Dynamic v40 =  ::Dynamic(new _hx_Closure_40());
HXDLIN(3335)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_shader_texture_lod",c1,4c,48,65),v40);
            			}
HXLINE(3336)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_41) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_shadow_samplers _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3336___initialize)
HXLINE(3336)					return  ::lime::graphics::opengl::ext::EXT_shadow_samplers_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3336)				 ::Dynamic v41 =  ::Dynamic(new _hx_Closure_41());
HXDLIN(3336)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_shadow_samplers",ec,92,50,09),v41);
            			}
HXLINE(3337)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_42) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_compression_dxt1 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3337___initialize)
HXLINE(3337)					return  ::lime::graphics::opengl::ext::EXT_texture_compression_dxt1_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3337)				 ::Dynamic v42 =  ::Dynamic(new _hx_Closure_42());
HXDLIN(3337)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_compression_dxt1",6c,ae,f4,76),v42);
            			}
HXLINE(3338)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_43) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_compression_s3tc _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3338___initialize)
HXLINE(3338)					return  ::lime::graphics::opengl::ext::EXT_texture_compression_s3tc_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3338)				 ::Dynamic v43 =  ::Dynamic(new _hx_Closure_43());
HXDLIN(3338)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_compression_s3tc",6a,86,aa,80),v43);
            			}
HXLINE(3339)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_44) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_filter_anisotropic _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3339___initialize)
HXLINE(3339)					return  ::lime::graphics::opengl::ext::EXT_texture_filter_anisotropic_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3339)				 ::Dynamic v44 =  ::Dynamic(new _hx_Closure_44());
HXDLIN(3339)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_filter_anisotropic",4c,4c,32,3d),v44);
            			}
HXLINE(3340)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_45) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_format_BGRA8888 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3340___initialize)
HXLINE(3340)					return  ::lime::graphics::opengl::ext::EXT_texture_format_BGRA8888_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3340)				 ::Dynamic v45 =  ::Dynamic(new _hx_Closure_45());
HXDLIN(3340)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_format_BGRA8888",5a,d2,bd,b2),v45);
            			}
HXLINE(3341)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_46) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_rg _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3341___initialize)
HXLINE(3341)					return  ::lime::graphics::opengl::ext::EXT_texture_rg_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3341)				 ::Dynamic v46 =  ::Dynamic(new _hx_Closure_46());
HXDLIN(3341)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_rg",17,ce,12,89),v46);
            			}
HXLINE(3342)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_47) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_storage _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3342___initialize)
HXLINE(3342)					return  ::lime::graphics::opengl::ext::EXT_texture_storage_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3342)				 ::Dynamic v47 =  ::Dynamic(new _hx_Closure_47());
HXDLIN(3342)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_storage",99,91,8f,9d),v47);
            			}
HXLINE(3343)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_48) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_texture_type_2_10_10_10_REV _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3343___initialize)
HXLINE(3343)					return  ::lime::graphics::opengl::ext::EXT_texture_type_2_10_10_10_REV_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3343)				 ::Dynamic v48 =  ::Dynamic(new _hx_Closure_48());
HXDLIN(3343)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_texture_type_2_10_10_10_REV",93,7e,34,b8),v48);
            			}
HXLINE(3344)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_49) HXARGC(0)
            				 ::lime::graphics::opengl::ext::EXT_unpack_subimage _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3344___initialize)
HXLINE(3344)					return  ::lime::graphics::opengl::ext::EXT_unpack_subimage_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3344)				 ::Dynamic v49 =  ::Dynamic(new _hx_Closure_49());
HXDLIN(3344)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("EXT_unpack_subimage",4a,96,0e,d9),v49);
            			}
HXLINE(3345)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_50) HXARGC(0)
            				 ::lime::graphics::opengl::ext::FJ_shader_binary_GCCSO _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3345___initialize)
HXLINE(3345)					return  ::lime::graphics::opengl::ext::FJ_shader_binary_GCCSO_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3345)				 ::Dynamic v50 =  ::Dynamic(new _hx_Closure_50());
HXDLIN(3345)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("FJ_shader_binary_GCCSO",e4,a3,c9,4b),v50);
            			}
HXLINE(3346)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_51) HXARGC(0)
            				 ::lime::graphics::opengl::ext::IMG_multisampled_render_to_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3346___initialize)
HXLINE(3346)					return  ::lime::graphics::opengl::ext::IMG_multisampled_render_to_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3346)				 ::Dynamic v51 =  ::Dynamic(new _hx_Closure_51());
HXDLIN(3346)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("IMG_multisampled_render_to_texture",1e,8d,48,50),v51);
            			}
HXLINE(3347)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_52) HXARGC(0)
            				 ::lime::graphics::opengl::ext::IMG_program_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3347___initialize)
HXLINE(3347)					return  ::lime::graphics::opengl::ext::IMG_program_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3347)				 ::Dynamic v52 =  ::Dynamic(new _hx_Closure_52());
HXDLIN(3347)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("IMG_program_binary",b8,93,3a,05),v52);
            			}
HXLINE(3348)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_53) HXARGC(0)
            				 ::lime::graphics::opengl::ext::IMG_read_format _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3348___initialize)
HXLINE(3348)					return  ::lime::graphics::opengl::ext::IMG_read_format_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3348)				 ::Dynamic v53 =  ::Dynamic(new _hx_Closure_53());
HXDLIN(3348)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("IMG_read_format",a4,2a,ef,b9),v53);
            			}
HXLINE(3349)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_54) HXARGC(0)
            				 ::lime::graphics::opengl::ext::IMG_shader_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3349___initialize)
HXLINE(3349)					return  ::lime::graphics::opengl::ext::IMG_shader_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3349)				 ::Dynamic v54 =  ::Dynamic(new _hx_Closure_54());
HXDLIN(3349)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("IMG_shader_binary",7f,ec,f0,da),v54);
            			}
HXLINE(3350)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_55) HXARGC(0)
            				 ::lime::graphics::opengl::ext::IMG_texture_compression_pvrtc _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3350___initialize)
HXLINE(3350)					return  ::lime::graphics::opengl::ext::IMG_texture_compression_pvrtc_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3350)				 ::Dynamic v55 =  ::Dynamic(new _hx_Closure_55());
HXDLIN(3350)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("IMG_texture_compression_pvrtc",02,61,85,d1),v55);
            			}
HXLINE(3351)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_56) HXARGC(0)
            				 ::lime::graphics::opengl::ext::KHR_debug _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3351___initialize)
HXLINE(3351)					return  ::lime::graphics::opengl::ext::KHR_debug_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3351)				 ::Dynamic v56 =  ::Dynamic(new _hx_Closure_56());
HXDLIN(3351)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("KHR_debug",69,7f,d0,07),v56);
            			}
HXLINE(3352)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_57) HXARGC(0)
            				 ::lime::graphics::opengl::ext::KHR_texture_compression_astc_ldr _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3352___initialize)
HXLINE(3352)					return  ::lime::graphics::opengl::ext::KHR_texture_compression_astc_ldr_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3352)				 ::Dynamic v57 =  ::Dynamic(new _hx_Closure_57());
HXDLIN(3352)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("KHR_texture_compression_astc_ldr",63,29,b6,ea),v57);
            			}
HXLINE(3353)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_58) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_coverage_sample _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3353___initialize)
HXLINE(3353)					return  ::lime::graphics::opengl::ext::NV_coverage_sample_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3353)				 ::Dynamic v58 =  ::Dynamic(new _hx_Closure_58());
HXDLIN(3353)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_coverage_sample",aa,83,fd,db),v58);
            			}
HXLINE(3354)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_59) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_depth_nonlinear _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3354___initialize)
HXLINE(3354)					return  ::lime::graphics::opengl::ext::NV_depth_nonlinear_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3354)				 ::Dynamic v59 =  ::Dynamic(new _hx_Closure_59());
HXDLIN(3354)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_depth_nonlinear",ff,77,4d,c4),v59);
            			}
HXLINE(3355)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_60) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_draw_buffers _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3355___initialize)
HXLINE(3355)					return  ::lime::graphics::opengl::ext::NV_draw_buffers_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3355)				 ::Dynamic v60 =  ::Dynamic(new _hx_Closure_60());
HXDLIN(3355)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_draw_buffers",8f,0e,de,94),v60);
            			}
HXLINE(3356)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_61) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_fbo_color_attachments _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3356___initialize)
HXLINE(3356)					return  ::lime::graphics::opengl::ext::NV_fbo_color_attachments_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3356)				 ::Dynamic v61 =  ::Dynamic(new _hx_Closure_61());
HXDLIN(3356)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_fbo_color_attachments",d1,a3,ac,87),v61);
            			}
HXLINE(3357)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_62) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_fence _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3357___initialize)
HXLINE(3357)					return  ::lime::graphics::opengl::ext::NV_fence_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3357)				 ::Dynamic v62 =  ::Dynamic(new _hx_Closure_62());
HXDLIN(3357)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_fence",3a,78,71,5f),v62);
            			}
HXLINE(3358)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_63) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_read_buffer _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3358___initialize)
HXLINE(3358)					return  ::lime::graphics::opengl::ext::NV_read_buffer_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3358)				 ::Dynamic v63 =  ::Dynamic(new _hx_Closure_63());
HXDLIN(3358)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_read_buffer",52,78,29,ea),v63);
            			}
HXLINE(3359)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_64) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_read_buffer_front _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3359___initialize)
HXLINE(3359)					return  ::lime::graphics::opengl::ext::NV_read_buffer_front_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3359)				 ::Dynamic v64 =  ::Dynamic(new _hx_Closure_64());
HXDLIN(3359)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_read_buffer_front",bc,e1,e8,d2),v64);
            			}
HXLINE(3360)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_65) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_read_depth _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3360___initialize)
HXLINE(3360)					return  ::lime::graphics::opengl::ext::NV_read_depth_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3360)				 ::Dynamic v65 =  ::Dynamic(new _hx_Closure_65());
HXDLIN(3360)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_read_depth",f1,85,77,c1),v65);
            			}
HXLINE(3361)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_66) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_read_depth_stencil _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3361___initialize)
HXLINE(3361)					return  ::lime::graphics::opengl::ext::NV_read_depth_stencil_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3361)				 ::Dynamic v66 =  ::Dynamic(new _hx_Closure_66());
HXDLIN(3361)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_read_depth_stencil",6e,76,04,4b),v66);
            			}
HXLINE(3362)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_67) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_read_stencil _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3362___initialize)
HXLINE(3362)					return  ::lime::graphics::opengl::ext::NV_read_stencil_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3362)				 ::Dynamic v67 =  ::Dynamic(new _hx_Closure_67());
HXDLIN(3362)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_read_stencil",6a,ea,92,c8),v67);
            			}
HXLINE(3363)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_68) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_texture_compression_s3tc_update _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3363___initialize)
HXLINE(3363)					return  ::lime::graphics::opengl::ext::NV_texture_compression_s3tc_update_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3363)				 ::Dynamic v68 =  ::Dynamic(new _hx_Closure_68());
HXDLIN(3363)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_texture_compression_s3tc_update",45,2a,b6,00),v68);
            			}
HXLINE(3364)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_69) HXARGC(0)
            				 ::lime::graphics::opengl::ext::NV_texture_npot_2D_mipmap _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3364___initialize)
HXLINE(3364)					return  ::lime::graphics::opengl::ext::NV_texture_npot_2D_mipmap_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3364)				 ::Dynamic v69 =  ::Dynamic(new _hx_Closure_69());
HXDLIN(3364)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("NV_texture_npot_2D_mipmap",78,dc,c7,30),v69);
            			}
HXLINE(3365)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_70) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_EGL_image _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3365___initialize)
HXLINE(3365)					return  ::lime::graphics::opengl::ext::OES_EGL_image_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3365)				 ::Dynamic v70 =  ::Dynamic(new _hx_Closure_70());
HXDLIN(3365)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_EGL_image",44,24,7d,2c),v70);
            			}
HXLINE(3366)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_71) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_EGL_image_external _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3366___initialize)
HXLINE(3366)					return  ::lime::graphics::opengl::ext::OES_EGL_image_external_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3366)				 ::Dynamic v71 =  ::Dynamic(new _hx_Closure_71());
HXDLIN(3366)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_EGL_image_external",e6,6c,9f,93),v71);
            			}
HXLINE(3367)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_72) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_compressed_ETC1_RGB8_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3367___initialize)
HXLINE(3367)					return  ::lime::graphics::opengl::ext::OES_compressed_ETC1_RGB8_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3367)				 ::Dynamic v72 =  ::Dynamic(new _hx_Closure_72());
HXDLIN(3367)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_compressed_ETC1_RGB8_texture",cd,f1,a0,b8),v72);
            			}
HXLINE(3368)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_73) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_compressed_paletted_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3368___initialize)
HXLINE(3368)					return  ::lime::graphics::opengl::ext::OES_compressed_paletted_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3368)				 ::Dynamic v73 =  ::Dynamic(new _hx_Closure_73());
HXDLIN(3368)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_compressed_paletted_texture",a1,ed,5e,8e),v73);
            			}
HXLINE(3369)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_74) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_depth24 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3369___initialize)
HXLINE(3369)					return  ::lime::graphics::opengl::ext::OES_depth24_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3369)				 ::Dynamic v74 =  ::Dynamic(new _hx_Closure_74());
HXDLIN(3369)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_depth24",83,70,fd,a0),v74);
            			}
HXLINE(3370)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_75) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_depth32 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3370___initialize)
HXLINE(3370)					return  ::lime::graphics::opengl::ext::OES_depth32_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3370)				 ::Dynamic v75 =  ::Dynamic(new _hx_Closure_75());
HXDLIN(3370)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_depth32",60,71,fd,a0),v75);
            			}
HXLINE(3371)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_76) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_depth_texture _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3371___initialize)
HXLINE(3371)					return  ::lime::graphics::opengl::ext::OES_depth_texture_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3371)				 ::Dynamic v76 =  ::Dynamic(new _hx_Closure_76());
HXDLIN(3371)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_depth_texture",dd,ed,8f,e2),v76);
            			}
HXLINE(3372)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_77) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_element_index_uint _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3372___initialize)
HXLINE(3372)					return  ::lime::graphics::opengl::ext::OES_element_index_uint_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3372)				 ::Dynamic v77 =  ::Dynamic(new _hx_Closure_77());
HXDLIN(3372)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_element_index_uint",cc,fa,20,b1),v77);
            			}
HXLINE(3373)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_78) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_get_program_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3373___initialize)
HXLINE(3373)					return  ::lime::graphics::opengl::ext::OES_get_program_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3373)				 ::Dynamic v78 =  ::Dynamic(new _hx_Closure_78());
HXDLIN(3373)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_get_program_binary",27,f4,1a,01),v78);
            			}
HXLINE(3374)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_79) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_mapbuffer _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3374___initialize)
HXLINE(3374)					return  ::lime::graphics::opengl::ext::OES_mapbuffer_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3374)				 ::Dynamic v79 =  ::Dynamic(new _hx_Closure_79());
HXDLIN(3374)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_mapbuffer",1a,2d,9e,e1),v79);
            			}
HXLINE(3375)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_80) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_packed_depth_stencil _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3375___initialize)
HXLINE(3375)					return  ::lime::graphics::opengl::ext::OES_packed_depth_stencil_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3375)				 ::Dynamic v80 =  ::Dynamic(new _hx_Closure_80());
HXDLIN(3375)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_packed_depth_stencil",7b,19,31,fc),v80);
            			}
HXLINE(3376)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_81) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_required_internalformat _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3376___initialize)
HXLINE(3376)					return  ::lime::graphics::opengl::ext::OES_required_internalformat_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3376)				 ::Dynamic v81 =  ::Dynamic(new _hx_Closure_81());
HXDLIN(3376)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_required_internalformat",52,c5,46,29),v81);
            			}
HXLINE(3377)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_82) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_rgb8_rgba8 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3377___initialize)
HXLINE(3377)					return  ::lime::graphics::opengl::ext::OES_rgb8_rgba8_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3377)				 ::Dynamic v82 =  ::Dynamic(new _hx_Closure_82());
HXDLIN(3377)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_rgb8_rgba8",d2,44,3a,66),v82);
            			}
HXLINE(3378)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_83) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_standard_derivatives _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3378___initialize)
HXLINE(3378)					return  ::lime::graphics::opengl::ext::OES_standard_derivatives_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3378)				 ::Dynamic v83 =  ::Dynamic(new _hx_Closure_83());
HXDLIN(3378)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_standard_derivatives",8c,cb,00,04),v83);
            			}
HXLINE(3379)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_84) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_stencil1 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3379___initialize)
HXLINE(3379)					return  ::lime::graphics::opengl::ext::OES_stencil1_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3379)				 ::Dynamic v84 =  ::Dynamic(new _hx_Closure_84());
HXDLIN(3379)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_stencil1",f7,0f,03,29),v84);
            			}
HXLINE(3380)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_85) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_stencil4 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3380___initialize)
HXLINE(3380)					return  ::lime::graphics::opengl::ext::OES_stencil4_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3380)				 ::Dynamic v85 =  ::Dynamic(new _hx_Closure_85());
HXDLIN(3380)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_stencil4",fa,0f,03,29),v85);
            			}
HXLINE(3381)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_86) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_surfaceless_context _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3381___initialize)
HXLINE(3381)					return  ::lime::graphics::opengl::ext::OES_surfaceless_context_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3381)				 ::Dynamic v86 =  ::Dynamic(new _hx_Closure_86());
HXDLIN(3381)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_surfaceless_context",74,4b,ea,b9),v86);
            			}
HXLINE(3382)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_87) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_3D _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3382___initialize)
HXLINE(3382)					return  ::lime::graphics::opengl::ext::OES_texture_3D_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3382)				 ::Dynamic v87 =  ::Dynamic(new _hx_Closure_87());
HXDLIN(3382)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_3D",97,1a,cf,b4),v87);
            			}
HXLINE(3383)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_88) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_float _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3383___initialize)
HXLINE(3383)					return  ::lime::graphics::opengl::ext::OES_texture_float_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3383)				 ::Dynamic v88 =  ::Dynamic(new _hx_Closure_88());
HXDLIN(3383)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_float",76,0b,21,02),v88);
            			}
HXLINE(3384)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_89) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_float_linear _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3384___initialize)
HXLINE(3384)					return  ::lime::graphics::opengl::ext::OES_texture_float_linear_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3384)				 ::Dynamic v89 =  ::Dynamic(new _hx_Closure_89());
HXDLIN(3384)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_float_linear",ce,52,3e,d7),v89);
            			}
HXLINE(3385)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_90) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_half_float _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3385___initialize)
HXLINE(3385)					return  ::lime::graphics::opengl::ext::OES_texture_half_float_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3385)				 ::Dynamic v90 =  ::Dynamic(new _hx_Closure_90());
HXDLIN(3385)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_half_float",b6,42,f5,f2),v90);
            			}
HXLINE(3386)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_91) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_half_float_linear _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3386___initialize)
HXLINE(3386)					return  ::lime::graphics::opengl::ext::OES_texture_half_float_linear_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3386)				 ::Dynamic v91 =  ::Dynamic(new _hx_Closure_91());
HXDLIN(3386)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_half_float_linear",8e,83,0b,8c),v91);
            			}
HXLINE(3387)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_92) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_texture_npot _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3387___initialize)
HXLINE(3387)					return  ::lime::graphics::opengl::ext::OES_texture_npot_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3387)				 ::Dynamic v92 =  ::Dynamic(new _hx_Closure_92());
HXDLIN(3387)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_texture_npot",4d,89,dd,01),v92);
            			}
HXLINE(3388)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_93) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_vertex_array_object _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3388___initialize)
HXLINE(3388)					return  ::lime::graphics::opengl::ext::OES_vertex_array_object_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3388)				 ::Dynamic v93 =  ::Dynamic(new _hx_Closure_93());
HXDLIN(3388)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_vertex_array_object",de,b2,44,8d),v93);
            			}
HXLINE(3389)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_94) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_vertex_half_float _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3389___initialize)
HXLINE(3389)					return  ::lime::graphics::opengl::ext::OES_vertex_half_float_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3389)				 ::Dynamic v94 =  ::Dynamic(new _hx_Closure_94());
HXDLIN(3389)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_vertex_half_float",89,d9,95,ca),v94);
            			}
HXLINE(3390)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_95) HXARGC(0)
            				 ::lime::graphics::opengl::ext::OES_vertex_type_10_10_10_2 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3390___initialize)
HXLINE(3390)					return  ::lime::graphics::opengl::ext::OES_vertex_type_10_10_10_2_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3390)				 ::Dynamic v95 =  ::Dynamic(new _hx_Closure_95());
HXDLIN(3390)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("OES_vertex_type_10_10_10_2",de,be,f1,06),v95);
            			}
HXLINE(3391)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_96) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_alpha_test _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3391___initialize)
HXLINE(3391)					return  ::lime::graphics::opengl::ext::QCOM_alpha_test_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3391)				 ::Dynamic v96 =  ::Dynamic(new _hx_Closure_96());
HXDLIN(3391)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_alpha_test",c2,a6,01,c4),v96);
            			}
HXLINE(3392)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_97) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_binning_control _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3392___initialize)
HXLINE(3392)					return  ::lime::graphics::opengl::ext::QCOM_binning_control_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3392)				 ::Dynamic v97 =  ::Dynamic(new _hx_Closure_97());
HXDLIN(3392)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_binning_control",4a,6c,46,7b),v97);
            			}
HXLINE(3393)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_98) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_driver_control _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3393___initialize)
HXLINE(3393)					return  ::lime::graphics::opengl::ext::QCOM_driver_control_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3393)				 ::Dynamic v98 =  ::Dynamic(new _hx_Closure_98());
HXDLIN(3393)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_driver_control",35,0f,f7,9e),v98);
            			}
HXLINE(3394)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_99) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_extended_get _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3394___initialize)
HXLINE(3394)					return  ::lime::graphics::opengl::ext::QCOM_extended_get_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3394)				 ::Dynamic v99 =  ::Dynamic(new _hx_Closure_99());
HXDLIN(3394)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_extended_get",3f,13,03,b6),v99);
            			}
HXLINE(3395)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_100) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_extended_get2 _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3395___initialize)
HXLINE(3395)					return  ::lime::graphics::opengl::ext::QCOM_extended_get2_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3395)				 ::Dynamic v100 =  ::Dynamic(new _hx_Closure_100());
HXDLIN(3395)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_extended_get2",13,c4,ad,8c),v100);
            			}
HXLINE(3396)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_101) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_perfmon_global_mode _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3396___initialize)
HXLINE(3396)					return  ::lime::graphics::opengl::ext::QCOM_perfmon_global_mode_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3396)				 ::Dynamic v101 =  ::Dynamic(new _hx_Closure_101());
HXDLIN(3396)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_perfmon_global_mode",74,f2,13,ad),v101);
            			}
HXLINE(3397)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_102) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_tiled_rendering _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3397___initialize)
HXLINE(3397)					return  ::lime::graphics::opengl::ext::QCOM_tiled_rendering_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3397)				 ::Dynamic v102 =  ::Dynamic(new _hx_Closure_102());
HXDLIN(3397)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_tiled_rendering",f4,8a,1f,ec),v102);
            			}
HXLINE(3398)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_103) HXARGC(0)
            				 ::lime::graphics::opengl::ext::QCOM_writeonly_rendering _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3398___initialize)
HXLINE(3398)					return  ::lime::graphics::opengl::ext::QCOM_writeonly_rendering_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3398)				 ::Dynamic v103 =  ::Dynamic(new _hx_Closure_103());
HXDLIN(3398)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("QCOM_writeonly_rendering",09,44,22,8a),v103);
            			}
HXLINE(3399)			{
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_104) HXARGC(0)
            				 ::lime::graphics::opengl::ext::VIV_shader_binary _hx_run(){
            					HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_3399___initialize)
HXLINE(3399)					return  ::lime::graphics::opengl::ext::VIV_shader_binary_obj::__alloc( HX_CTX );
            				}
            				HX_END_LOCAL_FUNC0(return)

HXLINE(3399)				 ::Dynamic v104 =  ::Dynamic(new _hx_Closure_104());
HXDLIN(3399)				::lime::_internal::backend::native::NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors->set(HX_("VIV_shader_binary",5f,4e,50,1f),v104);
            			}
            		}
HXLINE(3402)		this->_hx___initialized = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeOpenGLRenderContext_obj,_hx___initialize,(void))

 ::haxe::ds::StringMap NativeOpenGLRenderContext_obj::_hx___extensionObjects;

 ::haxe::ds::StringMap NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors;

int NativeOpenGLRenderContext_obj::_hx___lastContextID;

::Array< ::String > NativeOpenGLRenderContext_obj::_hx___supportedExtensions;


hx::ObjectPtr< NativeOpenGLRenderContext_obj > NativeOpenGLRenderContext_obj::__new() {
	hx::ObjectPtr< NativeOpenGLRenderContext_obj > __this = new NativeOpenGLRenderContext_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< NativeOpenGLRenderContext_obj > NativeOpenGLRenderContext_obj::__alloc(hx::Ctx *_hx_ctx) {
	NativeOpenGLRenderContext_obj *__this = (NativeOpenGLRenderContext_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(NativeOpenGLRenderContext_obj), true, "lime._internal.backend.native.NativeOpenGLRenderContext"));
	*(void **)__this = NativeOpenGLRenderContext_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

NativeOpenGLRenderContext_obj::NativeOpenGLRenderContext_obj()
{
}

void NativeOpenGLRenderContext_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(NativeOpenGLRenderContext);
	HX_MARK_MEMBER_NAME(DEPTH_BUFFER_BIT,"DEPTH_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(STENCIL_BUFFER_BIT,"STENCIL_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(COLOR_BUFFER_BIT,"COLOR_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(POINTS,"POINTS");
	HX_MARK_MEMBER_NAME(LINES,"LINES");
	HX_MARK_MEMBER_NAME(LINE_LOOP,"LINE_LOOP");
	HX_MARK_MEMBER_NAME(LINE_STRIP,"LINE_STRIP");
	HX_MARK_MEMBER_NAME(TRIANGLES,"TRIANGLES");
	HX_MARK_MEMBER_NAME(TRIANGLE_STRIP,"TRIANGLE_STRIP");
	HX_MARK_MEMBER_NAME(TRIANGLE_FAN,"TRIANGLE_FAN");
	HX_MARK_MEMBER_NAME(ZERO,"ZERO");
	HX_MARK_MEMBER_NAME(ONE,"ONE");
	HX_MARK_MEMBER_NAME(SRC_COLOR,"SRC_COLOR");
	HX_MARK_MEMBER_NAME(ONE_MINUS_SRC_COLOR,"ONE_MINUS_SRC_COLOR");
	HX_MARK_MEMBER_NAME(SRC_ALPHA,"SRC_ALPHA");
	HX_MARK_MEMBER_NAME(ONE_MINUS_SRC_ALPHA,"ONE_MINUS_SRC_ALPHA");
	HX_MARK_MEMBER_NAME(DST_ALPHA,"DST_ALPHA");
	HX_MARK_MEMBER_NAME(ONE_MINUS_DST_ALPHA,"ONE_MINUS_DST_ALPHA");
	HX_MARK_MEMBER_NAME(DST_COLOR,"DST_COLOR");
	HX_MARK_MEMBER_NAME(ONE_MINUS_DST_COLOR,"ONE_MINUS_DST_COLOR");
	HX_MARK_MEMBER_NAME(SRC_ALPHA_SATURATE,"SRC_ALPHA_SATURATE");
	HX_MARK_MEMBER_NAME(FUNC_ADD,"FUNC_ADD");
	HX_MARK_MEMBER_NAME(BLEND_EQUATION,"BLEND_EQUATION");
	HX_MARK_MEMBER_NAME(BLEND_EQUATION_RGB,"BLEND_EQUATION_RGB");
	HX_MARK_MEMBER_NAME(BLEND_EQUATION_ALPHA,"BLEND_EQUATION_ALPHA");
	HX_MARK_MEMBER_NAME(FUNC_SUBTRACT,"FUNC_SUBTRACT");
	HX_MARK_MEMBER_NAME(FUNC_REVERSE_SUBTRACT,"FUNC_REVERSE_SUBTRACT");
	HX_MARK_MEMBER_NAME(BLEND_DST_RGB,"BLEND_DST_RGB");
	HX_MARK_MEMBER_NAME(BLEND_SRC_RGB,"BLEND_SRC_RGB");
	HX_MARK_MEMBER_NAME(BLEND_DST_ALPHA,"BLEND_DST_ALPHA");
	HX_MARK_MEMBER_NAME(BLEND_SRC_ALPHA,"BLEND_SRC_ALPHA");
	HX_MARK_MEMBER_NAME(CONSTANT_COLOR,"CONSTANT_COLOR");
	HX_MARK_MEMBER_NAME(ONE_MINUS_CONSTANT_COLOR,"ONE_MINUS_CONSTANT_COLOR");
	HX_MARK_MEMBER_NAME(CONSTANT_ALPHA,"CONSTANT_ALPHA");
	HX_MARK_MEMBER_NAME(ONE_MINUS_CONSTANT_ALPHA,"ONE_MINUS_CONSTANT_ALPHA");
	HX_MARK_MEMBER_NAME(BLEND_COLOR,"BLEND_COLOR");
	HX_MARK_MEMBER_NAME(ARRAY_BUFFER,"ARRAY_BUFFER");
	HX_MARK_MEMBER_NAME(ELEMENT_ARRAY_BUFFER,"ELEMENT_ARRAY_BUFFER");
	HX_MARK_MEMBER_NAME(ARRAY_BUFFER_BINDING,"ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(ELEMENT_ARRAY_BUFFER_BINDING,"ELEMENT_ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(STREAM_DRAW,"STREAM_DRAW");
	HX_MARK_MEMBER_NAME(STATIC_DRAW,"STATIC_DRAW");
	HX_MARK_MEMBER_NAME(DYNAMIC_DRAW,"DYNAMIC_DRAW");
	HX_MARK_MEMBER_NAME(BUFFER_SIZE,"BUFFER_SIZE");
	HX_MARK_MEMBER_NAME(BUFFER_USAGE,"BUFFER_USAGE");
	HX_MARK_MEMBER_NAME(CURRENT_VERTEX_ATTRIB,"CURRENT_VERTEX_ATTRIB");
	HX_MARK_MEMBER_NAME(FRONT,"FRONT");
	HX_MARK_MEMBER_NAME(BACK,"BACK");
	HX_MARK_MEMBER_NAME(FRONT_AND_BACK,"FRONT_AND_BACK");
	HX_MARK_MEMBER_NAME(TEXTURE_2D,"TEXTURE_2D");
	HX_MARK_MEMBER_NAME(CULL_FACE,"CULL_FACE");
	HX_MARK_MEMBER_NAME(BLEND,"BLEND");
	HX_MARK_MEMBER_NAME(DITHER,"DITHER");
	HX_MARK_MEMBER_NAME(STENCIL_TEST,"STENCIL_TEST");
	HX_MARK_MEMBER_NAME(DEPTH_TEST,"DEPTH_TEST");
	HX_MARK_MEMBER_NAME(SCISSOR_TEST,"SCISSOR_TEST");
	HX_MARK_MEMBER_NAME(POLYGON_OFFSET_FILL,"POLYGON_OFFSET_FILL");
	HX_MARK_MEMBER_NAME(SAMPLE_ALPHA_TO_COVERAGE,"SAMPLE_ALPHA_TO_COVERAGE");
	HX_MARK_MEMBER_NAME(SAMPLE_COVERAGE,"SAMPLE_COVERAGE");
	HX_MARK_MEMBER_NAME(NO_ERROR,"NO_ERROR");
	HX_MARK_MEMBER_NAME(INVALID_ENUM,"INVALID_ENUM");
	HX_MARK_MEMBER_NAME(INVALID_VALUE,"INVALID_VALUE");
	HX_MARK_MEMBER_NAME(INVALID_OPERATION,"INVALID_OPERATION");
	HX_MARK_MEMBER_NAME(OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_MARK_MEMBER_NAME(CW,"CW");
	HX_MARK_MEMBER_NAME(CCW,"CCW");
	HX_MARK_MEMBER_NAME(LINE_WIDTH,"LINE_WIDTH");
	HX_MARK_MEMBER_NAME(ALIASED_POINT_SIZE_RANGE,"ALIASED_POINT_SIZE_RANGE");
	HX_MARK_MEMBER_NAME(ALIASED_LINE_WIDTH_RANGE,"ALIASED_LINE_WIDTH_RANGE");
	HX_MARK_MEMBER_NAME(CULL_FACE_MODE,"CULL_FACE_MODE");
	HX_MARK_MEMBER_NAME(FRONT_FACE,"FRONT_FACE");
	HX_MARK_MEMBER_NAME(DEPTH_RANGE,"DEPTH_RANGE");
	HX_MARK_MEMBER_NAME(DEPTH_WRITEMASK,"DEPTH_WRITEMASK");
	HX_MARK_MEMBER_NAME(DEPTH_CLEAR_VALUE,"DEPTH_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(DEPTH_FUNC,"DEPTH_FUNC");
	HX_MARK_MEMBER_NAME(STENCIL_CLEAR_VALUE,"STENCIL_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(STENCIL_FUNC,"STENCIL_FUNC");
	HX_MARK_MEMBER_NAME(STENCIL_FAIL,"STENCIL_FAIL");
	HX_MARK_MEMBER_NAME(STENCIL_PASS_DEPTH_FAIL,"STENCIL_PASS_DEPTH_FAIL");
	HX_MARK_MEMBER_NAME(STENCIL_PASS_DEPTH_PASS,"STENCIL_PASS_DEPTH_PASS");
	HX_MARK_MEMBER_NAME(STENCIL_REF,"STENCIL_REF");
	HX_MARK_MEMBER_NAME(STENCIL_VALUE_MASK,"STENCIL_VALUE_MASK");
	HX_MARK_MEMBER_NAME(STENCIL_WRITEMASK,"STENCIL_WRITEMASK");
	HX_MARK_MEMBER_NAME(STENCIL_BACK_FUNC,"STENCIL_BACK_FUNC");
	HX_MARK_MEMBER_NAME(STENCIL_BACK_FAIL,"STENCIL_BACK_FAIL");
	HX_MARK_MEMBER_NAME(STENCIL_BACK_PASS_DEPTH_FAIL,"STENCIL_BACK_PASS_DEPTH_FAIL");
	HX_MARK_MEMBER_NAME(STENCIL_BACK_PASS_DEPTH_PASS,"STENCIL_BACK_PASS_DEPTH_PASS");
	HX_MARK_MEMBER_NAME(STENCIL_BACK_REF,"STENCIL_BACK_REF");
	HX_MARK_MEMBER_NAME(STENCIL_BACK_VALUE_MASK,"STENCIL_BACK_VALUE_MASK");
	HX_MARK_MEMBER_NAME(STENCIL_BACK_WRITEMASK,"STENCIL_BACK_WRITEMASK");
	HX_MARK_MEMBER_NAME(VIEWPORT,"VIEWPORT");
	HX_MARK_MEMBER_NAME(SCISSOR_BOX,"SCISSOR_BOX");
	HX_MARK_MEMBER_NAME(COLOR_CLEAR_VALUE,"COLOR_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(COLOR_WRITEMASK,"COLOR_WRITEMASK");
	HX_MARK_MEMBER_NAME(UNPACK_ALIGNMENT,"UNPACK_ALIGNMENT");
	HX_MARK_MEMBER_NAME(PACK_ALIGNMENT,"PACK_ALIGNMENT");
	HX_MARK_MEMBER_NAME(MAX_TEXTURE_SIZE,"MAX_TEXTURE_SIZE");
	HX_MARK_MEMBER_NAME(MAX_VIEWPORT_DIMS,"MAX_VIEWPORT_DIMS");
	HX_MARK_MEMBER_NAME(SUBPIXEL_BITS,"SUBPIXEL_BITS");
	HX_MARK_MEMBER_NAME(RED_BITS,"RED_BITS");
	HX_MARK_MEMBER_NAME(GREEN_BITS,"GREEN_BITS");
	HX_MARK_MEMBER_NAME(BLUE_BITS,"BLUE_BITS");
	HX_MARK_MEMBER_NAME(ALPHA_BITS,"ALPHA_BITS");
	HX_MARK_MEMBER_NAME(DEPTH_BITS,"DEPTH_BITS");
	HX_MARK_MEMBER_NAME(STENCIL_BITS,"STENCIL_BITS");
	HX_MARK_MEMBER_NAME(POLYGON_OFFSET_UNITS,"POLYGON_OFFSET_UNITS");
	HX_MARK_MEMBER_NAME(POLYGON_OFFSET_FACTOR,"POLYGON_OFFSET_FACTOR");
	HX_MARK_MEMBER_NAME(TEXTURE_BINDING_2D,"TEXTURE_BINDING_2D");
	HX_MARK_MEMBER_NAME(SAMPLE_BUFFERS,"SAMPLE_BUFFERS");
	HX_MARK_MEMBER_NAME(SAMPLES,"SAMPLES");
	HX_MARK_MEMBER_NAME(SAMPLE_COVERAGE_VALUE,"SAMPLE_COVERAGE_VALUE");
	HX_MARK_MEMBER_NAME(SAMPLE_COVERAGE_INVERT,"SAMPLE_COVERAGE_INVERT");
	HX_MARK_MEMBER_NAME(NUM_COMPRESSED_TEXTURE_FORMATS,"NUM_COMPRESSED_TEXTURE_FORMATS");
	HX_MARK_MEMBER_NAME(COMPRESSED_TEXTURE_FORMATS,"COMPRESSED_TEXTURE_FORMATS");
	HX_MARK_MEMBER_NAME(DONT_CARE,"DONT_CARE");
	HX_MARK_MEMBER_NAME(FASTEST,"FASTEST");
	HX_MARK_MEMBER_NAME(NICEST,"NICEST");
	HX_MARK_MEMBER_NAME(GENERATE_MIPMAP_HINT,"GENERATE_MIPMAP_HINT");
	HX_MARK_MEMBER_NAME(BYTE,"BYTE");
	HX_MARK_MEMBER_NAME(UNSIGNED_BYTE,"UNSIGNED_BYTE");
	HX_MARK_MEMBER_NAME(SHORT,"SHORT");
	HX_MARK_MEMBER_NAME(UNSIGNED_SHORT,"UNSIGNED_SHORT");
	HX_MARK_MEMBER_NAME(INT,"INT");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT,"UNSIGNED_INT");
	HX_MARK_MEMBER_NAME(FLOAT,"FLOAT");
	HX_MARK_MEMBER_NAME(FIXED,"FIXED");
	HX_MARK_MEMBER_NAME(DEPTH_COMPONENT,"DEPTH_COMPONENT");
	HX_MARK_MEMBER_NAME(ALPHA,"ALPHA");
	HX_MARK_MEMBER_NAME(RGB,"RGB");
	HX_MARK_MEMBER_NAME(RGBA,"RGBA");
	HX_MARK_MEMBER_NAME(LUMINANCE,"LUMINANCE");
	HX_MARK_MEMBER_NAME(LUMINANCE_ALPHA,"LUMINANCE_ALPHA");
	HX_MARK_MEMBER_NAME(UNSIGNED_SHORT_4_4_4_4,"UNSIGNED_SHORT_4_4_4_4");
	HX_MARK_MEMBER_NAME(UNSIGNED_SHORT_5_5_5_1,"UNSIGNED_SHORT_5_5_5_1");
	HX_MARK_MEMBER_NAME(UNSIGNED_SHORT_5_6_5,"UNSIGNED_SHORT_5_6_5");
	HX_MARK_MEMBER_NAME(FRAGMENT_SHADER,"FRAGMENT_SHADER");
	HX_MARK_MEMBER_NAME(VERTEX_SHADER,"VERTEX_SHADER");
	HX_MARK_MEMBER_NAME(MAX_VERTEX_ATTRIBS,"MAX_VERTEX_ATTRIBS");
	HX_MARK_MEMBER_NAME(MAX_VERTEX_UNIFORM_VECTORS,"MAX_VERTEX_UNIFORM_VECTORS");
	HX_MARK_MEMBER_NAME(MAX_VARYING_VECTORS,"MAX_VARYING_VECTORS");
	HX_MARK_MEMBER_NAME(MAX_COMBINED_TEXTURE_IMAGE_UNITS,"MAX_COMBINED_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(MAX_VERTEX_TEXTURE_IMAGE_UNITS,"MAX_VERTEX_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(MAX_TEXTURE_IMAGE_UNITS,"MAX_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(MAX_FRAGMENT_UNIFORM_VECTORS,"MAX_FRAGMENT_UNIFORM_VECTORS");
	HX_MARK_MEMBER_NAME(SHADER_TYPE,"SHADER_TYPE");
	HX_MARK_MEMBER_NAME(DELETE_STATUS,"DELETE_STATUS");
	HX_MARK_MEMBER_NAME(LINK_STATUS,"LINK_STATUS");
	HX_MARK_MEMBER_NAME(VALIDATE_STATUS,"VALIDATE_STATUS");
	HX_MARK_MEMBER_NAME(ATTACHED_SHADERS,"ATTACHED_SHADERS");
	HX_MARK_MEMBER_NAME(ACTIVE_UNIFORMS,"ACTIVE_UNIFORMS");
	HX_MARK_MEMBER_NAME(ACTIVE_UNIFORMS_MAX_LENGTH,"ACTIVE_UNIFORMS_MAX_LENGTH");
	HX_MARK_MEMBER_NAME(ACTIVE_ATTRIBUTES,"ACTIVE_ATTRIBUTES");
	HX_MARK_MEMBER_NAME(ACTIVE_ATTRIBUTES_MAX_LENGTH,"ACTIVE_ATTRIBUTES_MAX_LENGTH");
	HX_MARK_MEMBER_NAME(SHADING_LANGUAGE_VERSION,"SHADING_LANGUAGE_VERSION");
	HX_MARK_MEMBER_NAME(CURRENT_PROGRAM,"CURRENT_PROGRAM");
	HX_MARK_MEMBER_NAME(NEVER,"NEVER");
	HX_MARK_MEMBER_NAME(LESS,"LESS");
	HX_MARK_MEMBER_NAME(EQUAL,"EQUAL");
	HX_MARK_MEMBER_NAME(LEQUAL,"LEQUAL");
	HX_MARK_MEMBER_NAME(GREATER,"GREATER");
	HX_MARK_MEMBER_NAME(NOTEQUAL,"NOTEQUAL");
	HX_MARK_MEMBER_NAME(GEQUAL,"GEQUAL");
	HX_MARK_MEMBER_NAME(ALWAYS,"ALWAYS");
	HX_MARK_MEMBER_NAME(KEEP,"KEEP");
	HX_MARK_MEMBER_NAME(REPLACE,"REPLACE");
	HX_MARK_MEMBER_NAME(INCR,"INCR");
	HX_MARK_MEMBER_NAME(DECR,"DECR");
	HX_MARK_MEMBER_NAME(INVERT,"INVERT");
	HX_MARK_MEMBER_NAME(INCR_WRAP,"INCR_WRAP");
	HX_MARK_MEMBER_NAME(DECR_WRAP,"DECR_WRAP");
	HX_MARK_MEMBER_NAME(VENDOR,"VENDOR");
	HX_MARK_MEMBER_NAME(RENDERER,"RENDERER");
	HX_MARK_MEMBER_NAME(VERSION,"VERSION");
	HX_MARK_MEMBER_NAME(EXTENSIONS,"EXTENSIONS");
	HX_MARK_MEMBER_NAME(NEAREST,"NEAREST");
	HX_MARK_MEMBER_NAME(LINEAR,"LINEAR");
	HX_MARK_MEMBER_NAME(NEAREST_MIPMAP_NEAREST,"NEAREST_MIPMAP_NEAREST");
	HX_MARK_MEMBER_NAME(LINEAR_MIPMAP_NEAREST,"LINEAR_MIPMAP_NEAREST");
	HX_MARK_MEMBER_NAME(NEAREST_MIPMAP_LINEAR,"NEAREST_MIPMAP_LINEAR");
	HX_MARK_MEMBER_NAME(LINEAR_MIPMAP_LINEAR,"LINEAR_MIPMAP_LINEAR");
	HX_MARK_MEMBER_NAME(TEXTURE_MAG_FILTER,"TEXTURE_MAG_FILTER");
	HX_MARK_MEMBER_NAME(TEXTURE_MIN_FILTER,"TEXTURE_MIN_FILTER");
	HX_MARK_MEMBER_NAME(TEXTURE_WRAP_S,"TEXTURE_WRAP_S");
	HX_MARK_MEMBER_NAME(TEXTURE_WRAP_T,"TEXTURE_WRAP_T");
	HX_MARK_MEMBER_NAME(TEXTURE,"TEXTURE");
	HX_MARK_MEMBER_NAME(TEXTURE_CUBE_MAP,"TEXTURE_CUBE_MAP");
	HX_MARK_MEMBER_NAME(TEXTURE_BINDING_CUBE_MAP,"TEXTURE_BINDING_CUBE_MAP");
	HX_MARK_MEMBER_NAME(TEXTURE_CUBE_MAP_POSITIVE_X,"TEXTURE_CUBE_MAP_POSITIVE_X");
	HX_MARK_MEMBER_NAME(TEXTURE_CUBE_MAP_NEGATIVE_X,"TEXTURE_CUBE_MAP_NEGATIVE_X");
	HX_MARK_MEMBER_NAME(TEXTURE_CUBE_MAP_POSITIVE_Y,"TEXTURE_CUBE_MAP_POSITIVE_Y");
	HX_MARK_MEMBER_NAME(TEXTURE_CUBE_MAP_NEGATIVE_Y,"TEXTURE_CUBE_MAP_NEGATIVE_Y");
	HX_MARK_MEMBER_NAME(TEXTURE_CUBE_MAP_POSITIVE_Z,"TEXTURE_CUBE_MAP_POSITIVE_Z");
	HX_MARK_MEMBER_NAME(TEXTURE_CUBE_MAP_NEGATIVE_Z,"TEXTURE_CUBE_MAP_NEGATIVE_Z");
	HX_MARK_MEMBER_NAME(MAX_CUBE_MAP_TEXTURE_SIZE,"MAX_CUBE_MAP_TEXTURE_SIZE");
	HX_MARK_MEMBER_NAME(TEXTURE0,"TEXTURE0");
	HX_MARK_MEMBER_NAME(TEXTURE1,"TEXTURE1");
	HX_MARK_MEMBER_NAME(TEXTURE2,"TEXTURE2");
	HX_MARK_MEMBER_NAME(TEXTURE3,"TEXTURE3");
	HX_MARK_MEMBER_NAME(TEXTURE4,"TEXTURE4");
	HX_MARK_MEMBER_NAME(TEXTURE5,"TEXTURE5");
	HX_MARK_MEMBER_NAME(TEXTURE6,"TEXTURE6");
	HX_MARK_MEMBER_NAME(TEXTURE7,"TEXTURE7");
	HX_MARK_MEMBER_NAME(TEXTURE8,"TEXTURE8");
	HX_MARK_MEMBER_NAME(TEXTURE9,"TEXTURE9");
	HX_MARK_MEMBER_NAME(TEXTURE10,"TEXTURE10");
	HX_MARK_MEMBER_NAME(TEXTURE11,"TEXTURE11");
	HX_MARK_MEMBER_NAME(TEXTURE12,"TEXTURE12");
	HX_MARK_MEMBER_NAME(TEXTURE13,"TEXTURE13");
	HX_MARK_MEMBER_NAME(TEXTURE14,"TEXTURE14");
	HX_MARK_MEMBER_NAME(TEXTURE15,"TEXTURE15");
	HX_MARK_MEMBER_NAME(TEXTURE16,"TEXTURE16");
	HX_MARK_MEMBER_NAME(TEXTURE17,"TEXTURE17");
	HX_MARK_MEMBER_NAME(TEXTURE18,"TEXTURE18");
	HX_MARK_MEMBER_NAME(TEXTURE19,"TEXTURE19");
	HX_MARK_MEMBER_NAME(TEXTURE20,"TEXTURE20");
	HX_MARK_MEMBER_NAME(TEXTURE21,"TEXTURE21");
	HX_MARK_MEMBER_NAME(TEXTURE22,"TEXTURE22");
	HX_MARK_MEMBER_NAME(TEXTURE23,"TEXTURE23");
	HX_MARK_MEMBER_NAME(TEXTURE24,"TEXTURE24");
	HX_MARK_MEMBER_NAME(TEXTURE25,"TEXTURE25");
	HX_MARK_MEMBER_NAME(TEXTURE26,"TEXTURE26");
	HX_MARK_MEMBER_NAME(TEXTURE27,"TEXTURE27");
	HX_MARK_MEMBER_NAME(TEXTURE28,"TEXTURE28");
	HX_MARK_MEMBER_NAME(TEXTURE29,"TEXTURE29");
	HX_MARK_MEMBER_NAME(TEXTURE30,"TEXTURE30");
	HX_MARK_MEMBER_NAME(TEXTURE31,"TEXTURE31");
	HX_MARK_MEMBER_NAME(ACTIVE_TEXTURE,"ACTIVE_TEXTURE");
	HX_MARK_MEMBER_NAME(REPEAT,"REPEAT");
	HX_MARK_MEMBER_NAME(CLAMP_TO_EDGE,"CLAMP_TO_EDGE");
	HX_MARK_MEMBER_NAME(MIRRORED_REPEAT,"MIRRORED_REPEAT");
	HX_MARK_MEMBER_NAME(FLOAT_VEC2,"FLOAT_VEC2");
	HX_MARK_MEMBER_NAME(FLOAT_VEC3,"FLOAT_VEC3");
	HX_MARK_MEMBER_NAME(FLOAT_VEC4,"FLOAT_VEC4");
	HX_MARK_MEMBER_NAME(INT_VEC2,"INT_VEC2");
	HX_MARK_MEMBER_NAME(INT_VEC3,"INT_VEC3");
	HX_MARK_MEMBER_NAME(INT_VEC4,"INT_VEC4");
	HX_MARK_MEMBER_NAME(BOOL,"BOOL");
	HX_MARK_MEMBER_NAME(BOOL_VEC2,"BOOL_VEC2");
	HX_MARK_MEMBER_NAME(BOOL_VEC3,"BOOL_VEC3");
	HX_MARK_MEMBER_NAME(BOOL_VEC4,"BOOL_VEC4");
	HX_MARK_MEMBER_NAME(FLOAT_MAT2,"FLOAT_MAT2");
	HX_MARK_MEMBER_NAME(FLOAT_MAT3,"FLOAT_MAT3");
	HX_MARK_MEMBER_NAME(FLOAT_MAT4,"FLOAT_MAT4");
	HX_MARK_MEMBER_NAME(SAMPLER_2D,"SAMPLER_2D");
	HX_MARK_MEMBER_NAME(SAMPLER_CUBE,"SAMPLER_CUBE");
	HX_MARK_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_ENABLED,"VERTEX_ATTRIB_ARRAY_ENABLED");
	HX_MARK_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_SIZE,"VERTEX_ATTRIB_ARRAY_SIZE");
	HX_MARK_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_STRIDE,"VERTEX_ATTRIB_ARRAY_STRIDE");
	HX_MARK_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_TYPE,"VERTEX_ATTRIB_ARRAY_TYPE");
	HX_MARK_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_NORMALIZED,"VERTEX_ATTRIB_ARRAY_NORMALIZED");
	HX_MARK_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_POINTER,"VERTEX_ATTRIB_ARRAY_POINTER");
	HX_MARK_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(IMPLEMENTATION_COLOR_READ_TYPE,"IMPLEMENTATION_COLOR_READ_TYPE");
	HX_MARK_MEMBER_NAME(IMPLEMENTATION_COLOR_READ_FORMAT,"IMPLEMENTATION_COLOR_READ_FORMAT");
	HX_MARK_MEMBER_NAME(VERTEX_PROGRAM_POINT_SIZE,"VERTEX_PROGRAM_POINT_SIZE");
	HX_MARK_MEMBER_NAME(POINT_SPRITE,"POINT_SPRITE");
	HX_MARK_MEMBER_NAME(COMPILE_STATUS,"COMPILE_STATUS");
	HX_MARK_MEMBER_NAME(INFO_LOG_LENGTH,"INFO_LOG_LENGTH");
	HX_MARK_MEMBER_NAME(SHADER_SOURCE_LENGTH,"SHADER_SOURCE_LENGTH");
	HX_MARK_MEMBER_NAME(SHADER_COMPILER,"SHADER_COMPILER");
	HX_MARK_MEMBER_NAME(SHADER_BINARY_FORMATS,"SHADER_BINARY_FORMATS");
	HX_MARK_MEMBER_NAME(NUM_SHADER_BINARY_FORMATS,"NUM_SHADER_BINARY_FORMATS");
	HX_MARK_MEMBER_NAME(LOW_FLOAT,"LOW_FLOAT");
	HX_MARK_MEMBER_NAME(MEDIUM_FLOAT,"MEDIUM_FLOAT");
	HX_MARK_MEMBER_NAME(HIGH_FLOAT,"HIGH_FLOAT");
	HX_MARK_MEMBER_NAME(LOW_INT,"LOW_INT");
	HX_MARK_MEMBER_NAME(MEDIUM_INT,"MEDIUM_INT");
	HX_MARK_MEMBER_NAME(HIGH_INT,"HIGH_INT");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER,"FRAMEBUFFER");
	HX_MARK_MEMBER_NAME(RENDERBUFFER,"RENDERBUFFER");
	HX_MARK_MEMBER_NAME(RGBA4,"RGBA4");
	HX_MARK_MEMBER_NAME(RGB5_A1,"RGB5_A1");
	HX_MARK_MEMBER_NAME(RGB565,"RGB565");
	HX_MARK_MEMBER_NAME(DEPTH_COMPONENT16,"DEPTH_COMPONENT16");
	HX_MARK_MEMBER_NAME(STENCIL_INDEX,"STENCIL_INDEX");
	HX_MARK_MEMBER_NAME(STENCIL_INDEX8,"STENCIL_INDEX8");
	HX_MARK_MEMBER_NAME(DEPTH_STENCIL,"DEPTH_STENCIL");
	HX_MARK_MEMBER_NAME(RENDERBUFFER_WIDTH,"RENDERBUFFER_WIDTH");
	HX_MARK_MEMBER_NAME(RENDERBUFFER_HEIGHT,"RENDERBUFFER_HEIGHT");
	HX_MARK_MEMBER_NAME(RENDERBUFFER_INTERNAL_FORMAT,"RENDERBUFFER_INTERNAL_FORMAT");
	HX_MARK_MEMBER_NAME(RENDERBUFFER_RED_SIZE,"RENDERBUFFER_RED_SIZE");
	HX_MARK_MEMBER_NAME(RENDERBUFFER_GREEN_SIZE,"RENDERBUFFER_GREEN_SIZE");
	HX_MARK_MEMBER_NAME(RENDERBUFFER_BLUE_SIZE,"RENDERBUFFER_BLUE_SIZE");
	HX_MARK_MEMBER_NAME(RENDERBUFFER_ALPHA_SIZE,"RENDERBUFFER_ALPHA_SIZE");
	HX_MARK_MEMBER_NAME(RENDERBUFFER_DEPTH_SIZE,"RENDERBUFFER_DEPTH_SIZE");
	HX_MARK_MEMBER_NAME(RENDERBUFFER_STENCIL_SIZE,"RENDERBUFFER_STENCIL_SIZE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT0,"COLOR_ATTACHMENT0");
	HX_MARK_MEMBER_NAME(DEPTH_ATTACHMENT,"DEPTH_ATTACHMENT");
	HX_MARK_MEMBER_NAME(STENCIL_ATTACHMENT,"STENCIL_ATTACHMENT");
	HX_MARK_MEMBER_NAME(DEPTH_STENCIL_ATTACHMENT,"DEPTH_STENCIL_ATTACHMENT");
	HX_MARK_MEMBER_NAME(NONE,"NONE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_COMPLETE,"FRAMEBUFFER_COMPLETE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_INCOMPLETE_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_INCOMPLETE_DIMENSIONS,"FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_UNSUPPORTED,"FRAMEBUFFER_UNSUPPORTED");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_BINDING,"FRAMEBUFFER_BINDING");
	HX_MARK_MEMBER_NAME(RENDERBUFFER_BINDING,"RENDERBUFFER_BINDING");
	HX_MARK_MEMBER_NAME(MAX_RENDERBUFFER_SIZE,"MAX_RENDERBUFFER_SIZE");
	HX_MARK_MEMBER_NAME(INVALID_FRAMEBUFFER_OPERATION,"INVALID_FRAMEBUFFER_OPERATION");
	HX_MARK_MEMBER_NAME(UNPACK_FLIP_Y_WEBGL,"UNPACK_FLIP_Y_WEBGL");
	HX_MARK_MEMBER_NAME(UNPACK_PREMULTIPLY_ALPHA_WEBGL,"UNPACK_PREMULTIPLY_ALPHA_WEBGL");
	HX_MARK_MEMBER_NAME(CONTEXT_LOST_WEBGL,"CONTEXT_LOST_WEBGL");
	HX_MARK_MEMBER_NAME(UNPACK_COLORSPACE_CONVERSION_WEBGL,"UNPACK_COLORSPACE_CONVERSION_WEBGL");
	HX_MARK_MEMBER_NAME(BROWSER_DEFAULT_WEBGL,"BROWSER_DEFAULT_WEBGL");
	HX_MARK_MEMBER_NAME(READ_BUFFER,"READ_BUFFER");
	HX_MARK_MEMBER_NAME(UNPACK_ROW_LENGTH,"UNPACK_ROW_LENGTH");
	HX_MARK_MEMBER_NAME(UNPACK_SKIP_ROWS,"UNPACK_SKIP_ROWS");
	HX_MARK_MEMBER_NAME(UNPACK_SKIP_PIXELS,"UNPACK_SKIP_PIXELS");
	HX_MARK_MEMBER_NAME(PACK_ROW_LENGTH,"PACK_ROW_LENGTH");
	HX_MARK_MEMBER_NAME(PACK_SKIP_ROWS,"PACK_SKIP_ROWS");
	HX_MARK_MEMBER_NAME(PACK_SKIP_PIXELS,"PACK_SKIP_PIXELS");
	HX_MARK_MEMBER_NAME(TEXTURE_BINDING_3D,"TEXTURE_BINDING_3D");
	HX_MARK_MEMBER_NAME(UNPACK_SKIP_IMAGES,"UNPACK_SKIP_IMAGES");
	HX_MARK_MEMBER_NAME(UNPACK_IMAGE_HEIGHT,"UNPACK_IMAGE_HEIGHT");
	HX_MARK_MEMBER_NAME(MAX_3D_TEXTURE_SIZE,"MAX_3D_TEXTURE_SIZE");
	HX_MARK_MEMBER_NAME(MAX_ELEMENTS_VERTICES,"MAX_ELEMENTS_VERTICES");
	HX_MARK_MEMBER_NAME(MAX_ELEMENTS_INDICES,"MAX_ELEMENTS_INDICES");
	HX_MARK_MEMBER_NAME(MAX_TEXTURE_LOD_BIAS,"MAX_TEXTURE_LOD_BIAS");
	HX_MARK_MEMBER_NAME(MAX_FRAGMENT_UNIFORM_COMPONENTS,"MAX_FRAGMENT_UNIFORM_COMPONENTS");
	HX_MARK_MEMBER_NAME(MAX_VERTEX_UNIFORM_COMPONENTS,"MAX_VERTEX_UNIFORM_COMPONENTS");
	HX_MARK_MEMBER_NAME(MAX_ARRAY_TEXTURE_LAYERS,"MAX_ARRAY_TEXTURE_LAYERS");
	HX_MARK_MEMBER_NAME(MIN_PROGRAM_TEXEL_OFFSET,"MIN_PROGRAM_TEXEL_OFFSET");
	HX_MARK_MEMBER_NAME(MAX_PROGRAM_TEXEL_OFFSET,"MAX_PROGRAM_TEXEL_OFFSET");
	HX_MARK_MEMBER_NAME(MAX_VARYING_COMPONENTS,"MAX_VARYING_COMPONENTS");
	HX_MARK_MEMBER_NAME(FRAGMENT_SHADER_DERIVATIVE_HINT,"FRAGMENT_SHADER_DERIVATIVE_HINT");
	HX_MARK_MEMBER_NAME(RASTERIZER_DISCARD,"RASTERIZER_DISCARD");
	HX_MARK_MEMBER_NAME(VERTEX_ARRAY_BINDING,"VERTEX_ARRAY_BINDING");
	HX_MARK_MEMBER_NAME(MAX_VERTEX_OUTPUT_COMPONENTS,"MAX_VERTEX_OUTPUT_COMPONENTS");
	HX_MARK_MEMBER_NAME(MAX_FRAGMENT_INPUT_COMPONENTS,"MAX_FRAGMENT_INPUT_COMPONENTS");
	HX_MARK_MEMBER_NAME(MAX_SERVER_WAIT_TIMEOUT,"MAX_SERVER_WAIT_TIMEOUT");
	HX_MARK_MEMBER_NAME(MAX_ELEMENT_INDEX,"MAX_ELEMENT_INDEX");
	HX_MARK_MEMBER_NAME(RED,"RED");
	HX_MARK_MEMBER_NAME(RGB8,"RGB8");
	HX_MARK_MEMBER_NAME(RGBA8,"RGBA8");
	HX_MARK_MEMBER_NAME(RGB10_A2,"RGB10_A2");
	HX_MARK_MEMBER_NAME(TEXTURE_3D,"TEXTURE_3D");
	HX_MARK_MEMBER_NAME(TEXTURE_WRAP_R,"TEXTURE_WRAP_R");
	HX_MARK_MEMBER_NAME(TEXTURE_MIN_LOD,"TEXTURE_MIN_LOD");
	HX_MARK_MEMBER_NAME(TEXTURE_MAX_LOD,"TEXTURE_MAX_LOD");
	HX_MARK_MEMBER_NAME(TEXTURE_BASE_LEVEL,"TEXTURE_BASE_LEVEL");
	HX_MARK_MEMBER_NAME(TEXTURE_MAX_LEVEL,"TEXTURE_MAX_LEVEL");
	HX_MARK_MEMBER_NAME(TEXTURE_COMPARE_MODE,"TEXTURE_COMPARE_MODE");
	HX_MARK_MEMBER_NAME(TEXTURE_COMPARE_FUNC,"TEXTURE_COMPARE_FUNC");
	HX_MARK_MEMBER_NAME(SRGB,"SRGB");
	HX_MARK_MEMBER_NAME(SRGB8,"SRGB8");
	HX_MARK_MEMBER_NAME(SRGB8_ALPHA8,"SRGB8_ALPHA8");
	HX_MARK_MEMBER_NAME(COMPARE_REF_TO_TEXTURE,"COMPARE_REF_TO_TEXTURE");
	HX_MARK_MEMBER_NAME(RGBA32F,"RGBA32F");
	HX_MARK_MEMBER_NAME(RGB32F,"RGB32F");
	HX_MARK_MEMBER_NAME(RGBA16F,"RGBA16F");
	HX_MARK_MEMBER_NAME(RGB16F,"RGB16F");
	HX_MARK_MEMBER_NAME(TEXTURE_2D_ARRAY,"TEXTURE_2D_ARRAY");
	HX_MARK_MEMBER_NAME(TEXTURE_BINDING_2D_ARRAY,"TEXTURE_BINDING_2D_ARRAY");
	HX_MARK_MEMBER_NAME(R11F_G11F_B10F,"R11F_G11F_B10F");
	HX_MARK_MEMBER_NAME(RGB9_E5,"RGB9_E5");
	HX_MARK_MEMBER_NAME(RGBA32UI,"RGBA32UI");
	HX_MARK_MEMBER_NAME(RGB32UI,"RGB32UI");
	HX_MARK_MEMBER_NAME(RGBA16UI,"RGBA16UI");
	HX_MARK_MEMBER_NAME(RGB16UI,"RGB16UI");
	HX_MARK_MEMBER_NAME(RGBA8UI,"RGBA8UI");
	HX_MARK_MEMBER_NAME(RGB8UI,"RGB8UI");
	HX_MARK_MEMBER_NAME(RGBA32I,"RGBA32I");
	HX_MARK_MEMBER_NAME(RGB32I,"RGB32I");
	HX_MARK_MEMBER_NAME(RGBA16I,"RGBA16I");
	HX_MARK_MEMBER_NAME(RGB16I,"RGB16I");
	HX_MARK_MEMBER_NAME(RGBA8I,"RGBA8I");
	HX_MARK_MEMBER_NAME(RGB8I,"RGB8I");
	HX_MARK_MEMBER_NAME(RED_INTEGER,"RED_INTEGER");
	HX_MARK_MEMBER_NAME(RGB_INTEGER,"RGB_INTEGER");
	HX_MARK_MEMBER_NAME(RGBA_INTEGER,"RGBA_INTEGER");
	HX_MARK_MEMBER_NAME(R8,"R8");
	HX_MARK_MEMBER_NAME(RG8,"RG8");
	HX_MARK_MEMBER_NAME(R16F,"R16F");
	HX_MARK_MEMBER_NAME(R32F,"R32F");
	HX_MARK_MEMBER_NAME(RG16F,"RG16F");
	HX_MARK_MEMBER_NAME(RG32F,"RG32F");
	HX_MARK_MEMBER_NAME(R8I,"R8I");
	HX_MARK_MEMBER_NAME(R8UI,"R8UI");
	HX_MARK_MEMBER_NAME(R16I,"R16I");
	HX_MARK_MEMBER_NAME(R16UI,"R16UI");
	HX_MARK_MEMBER_NAME(R32I,"R32I");
	HX_MARK_MEMBER_NAME(R32UI,"R32UI");
	HX_MARK_MEMBER_NAME(RG8I,"RG8I");
	HX_MARK_MEMBER_NAME(RG8UI,"RG8UI");
	HX_MARK_MEMBER_NAME(RG16I,"RG16I");
	HX_MARK_MEMBER_NAME(RG16UI,"RG16UI");
	HX_MARK_MEMBER_NAME(RG32I,"RG32I");
	HX_MARK_MEMBER_NAME(RG32UI,"RG32UI");
	HX_MARK_MEMBER_NAME(R8_SNORM,"R8_SNORM");
	HX_MARK_MEMBER_NAME(RG8_SNORM,"RG8_SNORM");
	HX_MARK_MEMBER_NAME(RGB8_SNORM,"RGB8_SNORM");
	HX_MARK_MEMBER_NAME(RGBA8_SNORM,"RGBA8_SNORM");
	HX_MARK_MEMBER_NAME(RGB10_A2UI,"RGB10_A2UI");
	HX_MARK_MEMBER_NAME(TEXTURE_IMMUTABLE_FORMAT,"TEXTURE_IMMUTABLE_FORMAT");
	HX_MARK_MEMBER_NAME(TEXTURE_IMMUTABLE_LEVELS,"TEXTURE_IMMUTABLE_LEVELS");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT_2_10_10_10_REV,"UNSIGNED_INT_2_10_10_10_REV");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT_10F_11F_11F_REV,"UNSIGNED_INT_10F_11F_11F_REV");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT_5_9_9_9_REV,"UNSIGNED_INT_5_9_9_9_REV");
	HX_MARK_MEMBER_NAME(FLOAT_32_UNSIGNED_INT_24_8_REV,"FLOAT_32_UNSIGNED_INT_24_8_REV");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT_24_8,"UNSIGNED_INT_24_8");
	HX_MARK_MEMBER_NAME(HALF_FLOAT,"HALF_FLOAT");
	HX_MARK_MEMBER_NAME(RG,"RG");
	HX_MARK_MEMBER_NAME(RG_INTEGER,"RG_INTEGER");
	HX_MARK_MEMBER_NAME(INT_2_10_10_10_REV,"INT_2_10_10_10_REV");
	HX_MARK_MEMBER_NAME(CURRENT_QUERY,"CURRENT_QUERY");
	HX_MARK_MEMBER_NAME(QUERY_RESULT,"QUERY_RESULT");
	HX_MARK_MEMBER_NAME(QUERY_RESULT_AVAILABLE,"QUERY_RESULT_AVAILABLE");
	HX_MARK_MEMBER_NAME(ANY_SAMPLES_PASSED,"ANY_SAMPLES_PASSED");
	HX_MARK_MEMBER_NAME(ANY_SAMPLES_PASSED_CONSERVATIVE,"ANY_SAMPLES_PASSED_CONSERVATIVE");
	HX_MARK_MEMBER_NAME(MAX_DRAW_BUFFERS,"MAX_DRAW_BUFFERS");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER0,"DRAW_BUFFER0");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER1,"DRAW_BUFFER1");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER2,"DRAW_BUFFER2");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER3,"DRAW_BUFFER3");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER4,"DRAW_BUFFER4");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER5,"DRAW_BUFFER5");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER6,"DRAW_BUFFER6");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER7,"DRAW_BUFFER7");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER8,"DRAW_BUFFER8");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER9,"DRAW_BUFFER9");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER10,"DRAW_BUFFER10");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER11,"DRAW_BUFFER11");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER12,"DRAW_BUFFER12");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER13,"DRAW_BUFFER13");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER14,"DRAW_BUFFER14");
	HX_MARK_MEMBER_NAME(DRAW_BUFFER15,"DRAW_BUFFER15");
	HX_MARK_MEMBER_NAME(MAX_COLOR_ATTACHMENTS,"MAX_COLOR_ATTACHMENTS");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT1,"COLOR_ATTACHMENT1");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT2,"COLOR_ATTACHMENT2");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT3,"COLOR_ATTACHMENT3");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT4,"COLOR_ATTACHMENT4");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT5,"COLOR_ATTACHMENT5");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT6,"COLOR_ATTACHMENT6");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT7,"COLOR_ATTACHMENT7");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT8,"COLOR_ATTACHMENT8");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT9,"COLOR_ATTACHMENT9");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT10,"COLOR_ATTACHMENT10");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT11,"COLOR_ATTACHMENT11");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT12,"COLOR_ATTACHMENT12");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT13,"COLOR_ATTACHMENT13");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT14,"COLOR_ATTACHMENT14");
	HX_MARK_MEMBER_NAME(COLOR_ATTACHMENT15,"COLOR_ATTACHMENT15");
	HX_MARK_MEMBER_NAME(SAMPLER_3D,"SAMPLER_3D");
	HX_MARK_MEMBER_NAME(SAMPLER_2D_SHADOW,"SAMPLER_2D_SHADOW");
	HX_MARK_MEMBER_NAME(SAMPLER_2D_ARRAY,"SAMPLER_2D_ARRAY");
	HX_MARK_MEMBER_NAME(SAMPLER_2D_ARRAY_SHADOW,"SAMPLER_2D_ARRAY_SHADOW");
	HX_MARK_MEMBER_NAME(SAMPLER_CUBE_SHADOW,"SAMPLER_CUBE_SHADOW");
	HX_MARK_MEMBER_NAME(INT_SAMPLER_2D,"INT_SAMPLER_2D");
	HX_MARK_MEMBER_NAME(INT_SAMPLER_3D,"INT_SAMPLER_3D");
	HX_MARK_MEMBER_NAME(INT_SAMPLER_CUBE,"INT_SAMPLER_CUBE");
	HX_MARK_MEMBER_NAME(INT_SAMPLER_2D_ARRAY,"INT_SAMPLER_2D_ARRAY");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT_SAMPLER_2D,"UNSIGNED_INT_SAMPLER_2D");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT_SAMPLER_3D,"UNSIGNED_INT_SAMPLER_3D");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT_SAMPLER_CUBE,"UNSIGNED_INT_SAMPLER_CUBE");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT_SAMPLER_2D_ARRAY,"UNSIGNED_INT_SAMPLER_2D_ARRAY");
	HX_MARK_MEMBER_NAME(MAX_SAMPLES,"MAX_SAMPLES");
	HX_MARK_MEMBER_NAME(SAMPLER_BINDING,"SAMPLER_BINDING");
	HX_MARK_MEMBER_NAME(PIXEL_PACK_BUFFER,"PIXEL_PACK_BUFFER");
	HX_MARK_MEMBER_NAME(PIXEL_UNPACK_BUFFER,"PIXEL_UNPACK_BUFFER");
	HX_MARK_MEMBER_NAME(PIXEL_PACK_BUFFER_BINDING,"PIXEL_PACK_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(PIXEL_UNPACK_BUFFER_BINDING,"PIXEL_UNPACK_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(COPY_READ_BUFFER,"COPY_READ_BUFFER");
	HX_MARK_MEMBER_NAME(COPY_WRITE_BUFFER,"COPY_WRITE_BUFFER");
	HX_MARK_MEMBER_NAME(COPY_READ_BUFFER_BINDING,"COPY_READ_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(COPY_WRITE_BUFFER_BINDING,"COPY_WRITE_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(FLOAT_MAT2x3,"FLOAT_MAT2x3");
	HX_MARK_MEMBER_NAME(FLOAT_MAT2x4,"FLOAT_MAT2x4");
	HX_MARK_MEMBER_NAME(FLOAT_MAT3x2,"FLOAT_MAT3x2");
	HX_MARK_MEMBER_NAME(FLOAT_MAT3x4,"FLOAT_MAT3x4");
	HX_MARK_MEMBER_NAME(FLOAT_MAT4x2,"FLOAT_MAT4x2");
	HX_MARK_MEMBER_NAME(FLOAT_MAT4x3,"FLOAT_MAT4x3");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT_VEC2,"UNSIGNED_INT_VEC2");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT_VEC3,"UNSIGNED_INT_VEC3");
	HX_MARK_MEMBER_NAME(UNSIGNED_INT_VEC4,"UNSIGNED_INT_VEC4");
	HX_MARK_MEMBER_NAME(UNSIGNED_NORMALIZED,"UNSIGNED_NORMALIZED");
	HX_MARK_MEMBER_NAME(SIGNED_NORMALIZED,"SIGNED_NORMALIZED");
	HX_MARK_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_INTEGER,"VERTEX_ATTRIB_ARRAY_INTEGER");
	HX_MARK_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_DIVISOR,"VERTEX_ATTRIB_ARRAY_DIVISOR");
	HX_MARK_MEMBER_NAME(TRANSFORM_FEEDBACK_BUFFER_MODE,"TRANSFORM_FEEDBACK_BUFFER_MODE");
	HX_MARK_MEMBER_NAME(MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS");
	HX_MARK_MEMBER_NAME(TRANSFORM_FEEDBACK_VARYINGS,"TRANSFORM_FEEDBACK_VARYINGS");
	HX_MARK_MEMBER_NAME(TRANSFORM_FEEDBACK_BUFFER_START,"TRANSFORM_FEEDBACK_BUFFER_START");
	HX_MARK_MEMBER_NAME(TRANSFORM_FEEDBACK_BUFFER_SIZE,"TRANSFORM_FEEDBACK_BUFFER_SIZE");
	HX_MARK_MEMBER_NAME(TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN");
	HX_MARK_MEMBER_NAME(MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS");
	HX_MARK_MEMBER_NAME(MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS");
	HX_MARK_MEMBER_NAME(INTERLEAVED_ATTRIBS,"INTERLEAVED_ATTRIBS");
	HX_MARK_MEMBER_NAME(SEPARATE_ATTRIBS,"SEPARATE_ATTRIBS");
	HX_MARK_MEMBER_NAME(TRANSFORM_FEEDBACK_BUFFER,"TRANSFORM_FEEDBACK_BUFFER");
	HX_MARK_MEMBER_NAME(TRANSFORM_FEEDBACK_BUFFER_BINDING,"TRANSFORM_FEEDBACK_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(TRANSFORM_FEEDBACK,"TRANSFORM_FEEDBACK");
	HX_MARK_MEMBER_NAME(TRANSFORM_FEEDBACK_PAUSED,"TRANSFORM_FEEDBACK_PAUSED");
	HX_MARK_MEMBER_NAME(TRANSFORM_FEEDBACK_ACTIVE,"TRANSFORM_FEEDBACK_ACTIVE");
	HX_MARK_MEMBER_NAME(TRANSFORM_FEEDBACK_BINDING,"TRANSFORM_FEEDBACK_BINDING");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_RED_SIZE,"FRAMEBUFFER_ATTACHMENT_RED_SIZE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_GREEN_SIZE,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_BLUE_SIZE,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_DEFAULT,"FRAMEBUFFER_DEFAULT");
	HX_MARK_MEMBER_NAME(DEPTH24_STENCIL8,"DEPTH24_STENCIL8");
	HX_MARK_MEMBER_NAME(DRAW_FRAMEBUFFER_BINDING,"DRAW_FRAMEBUFFER_BINDING");
	HX_MARK_MEMBER_NAME(READ_FRAMEBUFFER,"READ_FRAMEBUFFER");
	HX_MARK_MEMBER_NAME(DRAW_FRAMEBUFFER,"DRAW_FRAMEBUFFER");
	HX_MARK_MEMBER_NAME(READ_FRAMEBUFFER_BINDING,"READ_FRAMEBUFFER_BINDING");
	HX_MARK_MEMBER_NAME(RENDERBUFFER_SAMPLES,"RENDERBUFFER_SAMPLES");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER");
	HX_MARK_MEMBER_NAME(FRAMEBUFFER_INCOMPLETE_MULTISAMPLE,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE");
	HX_MARK_MEMBER_NAME(UNIFORM_BUFFER,"UNIFORM_BUFFER");
	HX_MARK_MEMBER_NAME(UNIFORM_BUFFER_BINDING,"UNIFORM_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(UNIFORM_BUFFER_START,"UNIFORM_BUFFER_START");
	HX_MARK_MEMBER_NAME(UNIFORM_BUFFER_SIZE,"UNIFORM_BUFFER_SIZE");
	HX_MARK_MEMBER_NAME(MAX_VERTEX_UNIFORM_BLOCKS,"MAX_VERTEX_UNIFORM_BLOCKS");
	HX_MARK_MEMBER_NAME(MAX_FRAGMENT_UNIFORM_BLOCKS,"MAX_FRAGMENT_UNIFORM_BLOCKS");
	HX_MARK_MEMBER_NAME(MAX_COMBINED_UNIFORM_BLOCKS,"MAX_COMBINED_UNIFORM_BLOCKS");
	HX_MARK_MEMBER_NAME(MAX_UNIFORM_BUFFER_BINDINGS,"MAX_UNIFORM_BUFFER_BINDINGS");
	HX_MARK_MEMBER_NAME(MAX_UNIFORM_BLOCK_SIZE,"MAX_UNIFORM_BLOCK_SIZE");
	HX_MARK_MEMBER_NAME(MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS");
	HX_MARK_MEMBER_NAME(MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS");
	HX_MARK_MEMBER_NAME(UNIFORM_BUFFER_OFFSET_ALIGNMENT,"UNIFORM_BUFFER_OFFSET_ALIGNMENT");
	HX_MARK_MEMBER_NAME(ACTIVE_UNIFORM_BLOCKS,"ACTIVE_UNIFORM_BLOCKS");
	HX_MARK_MEMBER_NAME(UNIFORM_TYPE,"UNIFORM_TYPE");
	HX_MARK_MEMBER_NAME(UNIFORM_SIZE,"UNIFORM_SIZE");
	HX_MARK_MEMBER_NAME(UNIFORM_BLOCK_INDEX,"UNIFORM_BLOCK_INDEX");
	HX_MARK_MEMBER_NAME(UNIFORM_OFFSET,"UNIFORM_OFFSET");
	HX_MARK_MEMBER_NAME(UNIFORM_ARRAY_STRIDE,"UNIFORM_ARRAY_STRIDE");
	HX_MARK_MEMBER_NAME(UNIFORM_MATRIX_STRIDE,"UNIFORM_MATRIX_STRIDE");
	HX_MARK_MEMBER_NAME(UNIFORM_IS_ROW_MAJOR,"UNIFORM_IS_ROW_MAJOR");
	HX_MARK_MEMBER_NAME(UNIFORM_BLOCK_BINDING,"UNIFORM_BLOCK_BINDING");
	HX_MARK_MEMBER_NAME(UNIFORM_BLOCK_DATA_SIZE,"UNIFORM_BLOCK_DATA_SIZE");
	HX_MARK_MEMBER_NAME(UNIFORM_BLOCK_ACTIVE_UNIFORMS,"UNIFORM_BLOCK_ACTIVE_UNIFORMS");
	HX_MARK_MEMBER_NAME(UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES");
	HX_MARK_MEMBER_NAME(UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER");
	HX_MARK_MEMBER_NAME(UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER");
	HX_MARK_MEMBER_NAME(OBJECT_TYPE,"OBJECT_TYPE");
	HX_MARK_MEMBER_NAME(SYNC_CONDITION,"SYNC_CONDITION");
	HX_MARK_MEMBER_NAME(SYNC_STATUS,"SYNC_STATUS");
	HX_MARK_MEMBER_NAME(SYNC_FLAGS,"SYNC_FLAGS");
	HX_MARK_MEMBER_NAME(SYNC_FENCE,"SYNC_FENCE");
	HX_MARK_MEMBER_NAME(SYNC_GPU_COMMANDS_COMPLETE,"SYNC_GPU_COMMANDS_COMPLETE");
	HX_MARK_MEMBER_NAME(UNSIGNALED,"UNSIGNALED");
	HX_MARK_MEMBER_NAME(SIGNALED,"SIGNALED");
	HX_MARK_MEMBER_NAME(ALREADY_SIGNALED,"ALREADY_SIGNALED");
	HX_MARK_MEMBER_NAME(TIMEOUT_EXPIRED,"TIMEOUT_EXPIRED");
	HX_MARK_MEMBER_NAME(CONDITION_SATISFIED,"CONDITION_SATISFIED");
	HX_MARK_MEMBER_NAME(WAIT_FAILED,"WAIT_FAILED");
	HX_MARK_MEMBER_NAME(SYNC_FLUSH_COMMANDS_BIT,"SYNC_FLUSH_COMMANDS_BIT");
	HX_MARK_MEMBER_NAME(COLOR,"COLOR");
	HX_MARK_MEMBER_NAME(DEPTH,"DEPTH");
	HX_MARK_MEMBER_NAME(STENCIL,"STENCIL");
	HX_MARK_MEMBER_NAME(MIN,"MIN");
	HX_MARK_MEMBER_NAME(MAX,"MAX");
	HX_MARK_MEMBER_NAME(DEPTH_COMPONENT24,"DEPTH_COMPONENT24");
	HX_MARK_MEMBER_NAME(STREAM_READ,"STREAM_READ");
	HX_MARK_MEMBER_NAME(STREAM_COPY,"STREAM_COPY");
	HX_MARK_MEMBER_NAME(STATIC_READ,"STATIC_READ");
	HX_MARK_MEMBER_NAME(STATIC_COPY,"STATIC_COPY");
	HX_MARK_MEMBER_NAME(DYNAMIC_READ,"DYNAMIC_READ");
	HX_MARK_MEMBER_NAME(DYNAMIC_COPY,"DYNAMIC_COPY");
	HX_MARK_MEMBER_NAME(DEPTH_COMPONENT32F,"DEPTH_COMPONENT32F");
	HX_MARK_MEMBER_NAME(DEPTH32F_STENCIL8,"DEPTH32F_STENCIL8");
	HX_MARK_MEMBER_NAME(INVALID_INDEX,"INVALID_INDEX");
	HX_MARK_MEMBER_NAME(TIMEOUT_IGNORED,"TIMEOUT_IGNORED");
	HX_MARK_MEMBER_NAME(MAX_CLIENT_WAIT_TIMEOUT_WEBGL,"MAX_CLIENT_WAIT_TIMEOUT_WEBGL");
	HX_MARK_MEMBER_NAME(type,"type");
	HX_MARK_MEMBER_NAME(version,"version");
	HX_MARK_MEMBER_NAME(_hx___arrayBufferBinding,"__arrayBufferBinding");
	HX_MARK_MEMBER_NAME(_hx___elementBufferBinding,"__elementBufferBinding");
	HX_MARK_MEMBER_NAME(_hx___contextID,"__contextID");
	HX_MARK_MEMBER_NAME(_hx___currentProgram,"__currentProgram");
	HX_MARK_MEMBER_NAME(_hx___framebufferBinding,"__framebufferBinding");
	HX_MARK_MEMBER_NAME(_hx___initialized,"__initialized");
	HX_MARK_MEMBER_NAME(_hx___isContextLost,"__isContextLost");
	HX_MARK_MEMBER_NAME(_hx___renderbufferBinding,"__renderbufferBinding");
	HX_MARK_MEMBER_NAME(_hx___texture2DBinding,"__texture2DBinding");
	HX_MARK_MEMBER_NAME(_hx___textureCubeMapBinding,"__textureCubeMapBinding");
	HX_MARK_END_CLASS();
}

void NativeOpenGLRenderContext_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(DEPTH_BUFFER_BIT,"DEPTH_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(STENCIL_BUFFER_BIT,"STENCIL_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(COLOR_BUFFER_BIT,"COLOR_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(POINTS,"POINTS");
	HX_VISIT_MEMBER_NAME(LINES,"LINES");
	HX_VISIT_MEMBER_NAME(LINE_LOOP,"LINE_LOOP");
	HX_VISIT_MEMBER_NAME(LINE_STRIP,"LINE_STRIP");
	HX_VISIT_MEMBER_NAME(TRIANGLES,"TRIANGLES");
	HX_VISIT_MEMBER_NAME(TRIANGLE_STRIP,"TRIANGLE_STRIP");
	HX_VISIT_MEMBER_NAME(TRIANGLE_FAN,"TRIANGLE_FAN");
	HX_VISIT_MEMBER_NAME(ZERO,"ZERO");
	HX_VISIT_MEMBER_NAME(ONE,"ONE");
	HX_VISIT_MEMBER_NAME(SRC_COLOR,"SRC_COLOR");
	HX_VISIT_MEMBER_NAME(ONE_MINUS_SRC_COLOR,"ONE_MINUS_SRC_COLOR");
	HX_VISIT_MEMBER_NAME(SRC_ALPHA,"SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(ONE_MINUS_SRC_ALPHA,"ONE_MINUS_SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(DST_ALPHA,"DST_ALPHA");
	HX_VISIT_MEMBER_NAME(ONE_MINUS_DST_ALPHA,"ONE_MINUS_DST_ALPHA");
	HX_VISIT_MEMBER_NAME(DST_COLOR,"DST_COLOR");
	HX_VISIT_MEMBER_NAME(ONE_MINUS_DST_COLOR,"ONE_MINUS_DST_COLOR");
	HX_VISIT_MEMBER_NAME(SRC_ALPHA_SATURATE,"SRC_ALPHA_SATURATE");
	HX_VISIT_MEMBER_NAME(FUNC_ADD,"FUNC_ADD");
	HX_VISIT_MEMBER_NAME(BLEND_EQUATION,"BLEND_EQUATION");
	HX_VISIT_MEMBER_NAME(BLEND_EQUATION_RGB,"BLEND_EQUATION_RGB");
	HX_VISIT_MEMBER_NAME(BLEND_EQUATION_ALPHA,"BLEND_EQUATION_ALPHA");
	HX_VISIT_MEMBER_NAME(FUNC_SUBTRACT,"FUNC_SUBTRACT");
	HX_VISIT_MEMBER_NAME(FUNC_REVERSE_SUBTRACT,"FUNC_REVERSE_SUBTRACT");
	HX_VISIT_MEMBER_NAME(BLEND_DST_RGB,"BLEND_DST_RGB");
	HX_VISIT_MEMBER_NAME(BLEND_SRC_RGB,"BLEND_SRC_RGB");
	HX_VISIT_MEMBER_NAME(BLEND_DST_ALPHA,"BLEND_DST_ALPHA");
	HX_VISIT_MEMBER_NAME(BLEND_SRC_ALPHA,"BLEND_SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(CONSTANT_COLOR,"CONSTANT_COLOR");
	HX_VISIT_MEMBER_NAME(ONE_MINUS_CONSTANT_COLOR,"ONE_MINUS_CONSTANT_COLOR");
	HX_VISIT_MEMBER_NAME(CONSTANT_ALPHA,"CONSTANT_ALPHA");
	HX_VISIT_MEMBER_NAME(ONE_MINUS_CONSTANT_ALPHA,"ONE_MINUS_CONSTANT_ALPHA");
	HX_VISIT_MEMBER_NAME(BLEND_COLOR,"BLEND_COLOR");
	HX_VISIT_MEMBER_NAME(ARRAY_BUFFER,"ARRAY_BUFFER");
	HX_VISIT_MEMBER_NAME(ELEMENT_ARRAY_BUFFER,"ELEMENT_ARRAY_BUFFER");
	HX_VISIT_MEMBER_NAME(ARRAY_BUFFER_BINDING,"ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(ELEMENT_ARRAY_BUFFER_BINDING,"ELEMENT_ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(STREAM_DRAW,"STREAM_DRAW");
	HX_VISIT_MEMBER_NAME(STATIC_DRAW,"STATIC_DRAW");
	HX_VISIT_MEMBER_NAME(DYNAMIC_DRAW,"DYNAMIC_DRAW");
	HX_VISIT_MEMBER_NAME(BUFFER_SIZE,"BUFFER_SIZE");
	HX_VISIT_MEMBER_NAME(BUFFER_USAGE,"BUFFER_USAGE");
	HX_VISIT_MEMBER_NAME(CURRENT_VERTEX_ATTRIB,"CURRENT_VERTEX_ATTRIB");
	HX_VISIT_MEMBER_NAME(FRONT,"FRONT");
	HX_VISIT_MEMBER_NAME(BACK,"BACK");
	HX_VISIT_MEMBER_NAME(FRONT_AND_BACK,"FRONT_AND_BACK");
	HX_VISIT_MEMBER_NAME(TEXTURE_2D,"TEXTURE_2D");
	HX_VISIT_MEMBER_NAME(CULL_FACE,"CULL_FACE");
	HX_VISIT_MEMBER_NAME(BLEND,"BLEND");
	HX_VISIT_MEMBER_NAME(DITHER,"DITHER");
	HX_VISIT_MEMBER_NAME(STENCIL_TEST,"STENCIL_TEST");
	HX_VISIT_MEMBER_NAME(DEPTH_TEST,"DEPTH_TEST");
	HX_VISIT_MEMBER_NAME(SCISSOR_TEST,"SCISSOR_TEST");
	HX_VISIT_MEMBER_NAME(POLYGON_OFFSET_FILL,"POLYGON_OFFSET_FILL");
	HX_VISIT_MEMBER_NAME(SAMPLE_ALPHA_TO_COVERAGE,"SAMPLE_ALPHA_TO_COVERAGE");
	HX_VISIT_MEMBER_NAME(SAMPLE_COVERAGE,"SAMPLE_COVERAGE");
	HX_VISIT_MEMBER_NAME(NO_ERROR,"NO_ERROR");
	HX_VISIT_MEMBER_NAME(INVALID_ENUM,"INVALID_ENUM");
	HX_VISIT_MEMBER_NAME(INVALID_VALUE,"INVALID_VALUE");
	HX_VISIT_MEMBER_NAME(INVALID_OPERATION,"INVALID_OPERATION");
	HX_VISIT_MEMBER_NAME(OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_VISIT_MEMBER_NAME(CW,"CW");
	HX_VISIT_MEMBER_NAME(CCW,"CCW");
	HX_VISIT_MEMBER_NAME(LINE_WIDTH,"LINE_WIDTH");
	HX_VISIT_MEMBER_NAME(ALIASED_POINT_SIZE_RANGE,"ALIASED_POINT_SIZE_RANGE");
	HX_VISIT_MEMBER_NAME(ALIASED_LINE_WIDTH_RANGE,"ALIASED_LINE_WIDTH_RANGE");
	HX_VISIT_MEMBER_NAME(CULL_FACE_MODE,"CULL_FACE_MODE");
	HX_VISIT_MEMBER_NAME(FRONT_FACE,"FRONT_FACE");
	HX_VISIT_MEMBER_NAME(DEPTH_RANGE,"DEPTH_RANGE");
	HX_VISIT_MEMBER_NAME(DEPTH_WRITEMASK,"DEPTH_WRITEMASK");
	HX_VISIT_MEMBER_NAME(DEPTH_CLEAR_VALUE,"DEPTH_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(DEPTH_FUNC,"DEPTH_FUNC");
	HX_VISIT_MEMBER_NAME(STENCIL_CLEAR_VALUE,"STENCIL_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(STENCIL_FUNC,"STENCIL_FUNC");
	HX_VISIT_MEMBER_NAME(STENCIL_FAIL,"STENCIL_FAIL");
	HX_VISIT_MEMBER_NAME(STENCIL_PASS_DEPTH_FAIL,"STENCIL_PASS_DEPTH_FAIL");
	HX_VISIT_MEMBER_NAME(STENCIL_PASS_DEPTH_PASS,"STENCIL_PASS_DEPTH_PASS");
	HX_VISIT_MEMBER_NAME(STENCIL_REF,"STENCIL_REF");
	HX_VISIT_MEMBER_NAME(STENCIL_VALUE_MASK,"STENCIL_VALUE_MASK");
	HX_VISIT_MEMBER_NAME(STENCIL_WRITEMASK,"STENCIL_WRITEMASK");
	HX_VISIT_MEMBER_NAME(STENCIL_BACK_FUNC,"STENCIL_BACK_FUNC");
	HX_VISIT_MEMBER_NAME(STENCIL_BACK_FAIL,"STENCIL_BACK_FAIL");
	HX_VISIT_MEMBER_NAME(STENCIL_BACK_PASS_DEPTH_FAIL,"STENCIL_BACK_PASS_DEPTH_FAIL");
	HX_VISIT_MEMBER_NAME(STENCIL_BACK_PASS_DEPTH_PASS,"STENCIL_BACK_PASS_DEPTH_PASS");
	HX_VISIT_MEMBER_NAME(STENCIL_BACK_REF,"STENCIL_BACK_REF");
	HX_VISIT_MEMBER_NAME(STENCIL_BACK_VALUE_MASK,"STENCIL_BACK_VALUE_MASK");
	HX_VISIT_MEMBER_NAME(STENCIL_BACK_WRITEMASK,"STENCIL_BACK_WRITEMASK");
	HX_VISIT_MEMBER_NAME(VIEWPORT,"VIEWPORT");
	HX_VISIT_MEMBER_NAME(SCISSOR_BOX,"SCISSOR_BOX");
	HX_VISIT_MEMBER_NAME(COLOR_CLEAR_VALUE,"COLOR_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(COLOR_WRITEMASK,"COLOR_WRITEMASK");
	HX_VISIT_MEMBER_NAME(UNPACK_ALIGNMENT,"UNPACK_ALIGNMENT");
	HX_VISIT_MEMBER_NAME(PACK_ALIGNMENT,"PACK_ALIGNMENT");
	HX_VISIT_MEMBER_NAME(MAX_TEXTURE_SIZE,"MAX_TEXTURE_SIZE");
	HX_VISIT_MEMBER_NAME(MAX_VIEWPORT_DIMS,"MAX_VIEWPORT_DIMS");
	HX_VISIT_MEMBER_NAME(SUBPIXEL_BITS,"SUBPIXEL_BITS");
	HX_VISIT_MEMBER_NAME(RED_BITS,"RED_BITS");
	HX_VISIT_MEMBER_NAME(GREEN_BITS,"GREEN_BITS");
	HX_VISIT_MEMBER_NAME(BLUE_BITS,"BLUE_BITS");
	HX_VISIT_MEMBER_NAME(ALPHA_BITS,"ALPHA_BITS");
	HX_VISIT_MEMBER_NAME(DEPTH_BITS,"DEPTH_BITS");
	HX_VISIT_MEMBER_NAME(STENCIL_BITS,"STENCIL_BITS");
	HX_VISIT_MEMBER_NAME(POLYGON_OFFSET_UNITS,"POLYGON_OFFSET_UNITS");
	HX_VISIT_MEMBER_NAME(POLYGON_OFFSET_FACTOR,"POLYGON_OFFSET_FACTOR");
	HX_VISIT_MEMBER_NAME(TEXTURE_BINDING_2D,"TEXTURE_BINDING_2D");
	HX_VISIT_MEMBER_NAME(SAMPLE_BUFFERS,"SAMPLE_BUFFERS");
	HX_VISIT_MEMBER_NAME(SAMPLES,"SAMPLES");
	HX_VISIT_MEMBER_NAME(SAMPLE_COVERAGE_VALUE,"SAMPLE_COVERAGE_VALUE");
	HX_VISIT_MEMBER_NAME(SAMPLE_COVERAGE_INVERT,"SAMPLE_COVERAGE_INVERT");
	HX_VISIT_MEMBER_NAME(NUM_COMPRESSED_TEXTURE_FORMATS,"NUM_COMPRESSED_TEXTURE_FORMATS");
	HX_VISIT_MEMBER_NAME(COMPRESSED_TEXTURE_FORMATS,"COMPRESSED_TEXTURE_FORMATS");
	HX_VISIT_MEMBER_NAME(DONT_CARE,"DONT_CARE");
	HX_VISIT_MEMBER_NAME(FASTEST,"FASTEST");
	HX_VISIT_MEMBER_NAME(NICEST,"NICEST");
	HX_VISIT_MEMBER_NAME(GENERATE_MIPMAP_HINT,"GENERATE_MIPMAP_HINT");
	HX_VISIT_MEMBER_NAME(BYTE,"BYTE");
	HX_VISIT_MEMBER_NAME(UNSIGNED_BYTE,"UNSIGNED_BYTE");
	HX_VISIT_MEMBER_NAME(SHORT,"SHORT");
	HX_VISIT_MEMBER_NAME(UNSIGNED_SHORT,"UNSIGNED_SHORT");
	HX_VISIT_MEMBER_NAME(INT,"INT");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT,"UNSIGNED_INT");
	HX_VISIT_MEMBER_NAME(FLOAT,"FLOAT");
	HX_VISIT_MEMBER_NAME(FIXED,"FIXED");
	HX_VISIT_MEMBER_NAME(DEPTH_COMPONENT,"DEPTH_COMPONENT");
	HX_VISIT_MEMBER_NAME(ALPHA,"ALPHA");
	HX_VISIT_MEMBER_NAME(RGB,"RGB");
	HX_VISIT_MEMBER_NAME(RGBA,"RGBA");
	HX_VISIT_MEMBER_NAME(LUMINANCE,"LUMINANCE");
	HX_VISIT_MEMBER_NAME(LUMINANCE_ALPHA,"LUMINANCE_ALPHA");
	HX_VISIT_MEMBER_NAME(UNSIGNED_SHORT_4_4_4_4,"UNSIGNED_SHORT_4_4_4_4");
	HX_VISIT_MEMBER_NAME(UNSIGNED_SHORT_5_5_5_1,"UNSIGNED_SHORT_5_5_5_1");
	HX_VISIT_MEMBER_NAME(UNSIGNED_SHORT_5_6_5,"UNSIGNED_SHORT_5_6_5");
	HX_VISIT_MEMBER_NAME(FRAGMENT_SHADER,"FRAGMENT_SHADER");
	HX_VISIT_MEMBER_NAME(VERTEX_SHADER,"VERTEX_SHADER");
	HX_VISIT_MEMBER_NAME(MAX_VERTEX_ATTRIBS,"MAX_VERTEX_ATTRIBS");
	HX_VISIT_MEMBER_NAME(MAX_VERTEX_UNIFORM_VECTORS,"MAX_VERTEX_UNIFORM_VECTORS");
	HX_VISIT_MEMBER_NAME(MAX_VARYING_VECTORS,"MAX_VARYING_VECTORS");
	HX_VISIT_MEMBER_NAME(MAX_COMBINED_TEXTURE_IMAGE_UNITS,"MAX_COMBINED_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(MAX_VERTEX_TEXTURE_IMAGE_UNITS,"MAX_VERTEX_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(MAX_TEXTURE_IMAGE_UNITS,"MAX_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(MAX_FRAGMENT_UNIFORM_VECTORS,"MAX_FRAGMENT_UNIFORM_VECTORS");
	HX_VISIT_MEMBER_NAME(SHADER_TYPE,"SHADER_TYPE");
	HX_VISIT_MEMBER_NAME(DELETE_STATUS,"DELETE_STATUS");
	HX_VISIT_MEMBER_NAME(LINK_STATUS,"LINK_STATUS");
	HX_VISIT_MEMBER_NAME(VALIDATE_STATUS,"VALIDATE_STATUS");
	HX_VISIT_MEMBER_NAME(ATTACHED_SHADERS,"ATTACHED_SHADERS");
	HX_VISIT_MEMBER_NAME(ACTIVE_UNIFORMS,"ACTIVE_UNIFORMS");
	HX_VISIT_MEMBER_NAME(ACTIVE_UNIFORMS_MAX_LENGTH,"ACTIVE_UNIFORMS_MAX_LENGTH");
	HX_VISIT_MEMBER_NAME(ACTIVE_ATTRIBUTES,"ACTIVE_ATTRIBUTES");
	HX_VISIT_MEMBER_NAME(ACTIVE_ATTRIBUTES_MAX_LENGTH,"ACTIVE_ATTRIBUTES_MAX_LENGTH");
	HX_VISIT_MEMBER_NAME(SHADING_LANGUAGE_VERSION,"SHADING_LANGUAGE_VERSION");
	HX_VISIT_MEMBER_NAME(CURRENT_PROGRAM,"CURRENT_PROGRAM");
	HX_VISIT_MEMBER_NAME(NEVER,"NEVER");
	HX_VISIT_MEMBER_NAME(LESS,"LESS");
	HX_VISIT_MEMBER_NAME(EQUAL,"EQUAL");
	HX_VISIT_MEMBER_NAME(LEQUAL,"LEQUAL");
	HX_VISIT_MEMBER_NAME(GREATER,"GREATER");
	HX_VISIT_MEMBER_NAME(NOTEQUAL,"NOTEQUAL");
	HX_VISIT_MEMBER_NAME(GEQUAL,"GEQUAL");
	HX_VISIT_MEMBER_NAME(ALWAYS,"ALWAYS");
	HX_VISIT_MEMBER_NAME(KEEP,"KEEP");
	HX_VISIT_MEMBER_NAME(REPLACE,"REPLACE");
	HX_VISIT_MEMBER_NAME(INCR,"INCR");
	HX_VISIT_MEMBER_NAME(DECR,"DECR");
	HX_VISIT_MEMBER_NAME(INVERT,"INVERT");
	HX_VISIT_MEMBER_NAME(INCR_WRAP,"INCR_WRAP");
	HX_VISIT_MEMBER_NAME(DECR_WRAP,"DECR_WRAP");
	HX_VISIT_MEMBER_NAME(VENDOR,"VENDOR");
	HX_VISIT_MEMBER_NAME(RENDERER,"RENDERER");
	HX_VISIT_MEMBER_NAME(VERSION,"VERSION");
	HX_VISIT_MEMBER_NAME(EXTENSIONS,"EXTENSIONS");
	HX_VISIT_MEMBER_NAME(NEAREST,"NEAREST");
	HX_VISIT_MEMBER_NAME(LINEAR,"LINEAR");
	HX_VISIT_MEMBER_NAME(NEAREST_MIPMAP_NEAREST,"NEAREST_MIPMAP_NEAREST");
	HX_VISIT_MEMBER_NAME(LINEAR_MIPMAP_NEAREST,"LINEAR_MIPMAP_NEAREST");
	HX_VISIT_MEMBER_NAME(NEAREST_MIPMAP_LINEAR,"NEAREST_MIPMAP_LINEAR");
	HX_VISIT_MEMBER_NAME(LINEAR_MIPMAP_LINEAR,"LINEAR_MIPMAP_LINEAR");
	HX_VISIT_MEMBER_NAME(TEXTURE_MAG_FILTER,"TEXTURE_MAG_FILTER");
	HX_VISIT_MEMBER_NAME(TEXTURE_MIN_FILTER,"TEXTURE_MIN_FILTER");
	HX_VISIT_MEMBER_NAME(TEXTURE_WRAP_S,"TEXTURE_WRAP_S");
	HX_VISIT_MEMBER_NAME(TEXTURE_WRAP_T,"TEXTURE_WRAP_T");
	HX_VISIT_MEMBER_NAME(TEXTURE,"TEXTURE");
	HX_VISIT_MEMBER_NAME(TEXTURE_CUBE_MAP,"TEXTURE_CUBE_MAP");
	HX_VISIT_MEMBER_NAME(TEXTURE_BINDING_CUBE_MAP,"TEXTURE_BINDING_CUBE_MAP");
	HX_VISIT_MEMBER_NAME(TEXTURE_CUBE_MAP_POSITIVE_X,"TEXTURE_CUBE_MAP_POSITIVE_X");
	HX_VISIT_MEMBER_NAME(TEXTURE_CUBE_MAP_NEGATIVE_X,"TEXTURE_CUBE_MAP_NEGATIVE_X");
	HX_VISIT_MEMBER_NAME(TEXTURE_CUBE_MAP_POSITIVE_Y,"TEXTURE_CUBE_MAP_POSITIVE_Y");
	HX_VISIT_MEMBER_NAME(TEXTURE_CUBE_MAP_NEGATIVE_Y,"TEXTURE_CUBE_MAP_NEGATIVE_Y");
	HX_VISIT_MEMBER_NAME(TEXTURE_CUBE_MAP_POSITIVE_Z,"TEXTURE_CUBE_MAP_POSITIVE_Z");
	HX_VISIT_MEMBER_NAME(TEXTURE_CUBE_MAP_NEGATIVE_Z,"TEXTURE_CUBE_MAP_NEGATIVE_Z");
	HX_VISIT_MEMBER_NAME(MAX_CUBE_MAP_TEXTURE_SIZE,"MAX_CUBE_MAP_TEXTURE_SIZE");
	HX_VISIT_MEMBER_NAME(TEXTURE0,"TEXTURE0");
	HX_VISIT_MEMBER_NAME(TEXTURE1,"TEXTURE1");
	HX_VISIT_MEMBER_NAME(TEXTURE2,"TEXTURE2");
	HX_VISIT_MEMBER_NAME(TEXTURE3,"TEXTURE3");
	HX_VISIT_MEMBER_NAME(TEXTURE4,"TEXTURE4");
	HX_VISIT_MEMBER_NAME(TEXTURE5,"TEXTURE5");
	HX_VISIT_MEMBER_NAME(TEXTURE6,"TEXTURE6");
	HX_VISIT_MEMBER_NAME(TEXTURE7,"TEXTURE7");
	HX_VISIT_MEMBER_NAME(TEXTURE8,"TEXTURE8");
	HX_VISIT_MEMBER_NAME(TEXTURE9,"TEXTURE9");
	HX_VISIT_MEMBER_NAME(TEXTURE10,"TEXTURE10");
	HX_VISIT_MEMBER_NAME(TEXTURE11,"TEXTURE11");
	HX_VISIT_MEMBER_NAME(TEXTURE12,"TEXTURE12");
	HX_VISIT_MEMBER_NAME(TEXTURE13,"TEXTURE13");
	HX_VISIT_MEMBER_NAME(TEXTURE14,"TEXTURE14");
	HX_VISIT_MEMBER_NAME(TEXTURE15,"TEXTURE15");
	HX_VISIT_MEMBER_NAME(TEXTURE16,"TEXTURE16");
	HX_VISIT_MEMBER_NAME(TEXTURE17,"TEXTURE17");
	HX_VISIT_MEMBER_NAME(TEXTURE18,"TEXTURE18");
	HX_VISIT_MEMBER_NAME(TEXTURE19,"TEXTURE19");
	HX_VISIT_MEMBER_NAME(TEXTURE20,"TEXTURE20");
	HX_VISIT_MEMBER_NAME(TEXTURE21,"TEXTURE21");
	HX_VISIT_MEMBER_NAME(TEXTURE22,"TEXTURE22");
	HX_VISIT_MEMBER_NAME(TEXTURE23,"TEXTURE23");
	HX_VISIT_MEMBER_NAME(TEXTURE24,"TEXTURE24");
	HX_VISIT_MEMBER_NAME(TEXTURE25,"TEXTURE25");
	HX_VISIT_MEMBER_NAME(TEXTURE26,"TEXTURE26");
	HX_VISIT_MEMBER_NAME(TEXTURE27,"TEXTURE27");
	HX_VISIT_MEMBER_NAME(TEXTURE28,"TEXTURE28");
	HX_VISIT_MEMBER_NAME(TEXTURE29,"TEXTURE29");
	HX_VISIT_MEMBER_NAME(TEXTURE30,"TEXTURE30");
	HX_VISIT_MEMBER_NAME(TEXTURE31,"TEXTURE31");
	HX_VISIT_MEMBER_NAME(ACTIVE_TEXTURE,"ACTIVE_TEXTURE");
	HX_VISIT_MEMBER_NAME(REPEAT,"REPEAT");
	HX_VISIT_MEMBER_NAME(CLAMP_TO_EDGE,"CLAMP_TO_EDGE");
	HX_VISIT_MEMBER_NAME(MIRRORED_REPEAT,"MIRRORED_REPEAT");
	HX_VISIT_MEMBER_NAME(FLOAT_VEC2,"FLOAT_VEC2");
	HX_VISIT_MEMBER_NAME(FLOAT_VEC3,"FLOAT_VEC3");
	HX_VISIT_MEMBER_NAME(FLOAT_VEC4,"FLOAT_VEC4");
	HX_VISIT_MEMBER_NAME(INT_VEC2,"INT_VEC2");
	HX_VISIT_MEMBER_NAME(INT_VEC3,"INT_VEC3");
	HX_VISIT_MEMBER_NAME(INT_VEC4,"INT_VEC4");
	HX_VISIT_MEMBER_NAME(BOOL,"BOOL");
	HX_VISIT_MEMBER_NAME(BOOL_VEC2,"BOOL_VEC2");
	HX_VISIT_MEMBER_NAME(BOOL_VEC3,"BOOL_VEC3");
	HX_VISIT_MEMBER_NAME(BOOL_VEC4,"BOOL_VEC4");
	HX_VISIT_MEMBER_NAME(FLOAT_MAT2,"FLOAT_MAT2");
	HX_VISIT_MEMBER_NAME(FLOAT_MAT3,"FLOAT_MAT3");
	HX_VISIT_MEMBER_NAME(FLOAT_MAT4,"FLOAT_MAT4");
	HX_VISIT_MEMBER_NAME(SAMPLER_2D,"SAMPLER_2D");
	HX_VISIT_MEMBER_NAME(SAMPLER_CUBE,"SAMPLER_CUBE");
	HX_VISIT_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_ENABLED,"VERTEX_ATTRIB_ARRAY_ENABLED");
	HX_VISIT_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_SIZE,"VERTEX_ATTRIB_ARRAY_SIZE");
	HX_VISIT_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_STRIDE,"VERTEX_ATTRIB_ARRAY_STRIDE");
	HX_VISIT_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_TYPE,"VERTEX_ATTRIB_ARRAY_TYPE");
	HX_VISIT_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_NORMALIZED,"VERTEX_ATTRIB_ARRAY_NORMALIZED");
	HX_VISIT_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_POINTER,"VERTEX_ATTRIB_ARRAY_POINTER");
	HX_VISIT_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(IMPLEMENTATION_COLOR_READ_TYPE,"IMPLEMENTATION_COLOR_READ_TYPE");
	HX_VISIT_MEMBER_NAME(IMPLEMENTATION_COLOR_READ_FORMAT,"IMPLEMENTATION_COLOR_READ_FORMAT");
	HX_VISIT_MEMBER_NAME(VERTEX_PROGRAM_POINT_SIZE,"VERTEX_PROGRAM_POINT_SIZE");
	HX_VISIT_MEMBER_NAME(POINT_SPRITE,"POINT_SPRITE");
	HX_VISIT_MEMBER_NAME(COMPILE_STATUS,"COMPILE_STATUS");
	HX_VISIT_MEMBER_NAME(INFO_LOG_LENGTH,"INFO_LOG_LENGTH");
	HX_VISIT_MEMBER_NAME(SHADER_SOURCE_LENGTH,"SHADER_SOURCE_LENGTH");
	HX_VISIT_MEMBER_NAME(SHADER_COMPILER,"SHADER_COMPILER");
	HX_VISIT_MEMBER_NAME(SHADER_BINARY_FORMATS,"SHADER_BINARY_FORMATS");
	HX_VISIT_MEMBER_NAME(NUM_SHADER_BINARY_FORMATS,"NUM_SHADER_BINARY_FORMATS");
	HX_VISIT_MEMBER_NAME(LOW_FLOAT,"LOW_FLOAT");
	HX_VISIT_MEMBER_NAME(MEDIUM_FLOAT,"MEDIUM_FLOAT");
	HX_VISIT_MEMBER_NAME(HIGH_FLOAT,"HIGH_FLOAT");
	HX_VISIT_MEMBER_NAME(LOW_INT,"LOW_INT");
	HX_VISIT_MEMBER_NAME(MEDIUM_INT,"MEDIUM_INT");
	HX_VISIT_MEMBER_NAME(HIGH_INT,"HIGH_INT");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER,"FRAMEBUFFER");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER,"RENDERBUFFER");
	HX_VISIT_MEMBER_NAME(RGBA4,"RGBA4");
	HX_VISIT_MEMBER_NAME(RGB5_A1,"RGB5_A1");
	HX_VISIT_MEMBER_NAME(RGB565,"RGB565");
	HX_VISIT_MEMBER_NAME(DEPTH_COMPONENT16,"DEPTH_COMPONENT16");
	HX_VISIT_MEMBER_NAME(STENCIL_INDEX,"STENCIL_INDEX");
	HX_VISIT_MEMBER_NAME(STENCIL_INDEX8,"STENCIL_INDEX8");
	HX_VISIT_MEMBER_NAME(DEPTH_STENCIL,"DEPTH_STENCIL");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER_WIDTH,"RENDERBUFFER_WIDTH");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER_HEIGHT,"RENDERBUFFER_HEIGHT");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER_INTERNAL_FORMAT,"RENDERBUFFER_INTERNAL_FORMAT");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER_RED_SIZE,"RENDERBUFFER_RED_SIZE");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER_GREEN_SIZE,"RENDERBUFFER_GREEN_SIZE");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER_BLUE_SIZE,"RENDERBUFFER_BLUE_SIZE");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER_ALPHA_SIZE,"RENDERBUFFER_ALPHA_SIZE");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER_DEPTH_SIZE,"RENDERBUFFER_DEPTH_SIZE");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER_STENCIL_SIZE,"RENDERBUFFER_STENCIL_SIZE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT0,"COLOR_ATTACHMENT0");
	HX_VISIT_MEMBER_NAME(DEPTH_ATTACHMENT,"DEPTH_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(STENCIL_ATTACHMENT,"STENCIL_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(DEPTH_STENCIL_ATTACHMENT,"DEPTH_STENCIL_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(NONE,"NONE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_COMPLETE,"FRAMEBUFFER_COMPLETE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_INCOMPLETE_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_INCOMPLETE_DIMENSIONS,"FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_UNSUPPORTED,"FRAMEBUFFER_UNSUPPORTED");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_BINDING,"FRAMEBUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER_BINDING,"RENDERBUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(MAX_RENDERBUFFER_SIZE,"MAX_RENDERBUFFER_SIZE");
	HX_VISIT_MEMBER_NAME(INVALID_FRAMEBUFFER_OPERATION,"INVALID_FRAMEBUFFER_OPERATION");
	HX_VISIT_MEMBER_NAME(UNPACK_FLIP_Y_WEBGL,"UNPACK_FLIP_Y_WEBGL");
	HX_VISIT_MEMBER_NAME(UNPACK_PREMULTIPLY_ALPHA_WEBGL,"UNPACK_PREMULTIPLY_ALPHA_WEBGL");
	HX_VISIT_MEMBER_NAME(CONTEXT_LOST_WEBGL,"CONTEXT_LOST_WEBGL");
	HX_VISIT_MEMBER_NAME(UNPACK_COLORSPACE_CONVERSION_WEBGL,"UNPACK_COLORSPACE_CONVERSION_WEBGL");
	HX_VISIT_MEMBER_NAME(BROWSER_DEFAULT_WEBGL,"BROWSER_DEFAULT_WEBGL");
	HX_VISIT_MEMBER_NAME(READ_BUFFER,"READ_BUFFER");
	HX_VISIT_MEMBER_NAME(UNPACK_ROW_LENGTH,"UNPACK_ROW_LENGTH");
	HX_VISIT_MEMBER_NAME(UNPACK_SKIP_ROWS,"UNPACK_SKIP_ROWS");
	HX_VISIT_MEMBER_NAME(UNPACK_SKIP_PIXELS,"UNPACK_SKIP_PIXELS");
	HX_VISIT_MEMBER_NAME(PACK_ROW_LENGTH,"PACK_ROW_LENGTH");
	HX_VISIT_MEMBER_NAME(PACK_SKIP_ROWS,"PACK_SKIP_ROWS");
	HX_VISIT_MEMBER_NAME(PACK_SKIP_PIXELS,"PACK_SKIP_PIXELS");
	HX_VISIT_MEMBER_NAME(TEXTURE_BINDING_3D,"TEXTURE_BINDING_3D");
	HX_VISIT_MEMBER_NAME(UNPACK_SKIP_IMAGES,"UNPACK_SKIP_IMAGES");
	HX_VISIT_MEMBER_NAME(UNPACK_IMAGE_HEIGHT,"UNPACK_IMAGE_HEIGHT");
	HX_VISIT_MEMBER_NAME(MAX_3D_TEXTURE_SIZE,"MAX_3D_TEXTURE_SIZE");
	HX_VISIT_MEMBER_NAME(MAX_ELEMENTS_VERTICES,"MAX_ELEMENTS_VERTICES");
	HX_VISIT_MEMBER_NAME(MAX_ELEMENTS_INDICES,"MAX_ELEMENTS_INDICES");
	HX_VISIT_MEMBER_NAME(MAX_TEXTURE_LOD_BIAS,"MAX_TEXTURE_LOD_BIAS");
	HX_VISIT_MEMBER_NAME(MAX_FRAGMENT_UNIFORM_COMPONENTS,"MAX_FRAGMENT_UNIFORM_COMPONENTS");
	HX_VISIT_MEMBER_NAME(MAX_VERTEX_UNIFORM_COMPONENTS,"MAX_VERTEX_UNIFORM_COMPONENTS");
	HX_VISIT_MEMBER_NAME(MAX_ARRAY_TEXTURE_LAYERS,"MAX_ARRAY_TEXTURE_LAYERS");
	HX_VISIT_MEMBER_NAME(MIN_PROGRAM_TEXEL_OFFSET,"MIN_PROGRAM_TEXEL_OFFSET");
	HX_VISIT_MEMBER_NAME(MAX_PROGRAM_TEXEL_OFFSET,"MAX_PROGRAM_TEXEL_OFFSET");
	HX_VISIT_MEMBER_NAME(MAX_VARYING_COMPONENTS,"MAX_VARYING_COMPONENTS");
	HX_VISIT_MEMBER_NAME(FRAGMENT_SHADER_DERIVATIVE_HINT,"FRAGMENT_SHADER_DERIVATIVE_HINT");
	HX_VISIT_MEMBER_NAME(RASTERIZER_DISCARD,"RASTERIZER_DISCARD");
	HX_VISIT_MEMBER_NAME(VERTEX_ARRAY_BINDING,"VERTEX_ARRAY_BINDING");
	HX_VISIT_MEMBER_NAME(MAX_VERTEX_OUTPUT_COMPONENTS,"MAX_VERTEX_OUTPUT_COMPONENTS");
	HX_VISIT_MEMBER_NAME(MAX_FRAGMENT_INPUT_COMPONENTS,"MAX_FRAGMENT_INPUT_COMPONENTS");
	HX_VISIT_MEMBER_NAME(MAX_SERVER_WAIT_TIMEOUT,"MAX_SERVER_WAIT_TIMEOUT");
	HX_VISIT_MEMBER_NAME(MAX_ELEMENT_INDEX,"MAX_ELEMENT_INDEX");
	HX_VISIT_MEMBER_NAME(RED,"RED");
	HX_VISIT_MEMBER_NAME(RGB8,"RGB8");
	HX_VISIT_MEMBER_NAME(RGBA8,"RGBA8");
	HX_VISIT_MEMBER_NAME(RGB10_A2,"RGB10_A2");
	HX_VISIT_MEMBER_NAME(TEXTURE_3D,"TEXTURE_3D");
	HX_VISIT_MEMBER_NAME(TEXTURE_WRAP_R,"TEXTURE_WRAP_R");
	HX_VISIT_MEMBER_NAME(TEXTURE_MIN_LOD,"TEXTURE_MIN_LOD");
	HX_VISIT_MEMBER_NAME(TEXTURE_MAX_LOD,"TEXTURE_MAX_LOD");
	HX_VISIT_MEMBER_NAME(TEXTURE_BASE_LEVEL,"TEXTURE_BASE_LEVEL");
	HX_VISIT_MEMBER_NAME(TEXTURE_MAX_LEVEL,"TEXTURE_MAX_LEVEL");
	HX_VISIT_MEMBER_NAME(TEXTURE_COMPARE_MODE,"TEXTURE_COMPARE_MODE");
	HX_VISIT_MEMBER_NAME(TEXTURE_COMPARE_FUNC,"TEXTURE_COMPARE_FUNC");
	HX_VISIT_MEMBER_NAME(SRGB,"SRGB");
	HX_VISIT_MEMBER_NAME(SRGB8,"SRGB8");
	HX_VISIT_MEMBER_NAME(SRGB8_ALPHA8,"SRGB8_ALPHA8");
	HX_VISIT_MEMBER_NAME(COMPARE_REF_TO_TEXTURE,"COMPARE_REF_TO_TEXTURE");
	HX_VISIT_MEMBER_NAME(RGBA32F,"RGBA32F");
	HX_VISIT_MEMBER_NAME(RGB32F,"RGB32F");
	HX_VISIT_MEMBER_NAME(RGBA16F,"RGBA16F");
	HX_VISIT_MEMBER_NAME(RGB16F,"RGB16F");
	HX_VISIT_MEMBER_NAME(TEXTURE_2D_ARRAY,"TEXTURE_2D_ARRAY");
	HX_VISIT_MEMBER_NAME(TEXTURE_BINDING_2D_ARRAY,"TEXTURE_BINDING_2D_ARRAY");
	HX_VISIT_MEMBER_NAME(R11F_G11F_B10F,"R11F_G11F_B10F");
	HX_VISIT_MEMBER_NAME(RGB9_E5,"RGB9_E5");
	HX_VISIT_MEMBER_NAME(RGBA32UI,"RGBA32UI");
	HX_VISIT_MEMBER_NAME(RGB32UI,"RGB32UI");
	HX_VISIT_MEMBER_NAME(RGBA16UI,"RGBA16UI");
	HX_VISIT_MEMBER_NAME(RGB16UI,"RGB16UI");
	HX_VISIT_MEMBER_NAME(RGBA8UI,"RGBA8UI");
	HX_VISIT_MEMBER_NAME(RGB8UI,"RGB8UI");
	HX_VISIT_MEMBER_NAME(RGBA32I,"RGBA32I");
	HX_VISIT_MEMBER_NAME(RGB32I,"RGB32I");
	HX_VISIT_MEMBER_NAME(RGBA16I,"RGBA16I");
	HX_VISIT_MEMBER_NAME(RGB16I,"RGB16I");
	HX_VISIT_MEMBER_NAME(RGBA8I,"RGBA8I");
	HX_VISIT_MEMBER_NAME(RGB8I,"RGB8I");
	HX_VISIT_MEMBER_NAME(RED_INTEGER,"RED_INTEGER");
	HX_VISIT_MEMBER_NAME(RGB_INTEGER,"RGB_INTEGER");
	HX_VISIT_MEMBER_NAME(RGBA_INTEGER,"RGBA_INTEGER");
	HX_VISIT_MEMBER_NAME(R8,"R8");
	HX_VISIT_MEMBER_NAME(RG8,"RG8");
	HX_VISIT_MEMBER_NAME(R16F,"R16F");
	HX_VISIT_MEMBER_NAME(R32F,"R32F");
	HX_VISIT_MEMBER_NAME(RG16F,"RG16F");
	HX_VISIT_MEMBER_NAME(RG32F,"RG32F");
	HX_VISIT_MEMBER_NAME(R8I,"R8I");
	HX_VISIT_MEMBER_NAME(R8UI,"R8UI");
	HX_VISIT_MEMBER_NAME(R16I,"R16I");
	HX_VISIT_MEMBER_NAME(R16UI,"R16UI");
	HX_VISIT_MEMBER_NAME(R32I,"R32I");
	HX_VISIT_MEMBER_NAME(R32UI,"R32UI");
	HX_VISIT_MEMBER_NAME(RG8I,"RG8I");
	HX_VISIT_MEMBER_NAME(RG8UI,"RG8UI");
	HX_VISIT_MEMBER_NAME(RG16I,"RG16I");
	HX_VISIT_MEMBER_NAME(RG16UI,"RG16UI");
	HX_VISIT_MEMBER_NAME(RG32I,"RG32I");
	HX_VISIT_MEMBER_NAME(RG32UI,"RG32UI");
	HX_VISIT_MEMBER_NAME(R8_SNORM,"R8_SNORM");
	HX_VISIT_MEMBER_NAME(RG8_SNORM,"RG8_SNORM");
	HX_VISIT_MEMBER_NAME(RGB8_SNORM,"RGB8_SNORM");
	HX_VISIT_MEMBER_NAME(RGBA8_SNORM,"RGBA8_SNORM");
	HX_VISIT_MEMBER_NAME(RGB10_A2UI,"RGB10_A2UI");
	HX_VISIT_MEMBER_NAME(TEXTURE_IMMUTABLE_FORMAT,"TEXTURE_IMMUTABLE_FORMAT");
	HX_VISIT_MEMBER_NAME(TEXTURE_IMMUTABLE_LEVELS,"TEXTURE_IMMUTABLE_LEVELS");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT_2_10_10_10_REV,"UNSIGNED_INT_2_10_10_10_REV");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT_10F_11F_11F_REV,"UNSIGNED_INT_10F_11F_11F_REV");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT_5_9_9_9_REV,"UNSIGNED_INT_5_9_9_9_REV");
	HX_VISIT_MEMBER_NAME(FLOAT_32_UNSIGNED_INT_24_8_REV,"FLOAT_32_UNSIGNED_INT_24_8_REV");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT_24_8,"UNSIGNED_INT_24_8");
	HX_VISIT_MEMBER_NAME(HALF_FLOAT,"HALF_FLOAT");
	HX_VISIT_MEMBER_NAME(RG,"RG");
	HX_VISIT_MEMBER_NAME(RG_INTEGER,"RG_INTEGER");
	HX_VISIT_MEMBER_NAME(INT_2_10_10_10_REV,"INT_2_10_10_10_REV");
	HX_VISIT_MEMBER_NAME(CURRENT_QUERY,"CURRENT_QUERY");
	HX_VISIT_MEMBER_NAME(QUERY_RESULT,"QUERY_RESULT");
	HX_VISIT_MEMBER_NAME(QUERY_RESULT_AVAILABLE,"QUERY_RESULT_AVAILABLE");
	HX_VISIT_MEMBER_NAME(ANY_SAMPLES_PASSED,"ANY_SAMPLES_PASSED");
	HX_VISIT_MEMBER_NAME(ANY_SAMPLES_PASSED_CONSERVATIVE,"ANY_SAMPLES_PASSED_CONSERVATIVE");
	HX_VISIT_MEMBER_NAME(MAX_DRAW_BUFFERS,"MAX_DRAW_BUFFERS");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER0,"DRAW_BUFFER0");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER1,"DRAW_BUFFER1");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER2,"DRAW_BUFFER2");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER3,"DRAW_BUFFER3");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER4,"DRAW_BUFFER4");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER5,"DRAW_BUFFER5");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER6,"DRAW_BUFFER6");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER7,"DRAW_BUFFER7");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER8,"DRAW_BUFFER8");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER9,"DRAW_BUFFER9");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER10,"DRAW_BUFFER10");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER11,"DRAW_BUFFER11");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER12,"DRAW_BUFFER12");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER13,"DRAW_BUFFER13");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER14,"DRAW_BUFFER14");
	HX_VISIT_MEMBER_NAME(DRAW_BUFFER15,"DRAW_BUFFER15");
	HX_VISIT_MEMBER_NAME(MAX_COLOR_ATTACHMENTS,"MAX_COLOR_ATTACHMENTS");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT1,"COLOR_ATTACHMENT1");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT2,"COLOR_ATTACHMENT2");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT3,"COLOR_ATTACHMENT3");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT4,"COLOR_ATTACHMENT4");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT5,"COLOR_ATTACHMENT5");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT6,"COLOR_ATTACHMENT6");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT7,"COLOR_ATTACHMENT7");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT8,"COLOR_ATTACHMENT8");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT9,"COLOR_ATTACHMENT9");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT10,"COLOR_ATTACHMENT10");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT11,"COLOR_ATTACHMENT11");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT12,"COLOR_ATTACHMENT12");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT13,"COLOR_ATTACHMENT13");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT14,"COLOR_ATTACHMENT14");
	HX_VISIT_MEMBER_NAME(COLOR_ATTACHMENT15,"COLOR_ATTACHMENT15");
	HX_VISIT_MEMBER_NAME(SAMPLER_3D,"SAMPLER_3D");
	HX_VISIT_MEMBER_NAME(SAMPLER_2D_SHADOW,"SAMPLER_2D_SHADOW");
	HX_VISIT_MEMBER_NAME(SAMPLER_2D_ARRAY,"SAMPLER_2D_ARRAY");
	HX_VISIT_MEMBER_NAME(SAMPLER_2D_ARRAY_SHADOW,"SAMPLER_2D_ARRAY_SHADOW");
	HX_VISIT_MEMBER_NAME(SAMPLER_CUBE_SHADOW,"SAMPLER_CUBE_SHADOW");
	HX_VISIT_MEMBER_NAME(INT_SAMPLER_2D,"INT_SAMPLER_2D");
	HX_VISIT_MEMBER_NAME(INT_SAMPLER_3D,"INT_SAMPLER_3D");
	HX_VISIT_MEMBER_NAME(INT_SAMPLER_CUBE,"INT_SAMPLER_CUBE");
	HX_VISIT_MEMBER_NAME(INT_SAMPLER_2D_ARRAY,"INT_SAMPLER_2D_ARRAY");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT_SAMPLER_2D,"UNSIGNED_INT_SAMPLER_2D");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT_SAMPLER_3D,"UNSIGNED_INT_SAMPLER_3D");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT_SAMPLER_CUBE,"UNSIGNED_INT_SAMPLER_CUBE");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT_SAMPLER_2D_ARRAY,"UNSIGNED_INT_SAMPLER_2D_ARRAY");
	HX_VISIT_MEMBER_NAME(MAX_SAMPLES,"MAX_SAMPLES");
	HX_VISIT_MEMBER_NAME(SAMPLER_BINDING,"SAMPLER_BINDING");
	HX_VISIT_MEMBER_NAME(PIXEL_PACK_BUFFER,"PIXEL_PACK_BUFFER");
	HX_VISIT_MEMBER_NAME(PIXEL_UNPACK_BUFFER,"PIXEL_UNPACK_BUFFER");
	HX_VISIT_MEMBER_NAME(PIXEL_PACK_BUFFER_BINDING,"PIXEL_PACK_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(PIXEL_UNPACK_BUFFER_BINDING,"PIXEL_UNPACK_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(COPY_READ_BUFFER,"COPY_READ_BUFFER");
	HX_VISIT_MEMBER_NAME(COPY_WRITE_BUFFER,"COPY_WRITE_BUFFER");
	HX_VISIT_MEMBER_NAME(COPY_READ_BUFFER_BINDING,"COPY_READ_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(COPY_WRITE_BUFFER_BINDING,"COPY_WRITE_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(FLOAT_MAT2x3,"FLOAT_MAT2x3");
	HX_VISIT_MEMBER_NAME(FLOAT_MAT2x4,"FLOAT_MAT2x4");
	HX_VISIT_MEMBER_NAME(FLOAT_MAT3x2,"FLOAT_MAT3x2");
	HX_VISIT_MEMBER_NAME(FLOAT_MAT3x4,"FLOAT_MAT3x4");
	HX_VISIT_MEMBER_NAME(FLOAT_MAT4x2,"FLOAT_MAT4x2");
	HX_VISIT_MEMBER_NAME(FLOAT_MAT4x3,"FLOAT_MAT4x3");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT_VEC2,"UNSIGNED_INT_VEC2");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT_VEC3,"UNSIGNED_INT_VEC3");
	HX_VISIT_MEMBER_NAME(UNSIGNED_INT_VEC4,"UNSIGNED_INT_VEC4");
	HX_VISIT_MEMBER_NAME(UNSIGNED_NORMALIZED,"UNSIGNED_NORMALIZED");
	HX_VISIT_MEMBER_NAME(SIGNED_NORMALIZED,"SIGNED_NORMALIZED");
	HX_VISIT_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_INTEGER,"VERTEX_ATTRIB_ARRAY_INTEGER");
	HX_VISIT_MEMBER_NAME(VERTEX_ATTRIB_ARRAY_DIVISOR,"VERTEX_ATTRIB_ARRAY_DIVISOR");
	HX_VISIT_MEMBER_NAME(TRANSFORM_FEEDBACK_BUFFER_MODE,"TRANSFORM_FEEDBACK_BUFFER_MODE");
	HX_VISIT_MEMBER_NAME(MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS");
	HX_VISIT_MEMBER_NAME(TRANSFORM_FEEDBACK_VARYINGS,"TRANSFORM_FEEDBACK_VARYINGS");
	HX_VISIT_MEMBER_NAME(TRANSFORM_FEEDBACK_BUFFER_START,"TRANSFORM_FEEDBACK_BUFFER_START");
	HX_VISIT_MEMBER_NAME(TRANSFORM_FEEDBACK_BUFFER_SIZE,"TRANSFORM_FEEDBACK_BUFFER_SIZE");
	HX_VISIT_MEMBER_NAME(TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN");
	HX_VISIT_MEMBER_NAME(MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS");
	HX_VISIT_MEMBER_NAME(MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS");
	HX_VISIT_MEMBER_NAME(INTERLEAVED_ATTRIBS,"INTERLEAVED_ATTRIBS");
	HX_VISIT_MEMBER_NAME(SEPARATE_ATTRIBS,"SEPARATE_ATTRIBS");
	HX_VISIT_MEMBER_NAME(TRANSFORM_FEEDBACK_BUFFER,"TRANSFORM_FEEDBACK_BUFFER");
	HX_VISIT_MEMBER_NAME(TRANSFORM_FEEDBACK_BUFFER_BINDING,"TRANSFORM_FEEDBACK_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(TRANSFORM_FEEDBACK,"TRANSFORM_FEEDBACK");
	HX_VISIT_MEMBER_NAME(TRANSFORM_FEEDBACK_PAUSED,"TRANSFORM_FEEDBACK_PAUSED");
	HX_VISIT_MEMBER_NAME(TRANSFORM_FEEDBACK_ACTIVE,"TRANSFORM_FEEDBACK_ACTIVE");
	HX_VISIT_MEMBER_NAME(TRANSFORM_FEEDBACK_BINDING,"TRANSFORM_FEEDBACK_BINDING");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_RED_SIZE,"FRAMEBUFFER_ATTACHMENT_RED_SIZE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_GREEN_SIZE,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_BLUE_SIZE,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_DEFAULT,"FRAMEBUFFER_DEFAULT");
	HX_VISIT_MEMBER_NAME(DEPTH24_STENCIL8,"DEPTH24_STENCIL8");
	HX_VISIT_MEMBER_NAME(DRAW_FRAMEBUFFER_BINDING,"DRAW_FRAMEBUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(READ_FRAMEBUFFER,"READ_FRAMEBUFFER");
	HX_VISIT_MEMBER_NAME(DRAW_FRAMEBUFFER,"DRAW_FRAMEBUFFER");
	HX_VISIT_MEMBER_NAME(READ_FRAMEBUFFER_BINDING,"READ_FRAMEBUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(RENDERBUFFER_SAMPLES,"RENDERBUFFER_SAMPLES");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER");
	HX_VISIT_MEMBER_NAME(FRAMEBUFFER_INCOMPLETE_MULTISAMPLE,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE");
	HX_VISIT_MEMBER_NAME(UNIFORM_BUFFER,"UNIFORM_BUFFER");
	HX_VISIT_MEMBER_NAME(UNIFORM_BUFFER_BINDING,"UNIFORM_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(UNIFORM_BUFFER_START,"UNIFORM_BUFFER_START");
	HX_VISIT_MEMBER_NAME(UNIFORM_BUFFER_SIZE,"UNIFORM_BUFFER_SIZE");
	HX_VISIT_MEMBER_NAME(MAX_VERTEX_UNIFORM_BLOCKS,"MAX_VERTEX_UNIFORM_BLOCKS");
	HX_VISIT_MEMBER_NAME(MAX_FRAGMENT_UNIFORM_BLOCKS,"MAX_FRAGMENT_UNIFORM_BLOCKS");
	HX_VISIT_MEMBER_NAME(MAX_COMBINED_UNIFORM_BLOCKS,"MAX_COMBINED_UNIFORM_BLOCKS");
	HX_VISIT_MEMBER_NAME(MAX_UNIFORM_BUFFER_BINDINGS,"MAX_UNIFORM_BUFFER_BINDINGS");
	HX_VISIT_MEMBER_NAME(MAX_UNIFORM_BLOCK_SIZE,"MAX_UNIFORM_BLOCK_SIZE");
	HX_VISIT_MEMBER_NAME(MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS");
	HX_VISIT_MEMBER_NAME(MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS");
	HX_VISIT_MEMBER_NAME(UNIFORM_BUFFER_OFFSET_ALIGNMENT,"UNIFORM_BUFFER_OFFSET_ALIGNMENT");
	HX_VISIT_MEMBER_NAME(ACTIVE_UNIFORM_BLOCKS,"ACTIVE_UNIFORM_BLOCKS");
	HX_VISIT_MEMBER_NAME(UNIFORM_TYPE,"UNIFORM_TYPE");
	HX_VISIT_MEMBER_NAME(UNIFORM_SIZE,"UNIFORM_SIZE");
	HX_VISIT_MEMBER_NAME(UNIFORM_BLOCK_INDEX,"UNIFORM_BLOCK_INDEX");
	HX_VISIT_MEMBER_NAME(UNIFORM_OFFSET,"UNIFORM_OFFSET");
	HX_VISIT_MEMBER_NAME(UNIFORM_ARRAY_STRIDE,"UNIFORM_ARRAY_STRIDE");
	HX_VISIT_MEMBER_NAME(UNIFORM_MATRIX_STRIDE,"UNIFORM_MATRIX_STRIDE");
	HX_VISIT_MEMBER_NAME(UNIFORM_IS_ROW_MAJOR,"UNIFORM_IS_ROW_MAJOR");
	HX_VISIT_MEMBER_NAME(UNIFORM_BLOCK_BINDING,"UNIFORM_BLOCK_BINDING");
	HX_VISIT_MEMBER_NAME(UNIFORM_BLOCK_DATA_SIZE,"UNIFORM_BLOCK_DATA_SIZE");
	HX_VISIT_MEMBER_NAME(UNIFORM_BLOCK_ACTIVE_UNIFORMS,"UNIFORM_BLOCK_ACTIVE_UNIFORMS");
	HX_VISIT_MEMBER_NAME(UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES");
	HX_VISIT_MEMBER_NAME(UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER");
	HX_VISIT_MEMBER_NAME(UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER");
	HX_VISIT_MEMBER_NAME(OBJECT_TYPE,"OBJECT_TYPE");
	HX_VISIT_MEMBER_NAME(SYNC_CONDITION,"SYNC_CONDITION");
	HX_VISIT_MEMBER_NAME(SYNC_STATUS,"SYNC_STATUS");
	HX_VISIT_MEMBER_NAME(SYNC_FLAGS,"SYNC_FLAGS");
	HX_VISIT_MEMBER_NAME(SYNC_FENCE,"SYNC_FENCE");
	HX_VISIT_MEMBER_NAME(SYNC_GPU_COMMANDS_COMPLETE,"SYNC_GPU_COMMANDS_COMPLETE");
	HX_VISIT_MEMBER_NAME(UNSIGNALED,"UNSIGNALED");
	HX_VISIT_MEMBER_NAME(SIGNALED,"SIGNALED");
	HX_VISIT_MEMBER_NAME(ALREADY_SIGNALED,"ALREADY_SIGNALED");
	HX_VISIT_MEMBER_NAME(TIMEOUT_EXPIRED,"TIMEOUT_EXPIRED");
	HX_VISIT_MEMBER_NAME(CONDITION_SATISFIED,"CONDITION_SATISFIED");
	HX_VISIT_MEMBER_NAME(WAIT_FAILED,"WAIT_FAILED");
	HX_VISIT_MEMBER_NAME(SYNC_FLUSH_COMMANDS_BIT,"SYNC_FLUSH_COMMANDS_BIT");
	HX_VISIT_MEMBER_NAME(COLOR,"COLOR");
	HX_VISIT_MEMBER_NAME(DEPTH,"DEPTH");
	HX_VISIT_MEMBER_NAME(STENCIL,"STENCIL");
	HX_VISIT_MEMBER_NAME(MIN,"MIN");
	HX_VISIT_MEMBER_NAME(MAX,"MAX");
	HX_VISIT_MEMBER_NAME(DEPTH_COMPONENT24,"DEPTH_COMPONENT24");
	HX_VISIT_MEMBER_NAME(STREAM_READ,"STREAM_READ");
	HX_VISIT_MEMBER_NAME(STREAM_COPY,"STREAM_COPY");
	HX_VISIT_MEMBER_NAME(STATIC_READ,"STATIC_READ");
	HX_VISIT_MEMBER_NAME(STATIC_COPY,"STATIC_COPY");
	HX_VISIT_MEMBER_NAME(DYNAMIC_READ,"DYNAMIC_READ");
	HX_VISIT_MEMBER_NAME(DYNAMIC_COPY,"DYNAMIC_COPY");
	HX_VISIT_MEMBER_NAME(DEPTH_COMPONENT32F,"DEPTH_COMPONENT32F");
	HX_VISIT_MEMBER_NAME(DEPTH32F_STENCIL8,"DEPTH32F_STENCIL8");
	HX_VISIT_MEMBER_NAME(INVALID_INDEX,"INVALID_INDEX");
	HX_VISIT_MEMBER_NAME(TIMEOUT_IGNORED,"TIMEOUT_IGNORED");
	HX_VISIT_MEMBER_NAME(MAX_CLIENT_WAIT_TIMEOUT_WEBGL,"MAX_CLIENT_WAIT_TIMEOUT_WEBGL");
	HX_VISIT_MEMBER_NAME(type,"type");
	HX_VISIT_MEMBER_NAME(version,"version");
	HX_VISIT_MEMBER_NAME(_hx___arrayBufferBinding,"__arrayBufferBinding");
	HX_VISIT_MEMBER_NAME(_hx___elementBufferBinding,"__elementBufferBinding");
	HX_VISIT_MEMBER_NAME(_hx___contextID,"__contextID");
	HX_VISIT_MEMBER_NAME(_hx___currentProgram,"__currentProgram");
	HX_VISIT_MEMBER_NAME(_hx___framebufferBinding,"__framebufferBinding");
	HX_VISIT_MEMBER_NAME(_hx___initialized,"__initialized");
	HX_VISIT_MEMBER_NAME(_hx___isContextLost,"__isContextLost");
	HX_VISIT_MEMBER_NAME(_hx___renderbufferBinding,"__renderbufferBinding");
	HX_VISIT_MEMBER_NAME(_hx___texture2DBinding,"__texture2DBinding");
	HX_VISIT_MEMBER_NAME(_hx___textureCubeMapBinding,"__textureCubeMapBinding");
}

hx::Val NativeOpenGLRenderContext_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"CW") ) { return hx::Val( CW ); }
		if (HX_FIELD_EQ(inName,"R8") ) { return hx::Val( R8 ); }
		if (HX_FIELD_EQ(inName,"RG") ) { return hx::Val( RG ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"ONE") ) { return hx::Val( ONE ); }
		if (HX_FIELD_EQ(inName,"CCW") ) { return hx::Val( CCW ); }
		if (HX_FIELD_EQ(inName,"INT") ) { return hx::Val( INT ); }
		if (HX_FIELD_EQ(inName,"RGB") ) { return hx::Val( RGB ); }
		if (HX_FIELD_EQ(inName,"RED") ) { return hx::Val( RED ); }
		if (HX_FIELD_EQ(inName,"RG8") ) { return hx::Val( RG8 ); }
		if (HX_FIELD_EQ(inName,"R8I") ) { return hx::Val( R8I ); }
		if (HX_FIELD_EQ(inName,"MIN") ) { return hx::Val( MIN ); }
		if (HX_FIELD_EQ(inName,"MAX") ) { return hx::Val( MAX ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"ZERO") ) { return hx::Val( ZERO ); }
		if (HX_FIELD_EQ(inName,"BACK") ) { return hx::Val( BACK ); }
		if (HX_FIELD_EQ(inName,"BYTE") ) { return hx::Val( BYTE ); }
		if (HX_FIELD_EQ(inName,"RGBA") ) { return hx::Val( RGBA ); }
		if (HX_FIELD_EQ(inName,"LESS") ) { return hx::Val( LESS ); }
		if (HX_FIELD_EQ(inName,"KEEP") ) { return hx::Val( KEEP ); }
		if (HX_FIELD_EQ(inName,"INCR") ) { return hx::Val( INCR ); }
		if (HX_FIELD_EQ(inName,"DECR") ) { return hx::Val( DECR ); }
		if (HX_FIELD_EQ(inName,"BOOL") ) { return hx::Val( BOOL ); }
		if (HX_FIELD_EQ(inName,"NONE") ) { return hx::Val( NONE ); }
		if (HX_FIELD_EQ(inName,"RGB8") ) { return hx::Val( RGB8 ); }
		if (HX_FIELD_EQ(inName,"SRGB") ) { return hx::Val( SRGB ); }
		if (HX_FIELD_EQ(inName,"R16F") ) { return hx::Val( R16F ); }
		if (HX_FIELD_EQ(inName,"R32F") ) { return hx::Val( R32F ); }
		if (HX_FIELD_EQ(inName,"R8UI") ) { return hx::Val( R8UI ); }
		if (HX_FIELD_EQ(inName,"R16I") ) { return hx::Val( R16I ); }
		if (HX_FIELD_EQ(inName,"R32I") ) { return hx::Val( R32I ); }
		if (HX_FIELD_EQ(inName,"RG8I") ) { return hx::Val( RG8I ); }
		if (HX_FIELD_EQ(inName,"type") ) { return hx::Val( type ); }
		if (HX_FIELD_EQ(inName,"hint") ) { return hx::Val( hint_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"LINES") ) { return hx::Val( LINES ); }
		if (HX_FIELD_EQ(inName,"FRONT") ) { return hx::Val( FRONT ); }
		if (HX_FIELD_EQ(inName,"BLEND") ) { return hx::Val( BLEND ); }
		if (HX_FIELD_EQ(inName,"SHORT") ) { return hx::Val( SHORT ); }
		if (HX_FIELD_EQ(inName,"FLOAT") ) { return hx::Val( FLOAT ); }
		if (HX_FIELD_EQ(inName,"FIXED") ) { return hx::Val( FIXED ); }
		if (HX_FIELD_EQ(inName,"ALPHA") ) { return hx::Val( ALPHA ); }
		if (HX_FIELD_EQ(inName,"NEVER") ) { return hx::Val( NEVER ); }
		if (HX_FIELD_EQ(inName,"EQUAL") ) { return hx::Val( EQUAL ); }
		if (HX_FIELD_EQ(inName,"RGBA4") ) { return hx::Val( RGBA4 ); }
		if (HX_FIELD_EQ(inName,"RGBA8") ) { return hx::Val( RGBA8 ); }
		if (HX_FIELD_EQ(inName,"SRGB8") ) { return hx::Val( SRGB8 ); }
		if (HX_FIELD_EQ(inName,"RGB8I") ) { return hx::Val( RGB8I ); }
		if (HX_FIELD_EQ(inName,"RG16F") ) { return hx::Val( RG16F ); }
		if (HX_FIELD_EQ(inName,"RG32F") ) { return hx::Val( RG32F ); }
		if (HX_FIELD_EQ(inName,"R16UI") ) { return hx::Val( R16UI ); }
		if (HX_FIELD_EQ(inName,"R32UI") ) { return hx::Val( R32UI ); }
		if (HX_FIELD_EQ(inName,"RG8UI") ) { return hx::Val( RG8UI ); }
		if (HX_FIELD_EQ(inName,"RG16I") ) { return hx::Val( RG16I ); }
		if (HX_FIELD_EQ(inName,"RG32I") ) { return hx::Val( RG32I ); }
		if (HX_FIELD_EQ(inName,"COLOR") ) { return hx::Val( COLOR ); }
		if (HX_FIELD_EQ(inName,"DEPTH") ) { return hx::Val( DEPTH ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn() ); }
		if (HX_FIELD_EQ(inName,"flush") ) { return hx::Val( flush_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"POINTS") ) { return hx::Val( POINTS ); }
		if (HX_FIELD_EQ(inName,"DITHER") ) { return hx::Val( DITHER ); }
		if (HX_FIELD_EQ(inName,"NICEST") ) { return hx::Val( NICEST ); }
		if (HX_FIELD_EQ(inName,"LEQUAL") ) { return hx::Val( LEQUAL ); }
		if (HX_FIELD_EQ(inName,"GEQUAL") ) { return hx::Val( GEQUAL ); }
		if (HX_FIELD_EQ(inName,"ALWAYS") ) { return hx::Val( ALWAYS ); }
		if (HX_FIELD_EQ(inName,"INVERT") ) { return hx::Val( INVERT ); }
		if (HX_FIELD_EQ(inName,"VENDOR") ) { return hx::Val( VENDOR ); }
		if (HX_FIELD_EQ(inName,"LINEAR") ) { return hx::Val( LINEAR ); }
		if (HX_FIELD_EQ(inName,"REPEAT") ) { return hx::Val( REPEAT ); }
		if (HX_FIELD_EQ(inName,"RGB565") ) { return hx::Val( RGB565 ); }
		if (HX_FIELD_EQ(inName,"RGB32F") ) { return hx::Val( RGB32F ); }
		if (HX_FIELD_EQ(inName,"RGB16F") ) { return hx::Val( RGB16F ); }
		if (HX_FIELD_EQ(inName,"RGB8UI") ) { return hx::Val( RGB8UI ); }
		if (HX_FIELD_EQ(inName,"RGB32I") ) { return hx::Val( RGB32I ); }
		if (HX_FIELD_EQ(inName,"RGB16I") ) { return hx::Val( RGB16I ); }
		if (HX_FIELD_EQ(inName,"RGBA8I") ) { return hx::Val( RGBA8I ); }
		if (HX_FIELD_EQ(inName,"RG16UI") ) { return hx::Val( RG16UI ); }
		if (HX_FIELD_EQ(inName,"RG32UI") ) { return hx::Val( RG32UI ); }
		if (HX_FIELD_EQ(inName,"enable") ) { return hx::Val( enable_dyn() ); }
		if (HX_FIELD_EQ(inName,"finish") ) { return hx::Val( finish_dyn() ); }
		if (HX_FIELD_EQ(inName,"isSync") ) { return hx::Val( isSync_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"SAMPLES") ) { return hx::Val( SAMPLES ); }
		if (HX_FIELD_EQ(inName,"FASTEST") ) { return hx::Val( FASTEST ); }
		if (HX_FIELD_EQ(inName,"GREATER") ) { return hx::Val( GREATER ); }
		if (HX_FIELD_EQ(inName,"REPLACE") ) { return hx::Val( REPLACE ); }
		if (HX_FIELD_EQ(inName,"VERSION") ) { return hx::Val( VERSION ); }
		if (HX_FIELD_EQ(inName,"NEAREST") ) { return hx::Val( NEAREST ); }
		if (HX_FIELD_EQ(inName,"TEXTURE") ) { return hx::Val( TEXTURE ); }
		if (HX_FIELD_EQ(inName,"LOW_INT") ) { return hx::Val( LOW_INT ); }
		if (HX_FIELD_EQ(inName,"RGB5_A1") ) { return hx::Val( RGB5_A1 ); }
		if (HX_FIELD_EQ(inName,"RGBA32F") ) { return hx::Val( RGBA32F ); }
		if (HX_FIELD_EQ(inName,"RGBA16F") ) { return hx::Val( RGBA16F ); }
		if (HX_FIELD_EQ(inName,"RGB9_E5") ) { return hx::Val( RGB9_E5 ); }
		if (HX_FIELD_EQ(inName,"RGB32UI") ) { return hx::Val( RGB32UI ); }
		if (HX_FIELD_EQ(inName,"RGB16UI") ) { return hx::Val( RGB16UI ); }
		if (HX_FIELD_EQ(inName,"RGBA8UI") ) { return hx::Val( RGBA8UI ); }
		if (HX_FIELD_EQ(inName,"RGBA32I") ) { return hx::Val( RGBA32I ); }
		if (HX_FIELD_EQ(inName,"RGBA16I") ) { return hx::Val( RGBA16I ); }
		if (HX_FIELD_EQ(inName,"STENCIL") ) { return hx::Val( STENCIL ); }
		if (HX_FIELD_EQ(inName,"version") ) { return hx::Val( version ); }
		if (HX_FIELD_EQ(inName,"disable") ) { return hx::Val( disable_dyn() ); }
		if (HX_FIELD_EQ(inName,"isQuery") ) { return hx::Val( isQuery_dyn() ); }
		if (HX_FIELD_EQ(inName,"scissor") ) { return hx::Val( scissor_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"FUNC_ADD") ) { return hx::Val( FUNC_ADD ); }
		if (HX_FIELD_EQ(inName,"NO_ERROR") ) { return hx::Val( NO_ERROR ); }
		if (HX_FIELD_EQ(inName,"VIEWPORT") ) { return hx::Val( VIEWPORT ); }
		if (HX_FIELD_EQ(inName,"RED_BITS") ) { return hx::Val( RED_BITS ); }
		if (HX_FIELD_EQ(inName,"NOTEQUAL") ) { return hx::Val( NOTEQUAL ); }
		if (HX_FIELD_EQ(inName,"RENDERER") ) { return hx::Val( RENDERER ); }
		if (HX_FIELD_EQ(inName,"TEXTURE0") ) { return hx::Val( TEXTURE0 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE1") ) { return hx::Val( TEXTURE1 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE2") ) { return hx::Val( TEXTURE2 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE3") ) { return hx::Val( TEXTURE3 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE4") ) { return hx::Val( TEXTURE4 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE5") ) { return hx::Val( TEXTURE5 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE6") ) { return hx::Val( TEXTURE6 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE7") ) { return hx::Val( TEXTURE7 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE8") ) { return hx::Val( TEXTURE8 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE9") ) { return hx::Val( TEXTURE9 ); }
		if (HX_FIELD_EQ(inName,"INT_VEC2") ) { return hx::Val( INT_VEC2 ); }
		if (HX_FIELD_EQ(inName,"INT_VEC3") ) { return hx::Val( INT_VEC3 ); }
		if (HX_FIELD_EQ(inName,"INT_VEC4") ) { return hx::Val( INT_VEC4 ); }
		if (HX_FIELD_EQ(inName,"HIGH_INT") ) { return hx::Val( HIGH_INT ); }
		if (HX_FIELD_EQ(inName,"RGB10_A2") ) { return hx::Val( RGB10_A2 ); }
		if (HX_FIELD_EQ(inName,"RGBA32UI") ) { return hx::Val( RGBA32UI ); }
		if (HX_FIELD_EQ(inName,"RGBA16UI") ) { return hx::Val( RGBA16UI ); }
		if (HX_FIELD_EQ(inName,"R8_SNORM") ) { return hx::Val( R8_SNORM ); }
		if (HX_FIELD_EQ(inName,"SIGNALED") ) { return hx::Val( SIGNALED ); }
		if (HX_FIELD_EQ(inName,"cullFace") ) { return hx::Val( cullFace_dyn() ); }
		if (HX_FIELD_EQ(inName,"endQuery") ) { return hx::Val( endQuery_dyn() ); }
		if (HX_FIELD_EQ(inName,"getError") ) { return hx::Val( getError_dyn() ); }
		if (HX_FIELD_EQ(inName,"getFloat") ) { return hx::Val( getFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"getQuery") ) { return hx::Val( getQuery_dyn() ); }
		if (HX_FIELD_EQ(inName,"isBuffer") ) { return hx::Val( isBuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"isShader") ) { return hx::Val( isShader_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		if (HX_FIELD_EQ(inName,"viewport") ) { return hx::Val( viewport_dyn() ); }
		if (HX_FIELD_EQ(inName,"waitSync") ) { return hx::Val( waitSync_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"LINE_LOOP") ) { return hx::Val( LINE_LOOP ); }
		if (HX_FIELD_EQ(inName,"TRIANGLES") ) { return hx::Val( TRIANGLES ); }
		if (HX_FIELD_EQ(inName,"SRC_COLOR") ) { return hx::Val( SRC_COLOR ); }
		if (HX_FIELD_EQ(inName,"SRC_ALPHA") ) { return hx::Val( SRC_ALPHA ); }
		if (HX_FIELD_EQ(inName,"DST_ALPHA") ) { return hx::Val( DST_ALPHA ); }
		if (HX_FIELD_EQ(inName,"DST_COLOR") ) { return hx::Val( DST_COLOR ); }
		if (HX_FIELD_EQ(inName,"CULL_FACE") ) { return hx::Val( CULL_FACE ); }
		if (HX_FIELD_EQ(inName,"BLUE_BITS") ) { return hx::Val( BLUE_BITS ); }
		if (HX_FIELD_EQ(inName,"DONT_CARE") ) { return hx::Val( DONT_CARE ); }
		if (HX_FIELD_EQ(inName,"LUMINANCE") ) { return hx::Val( LUMINANCE ); }
		if (HX_FIELD_EQ(inName,"INCR_WRAP") ) { return hx::Val( INCR_WRAP ); }
		if (HX_FIELD_EQ(inName,"DECR_WRAP") ) { return hx::Val( DECR_WRAP ); }
		if (HX_FIELD_EQ(inName,"TEXTURE10") ) { return hx::Val( TEXTURE10 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE11") ) { return hx::Val( TEXTURE11 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE12") ) { return hx::Val( TEXTURE12 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE13") ) { return hx::Val( TEXTURE13 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE14") ) { return hx::Val( TEXTURE14 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE15") ) { return hx::Val( TEXTURE15 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE16") ) { return hx::Val( TEXTURE16 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE17") ) { return hx::Val( TEXTURE17 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE18") ) { return hx::Val( TEXTURE18 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE19") ) { return hx::Val( TEXTURE19 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE20") ) { return hx::Val( TEXTURE20 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE21") ) { return hx::Val( TEXTURE21 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE22") ) { return hx::Val( TEXTURE22 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE23") ) { return hx::Val( TEXTURE23 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE24") ) { return hx::Val( TEXTURE24 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE25") ) { return hx::Val( TEXTURE25 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE26") ) { return hx::Val( TEXTURE26 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE27") ) { return hx::Val( TEXTURE27 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE28") ) { return hx::Val( TEXTURE28 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE29") ) { return hx::Val( TEXTURE29 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE30") ) { return hx::Val( TEXTURE30 ); }
		if (HX_FIELD_EQ(inName,"TEXTURE31") ) { return hx::Val( TEXTURE31 ); }
		if (HX_FIELD_EQ(inName,"BOOL_VEC2") ) { return hx::Val( BOOL_VEC2 ); }
		if (HX_FIELD_EQ(inName,"BOOL_VEC3") ) { return hx::Val( BOOL_VEC3 ); }
		if (HX_FIELD_EQ(inName,"BOOL_VEC4") ) { return hx::Val( BOOL_VEC4 ); }
		if (HX_FIELD_EQ(inName,"LOW_FLOAT") ) { return hx::Val( LOW_FLOAT ); }
		if (HX_FIELD_EQ(inName,"RG8_SNORM") ) { return hx::Val( RG8_SNORM ); }
		if (HX_FIELD_EQ(inName,"blendFunc") ) { return hx::Val( blendFunc_dyn() ); }
		if (HX_FIELD_EQ(inName,"colorMask") ) { return hx::Val( colorMask_dyn() ); }
		if (HX_FIELD_EQ(inName,"depthFunc") ) { return hx::Val( depthFunc_dyn() ); }
		if (HX_FIELD_EQ(inName,"depthMask") ) { return hx::Val( depthMask_dyn() ); }
		if (HX_FIELD_EQ(inName,"fenceSync") ) { return hx::Val( fenceSync_dyn() ); }
		if (HX_FIELD_EQ(inName,"frontFace") ) { return hx::Val( frontFace_dyn() ); }
		if (HX_FIELD_EQ(inName,"getFloatv") ) { return hx::Val( getFloatv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getQueryi") ) { return hx::Val( getQueryi_dyn() ); }
		if (HX_FIELD_EQ(inName,"getString") ) { return hx::Val( getString_dyn() ); }
		if (HX_FIELD_EQ(inName,"isEnabled") ) { return hx::Val( isEnabled_dyn() ); }
		if (HX_FIELD_EQ(inName,"isProgram") ) { return hx::Val( isProgram_dyn() ); }
		if (HX_FIELD_EQ(inName,"isSampler") ) { return hx::Val( isSampler_dyn() ); }
		if (HX_FIELD_EQ(inName,"isTexture") ) { return hx::Val( isTexture_dyn() ); }
		if (HX_FIELD_EQ(inName,"lineWidth") ) { return hx::Val( lineWidth_dyn() ); }
		if (HX_FIELD_EQ(inName,"stencilOp") ) { return hx::Val( stencilOp_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform1f") ) { return hx::Val( uniform1f_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform1i") ) { return hx::Val( uniform1i_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform2f") ) { return hx::Val( uniform2f_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform2i") ) { return hx::Val( uniform2i_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform3f") ) { return hx::Val( uniform3f_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform3i") ) { return hx::Val( uniform3i_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform4f") ) { return hx::Val( uniform4f_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform4i") ) { return hx::Val( uniform4i_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"LINE_STRIP") ) { return hx::Val( LINE_STRIP ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_2D") ) { return hx::Val( TEXTURE_2D ); }
		if (HX_FIELD_EQ(inName,"DEPTH_TEST") ) { return hx::Val( DEPTH_TEST ); }
		if (HX_FIELD_EQ(inName,"LINE_WIDTH") ) { return hx::Val( LINE_WIDTH ); }
		if (HX_FIELD_EQ(inName,"FRONT_FACE") ) { return hx::Val( FRONT_FACE ); }
		if (HX_FIELD_EQ(inName,"DEPTH_FUNC") ) { return hx::Val( DEPTH_FUNC ); }
		if (HX_FIELD_EQ(inName,"GREEN_BITS") ) { return hx::Val( GREEN_BITS ); }
		if (HX_FIELD_EQ(inName,"ALPHA_BITS") ) { return hx::Val( ALPHA_BITS ); }
		if (HX_FIELD_EQ(inName,"DEPTH_BITS") ) { return hx::Val( DEPTH_BITS ); }
		if (HX_FIELD_EQ(inName,"EXTENSIONS") ) { return hx::Val( EXTENSIONS ); }
		if (HX_FIELD_EQ(inName,"FLOAT_VEC2") ) { return hx::Val( FLOAT_VEC2 ); }
		if (HX_FIELD_EQ(inName,"FLOAT_VEC3") ) { return hx::Val( FLOAT_VEC3 ); }
		if (HX_FIELD_EQ(inName,"FLOAT_VEC4") ) { return hx::Val( FLOAT_VEC4 ); }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT2") ) { return hx::Val( FLOAT_MAT2 ); }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT3") ) { return hx::Val( FLOAT_MAT3 ); }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT4") ) { return hx::Val( FLOAT_MAT4 ); }
		if (HX_FIELD_EQ(inName,"SAMPLER_2D") ) { return hx::Val( SAMPLER_2D ); }
		if (HX_FIELD_EQ(inName,"HIGH_FLOAT") ) { return hx::Val( HIGH_FLOAT ); }
		if (HX_FIELD_EQ(inName,"MEDIUM_INT") ) { return hx::Val( MEDIUM_INT ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_3D") ) { return hx::Val( TEXTURE_3D ); }
		if (HX_FIELD_EQ(inName,"RGB8_SNORM") ) { return hx::Val( RGB8_SNORM ); }
		if (HX_FIELD_EQ(inName,"RGB10_A2UI") ) { return hx::Val( RGB10_A2UI ); }
		if (HX_FIELD_EQ(inName,"HALF_FLOAT") ) { return hx::Val( HALF_FLOAT ); }
		if (HX_FIELD_EQ(inName,"RG_INTEGER") ) { return hx::Val( RG_INTEGER ); }
		if (HX_FIELD_EQ(inName,"SAMPLER_3D") ) { return hx::Val( SAMPLER_3D ); }
		if (HX_FIELD_EQ(inName,"SYNC_FLAGS") ) { return hx::Val( SYNC_FLAGS ); }
		if (HX_FIELD_EQ(inName,"SYNC_FENCE") ) { return hx::Val( SYNC_FENCE ); }
		if (HX_FIELD_EQ(inName,"UNSIGNALED") ) { return hx::Val( UNSIGNALED ); }
		if (HX_FIELD_EQ(inName,"beginQuery") ) { return hx::Val( beginQuery_dyn() ); }
		if (HX_FIELD_EQ(inName,"bindBuffer") ) { return hx::Val( bindBuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"blendColor") ) { return hx::Val( blendColor_dyn() ); }
		if (HX_FIELD_EQ(inName,"bufferData") ) { return hx::Val( bufferData_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearColor") ) { return hx::Val( clearColor_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteSync") ) { return hx::Val( deleteSync_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawArrays") ) { return hx::Val( drawArrays_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBoolean") ) { return hx::Val( getBoolean_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInteger") ) { return hx::Val( getInteger_dyn() ); }
		if (HX_FIELD_EQ(inName,"getQueryiv") ) { return hx::Val( getQueryiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getShaderi") ) { return hx::Val( getShaderi_dyn() ); }
		if (HX_FIELD_EQ(inName,"getStringi") ) { return hx::Val( getStringi_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUniform") ) { return hx::Val( getUniform_dyn() ); }
		if (HX_FIELD_EQ(inName,"readBuffer") ) { return hx::Val( readBuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"readPixels") ) { return hx::Val( readPixels_dyn() ); }
		if (HX_FIELD_EQ(inName,"texImage2D") ) { return hx::Val( texImage2D_dyn() ); }
		if (HX_FIELD_EQ(inName,"texImage3D") ) { return hx::Val( texImage3D_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform1fv") ) { return hx::Val( uniform1fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform1iv") ) { return hx::Val( uniform1iv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform1ui") ) { return hx::Val( uniform1ui_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform2fv") ) { return hx::Val( uniform2fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform2iv") ) { return hx::Val( uniform2iv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform2ui") ) { return hx::Val( uniform2ui_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform3fv") ) { return hx::Val( uniform3fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform3iv") ) { return hx::Val( uniform3iv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform3ui") ) { return hx::Val( uniform3ui_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform4fv") ) { return hx::Val( uniform4fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform4iv") ) { return hx::Val( uniform4iv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform4ui") ) { return hx::Val( uniform4ui_dyn() ); }
		if (HX_FIELD_EQ(inName,"useProgram") ) { return hx::Val( useProgram_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"BLEND_COLOR") ) { return hx::Val( BLEND_COLOR ); }
		if (HX_FIELD_EQ(inName,"STREAM_DRAW") ) { return hx::Val( STREAM_DRAW ); }
		if (HX_FIELD_EQ(inName,"STATIC_DRAW") ) { return hx::Val( STATIC_DRAW ); }
		if (HX_FIELD_EQ(inName,"BUFFER_SIZE") ) { return hx::Val( BUFFER_SIZE ); }
		if (HX_FIELD_EQ(inName,"DEPTH_RANGE") ) { return hx::Val( DEPTH_RANGE ); }
		if (HX_FIELD_EQ(inName,"STENCIL_REF") ) { return hx::Val( STENCIL_REF ); }
		if (HX_FIELD_EQ(inName,"SCISSOR_BOX") ) { return hx::Val( SCISSOR_BOX ); }
		if (HX_FIELD_EQ(inName,"SHADER_TYPE") ) { return hx::Val( SHADER_TYPE ); }
		if (HX_FIELD_EQ(inName,"LINK_STATUS") ) { return hx::Val( LINK_STATUS ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER") ) { return hx::Val( FRAMEBUFFER ); }
		if (HX_FIELD_EQ(inName,"READ_BUFFER") ) { return hx::Val( READ_BUFFER ); }
		if (HX_FIELD_EQ(inName,"RED_INTEGER") ) { return hx::Val( RED_INTEGER ); }
		if (HX_FIELD_EQ(inName,"RGB_INTEGER") ) { return hx::Val( RGB_INTEGER ); }
		if (HX_FIELD_EQ(inName,"RGBA8_SNORM") ) { return hx::Val( RGBA8_SNORM ); }
		if (HX_FIELD_EQ(inName,"MAX_SAMPLES") ) { return hx::Val( MAX_SAMPLES ); }
		if (HX_FIELD_EQ(inName,"OBJECT_TYPE") ) { return hx::Val( OBJECT_TYPE ); }
		if (HX_FIELD_EQ(inName,"SYNC_STATUS") ) { return hx::Val( SYNC_STATUS ); }
		if (HX_FIELD_EQ(inName,"WAIT_FAILED") ) { return hx::Val( WAIT_FAILED ); }
		if (HX_FIELD_EQ(inName,"STREAM_READ") ) { return hx::Val( STREAM_READ ); }
		if (HX_FIELD_EQ(inName,"STREAM_COPY") ) { return hx::Val( STREAM_COPY ); }
		if (HX_FIELD_EQ(inName,"STATIC_READ") ) { return hx::Val( STATIC_READ ); }
		if (HX_FIELD_EQ(inName,"STATIC_COPY") ) { return hx::Val( STATIC_COPY ); }
		if (HX_FIELD_EQ(inName,"__contextID") ) { return hx::Val( _hx___contextID ); }
		if (HX_FIELD_EQ(inName,"bindSampler") ) { return hx::Val( bindSampler_dyn() ); }
		if (HX_FIELD_EQ(inName,"bindTexture") ) { return hx::Val( bindTexture_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearDepthf") ) { return hx::Val( clearDepthf_dyn() ); }
		if (HX_FIELD_EQ(inName,"createQuery") ) { return hx::Val( createQuery_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteQuery") ) { return hx::Val( deleteQuery_dyn() ); }
		if (HX_FIELD_EQ(inName,"depthRangef") ) { return hx::Val( depthRangef_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawBuffers") ) { return hx::Val( drawBuffers_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBooleanv") ) { return hx::Val( getBooleanv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getIntegerv") ) { return hx::Val( getIntegerv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getProgrami") ) { return hx::Val( getProgrami_dyn() ); }
		if (HX_FIELD_EQ(inName,"getShaderiv") ) { return hx::Val( getShaderiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUniformf") ) { return hx::Val( getUniformf_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUniformi") ) { return hx::Val( getUniformi_dyn() ); }
		if (HX_FIELD_EQ(inName,"linkProgram") ) { return hx::Val( linkProgram_dyn() ); }
		if (HX_FIELD_EQ(inName,"pixelStorei") ) { return hx::Val( pixelStorei_dyn() ); }
		if (HX_FIELD_EQ(inName,"stencilFunc") ) { return hx::Val( stencilFunc_dyn() ); }
		if (HX_FIELD_EQ(inName,"stencilMask") ) { return hx::Val( stencilMask_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform1uiv") ) { return hx::Val( uniform1uiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform2uiv") ) { return hx::Val( uniform2uiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform3uiv") ) { return hx::Val( uniform3uiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform4uiv") ) { return hx::Val( uniform4uiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"unmapBuffer") ) { return hx::Val( unmapBuffer_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"TRIANGLE_FAN") ) { return hx::Val( TRIANGLE_FAN ); }
		if (HX_FIELD_EQ(inName,"ARRAY_BUFFER") ) { return hx::Val( ARRAY_BUFFER ); }
		if (HX_FIELD_EQ(inName,"DYNAMIC_DRAW") ) { return hx::Val( DYNAMIC_DRAW ); }
		if (HX_FIELD_EQ(inName,"BUFFER_USAGE") ) { return hx::Val( BUFFER_USAGE ); }
		if (HX_FIELD_EQ(inName,"STENCIL_TEST") ) { return hx::Val( STENCIL_TEST ); }
		if (HX_FIELD_EQ(inName,"SCISSOR_TEST") ) { return hx::Val( SCISSOR_TEST ); }
		if (HX_FIELD_EQ(inName,"INVALID_ENUM") ) { return hx::Val( INVALID_ENUM ); }
		if (HX_FIELD_EQ(inName,"STENCIL_FUNC") ) { return hx::Val( STENCIL_FUNC ); }
		if (HX_FIELD_EQ(inName,"STENCIL_FAIL") ) { return hx::Val( STENCIL_FAIL ); }
		if (HX_FIELD_EQ(inName,"STENCIL_BITS") ) { return hx::Val( STENCIL_BITS ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT") ) { return hx::Val( UNSIGNED_INT ); }
		if (HX_FIELD_EQ(inName,"SAMPLER_CUBE") ) { return hx::Val( SAMPLER_CUBE ); }
		if (HX_FIELD_EQ(inName,"POINT_SPRITE") ) { return hx::Val( POINT_SPRITE ); }
		if (HX_FIELD_EQ(inName,"MEDIUM_FLOAT") ) { return hx::Val( MEDIUM_FLOAT ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER") ) { return hx::Val( RENDERBUFFER ); }
		if (HX_FIELD_EQ(inName,"SRGB8_ALPHA8") ) { return hx::Val( SRGB8_ALPHA8 ); }
		if (HX_FIELD_EQ(inName,"RGBA_INTEGER") ) { return hx::Val( RGBA_INTEGER ); }
		if (HX_FIELD_EQ(inName,"QUERY_RESULT") ) { return hx::Val( QUERY_RESULT ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER0") ) { return hx::Val( DRAW_BUFFER0 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER1") ) { return hx::Val( DRAW_BUFFER1 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER2") ) { return hx::Val( DRAW_BUFFER2 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER3") ) { return hx::Val( DRAW_BUFFER3 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER4") ) { return hx::Val( DRAW_BUFFER4 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER5") ) { return hx::Val( DRAW_BUFFER5 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER6") ) { return hx::Val( DRAW_BUFFER6 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER7") ) { return hx::Val( DRAW_BUFFER7 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER8") ) { return hx::Val( DRAW_BUFFER8 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER9") ) { return hx::Val( DRAW_BUFFER9 ); }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT2x3") ) { return hx::Val( FLOAT_MAT2x3 ); }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT2x4") ) { return hx::Val( FLOAT_MAT2x4 ); }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT3x2") ) { return hx::Val( FLOAT_MAT3x2 ); }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT3x4") ) { return hx::Val( FLOAT_MAT3x4 ); }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT4x2") ) { return hx::Val( FLOAT_MAT4x2 ); }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT4x3") ) { return hx::Val( FLOAT_MAT4x3 ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_TYPE") ) { return hx::Val( UNIFORM_TYPE ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_SIZE") ) { return hx::Val( UNIFORM_SIZE ); }
		if (HX_FIELD_EQ(inName,"DYNAMIC_READ") ) { return hx::Val( DYNAMIC_READ ); }
		if (HX_FIELD_EQ(inName,"DYNAMIC_COPY") ) { return hx::Val( DYNAMIC_COPY ); }
		if (HX_FIELD_EQ(inName,"attachShader") ) { return hx::Val( attachShader_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearStencil") ) { return hx::Val( clearStencil_dyn() ); }
		if (HX_FIELD_EQ(inName,"createBuffer") ) { return hx::Val( createBuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"createShader") ) { return hx::Val( createShader_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteBuffer") ) { return hx::Val( deleteBuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteShader") ) { return hx::Val( deleteShader_dyn() ); }
		if (HX_FIELD_EQ(inName,"detachShader") ) { return hx::Val( detachShader_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawElements") ) { return hx::Val( drawElements_dyn() ); }
		if (HX_FIELD_EQ(inName,"getExtension") ) { return hx::Val( getExtension_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInteger64") ) { return hx::Val( getInteger64_dyn() ); }
		if (HX_FIELD_EQ(inName,"getParameter") ) { return hx::Val( getParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"getProgramiv") ) { return hx::Val( getProgramiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUniformfv") ) { return hx::Val( getUniformfv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUniformiv") ) { return hx::Val( getUniformiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUniformui") ) { return hx::Val( getUniformui_dyn() ); }
		if (HX_FIELD_EQ(inName,"shaderBinary") ) { return hx::Val( shaderBinary_dyn() ); }
		if (HX_FIELD_EQ(inName,"shaderSource") ) { return hx::Val( shaderSource_dyn() ); }
		if (HX_FIELD_EQ(inName,"texStorage2D") ) { return hx::Val( texStorage2D_dyn() ); }
		if (HX_FIELD_EQ(inName,"texStorage3D") ) { return hx::Val( texStorage3D_dyn() ); }
		if (HX_FIELD_EQ(inName,"__initialize") ) { return hx::Val( _hx___initialize_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"FUNC_SUBTRACT") ) { return hx::Val( FUNC_SUBTRACT ); }
		if (HX_FIELD_EQ(inName,"BLEND_DST_RGB") ) { return hx::Val( BLEND_DST_RGB ); }
		if (HX_FIELD_EQ(inName,"BLEND_SRC_RGB") ) { return hx::Val( BLEND_SRC_RGB ); }
		if (HX_FIELD_EQ(inName,"INVALID_VALUE") ) { return hx::Val( INVALID_VALUE ); }
		if (HX_FIELD_EQ(inName,"OUT_OF_MEMORY") ) { return hx::Val( OUT_OF_MEMORY ); }
		if (HX_FIELD_EQ(inName,"SUBPIXEL_BITS") ) { return hx::Val( SUBPIXEL_BITS ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_BYTE") ) { return hx::Val( UNSIGNED_BYTE ); }
		if (HX_FIELD_EQ(inName,"VERTEX_SHADER") ) { return hx::Val( VERTEX_SHADER ); }
		if (HX_FIELD_EQ(inName,"DELETE_STATUS") ) { return hx::Val( DELETE_STATUS ); }
		if (HX_FIELD_EQ(inName,"CLAMP_TO_EDGE") ) { return hx::Val( CLAMP_TO_EDGE ); }
		if (HX_FIELD_EQ(inName,"STENCIL_INDEX") ) { return hx::Val( STENCIL_INDEX ); }
		if (HX_FIELD_EQ(inName,"DEPTH_STENCIL") ) { return hx::Val( DEPTH_STENCIL ); }
		if (HX_FIELD_EQ(inName,"CURRENT_QUERY") ) { return hx::Val( CURRENT_QUERY ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER10") ) { return hx::Val( DRAW_BUFFER10 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER11") ) { return hx::Val( DRAW_BUFFER11 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER12") ) { return hx::Val( DRAW_BUFFER12 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER13") ) { return hx::Val( DRAW_BUFFER13 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER14") ) { return hx::Val( DRAW_BUFFER14 ); }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER15") ) { return hx::Val( DRAW_BUFFER15 ); }
		if (HX_FIELD_EQ(inName,"INVALID_INDEX") ) { return hx::Val( INVALID_INDEX ); }
		if (HX_FIELD_EQ(inName,"__initialized") ) { return hx::Val( _hx___initialized ); }
		if (HX_FIELD_EQ(inName,"activeTexture") ) { return hx::Val( activeTexture_dyn() ); }
		if (HX_FIELD_EQ(inName,"blendEquation") ) { return hx::Val( blendEquation_dyn() ); }
		if (HX_FIELD_EQ(inName,"bufferSubData") ) { return hx::Val( bufferSubData_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearBufferfi") ) { return hx::Val( clearBufferfi_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearBufferfv") ) { return hx::Val( clearBufferfv_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearBufferiv") ) { return hx::Val( clearBufferiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"compileShader") ) { return hx::Val( compileShader_dyn() ); }
		if (HX_FIELD_EQ(inName,"createProgram") ) { return hx::Val( createProgram_dyn() ); }
		if (HX_FIELD_EQ(inName,"createSampler") ) { return hx::Val( createSampler_dyn() ); }
		if (HX_FIELD_EQ(inName,"createTexture") ) { return hx::Val( createTexture_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteProgram") ) { return hx::Val( deleteProgram_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteSampler") ) { return hx::Val( deleteSampler_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteTexture") ) { return hx::Val( deleteTexture_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInteger64i") ) { return hx::Val( getInteger64i_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInteger64v") ) { return hx::Val( getInteger64v_dyn() ); }
		if (HX_FIELD_EQ(inName,"getIntegeri_v") ) { return hx::Val( getIntegeri_v_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUniformuiv") ) { return hx::Val( getUniformuiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"isContextLost") ) { return hx::Val( isContextLost_dyn() ); }
		if (HX_FIELD_EQ(inName,"isFramebuffer") ) { return hx::Val( isFramebuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"isVertexArray") ) { return hx::Val( isVertexArray_dyn() ); }
		if (HX_FIELD_EQ(inName,"polygonOffset") ) { return hx::Val( polygonOffset_dyn() ); }
		if (HX_FIELD_EQ(inName,"programBinary") ) { return hx::Val( programBinary_dyn() ); }
		if (HX_FIELD_EQ(inName,"texParameterf") ) { return hx::Val( texParameterf_dyn() ); }
		if (HX_FIELD_EQ(inName,"texParameteri") ) { return hx::Val( texParameteri_dyn() ); }
		if (HX_FIELD_EQ(inName,"texSubImage2D") ) { return hx::Val( texSubImage2D_dyn() ); }
		if (HX_FIELD_EQ(inName,"texSubImage3D") ) { return hx::Val( texSubImage3D_dyn() ); }
		if (HX_FIELD_EQ(inName,"__contextLost") ) { return hx::Val( _hx___contextLost_dyn() ); }
		if (HX_FIELD_EQ(inName,"__getObjectID") ) { return hx::Val( _hx___getObjectID_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"TRIANGLE_STRIP") ) { return hx::Val( TRIANGLE_STRIP ); }
		if (HX_FIELD_EQ(inName,"BLEND_EQUATION") ) { return hx::Val( BLEND_EQUATION ); }
		if (HX_FIELD_EQ(inName,"CONSTANT_COLOR") ) { return hx::Val( CONSTANT_COLOR ); }
		if (HX_FIELD_EQ(inName,"CONSTANT_ALPHA") ) { return hx::Val( CONSTANT_ALPHA ); }
		if (HX_FIELD_EQ(inName,"FRONT_AND_BACK") ) { return hx::Val( FRONT_AND_BACK ); }
		if (HX_FIELD_EQ(inName,"CULL_FACE_MODE") ) { return hx::Val( CULL_FACE_MODE ); }
		if (HX_FIELD_EQ(inName,"PACK_ALIGNMENT") ) { return hx::Val( PACK_ALIGNMENT ); }
		if (HX_FIELD_EQ(inName,"SAMPLE_BUFFERS") ) { return hx::Val( SAMPLE_BUFFERS ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_SHORT") ) { return hx::Val( UNSIGNED_SHORT ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_WRAP_S") ) { return hx::Val( TEXTURE_WRAP_S ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_WRAP_T") ) { return hx::Val( TEXTURE_WRAP_T ); }
		if (HX_FIELD_EQ(inName,"ACTIVE_TEXTURE") ) { return hx::Val( ACTIVE_TEXTURE ); }
		if (HX_FIELD_EQ(inName,"COMPILE_STATUS") ) { return hx::Val( COMPILE_STATUS ); }
		if (HX_FIELD_EQ(inName,"STENCIL_INDEX8") ) { return hx::Val( STENCIL_INDEX8 ); }
		if (HX_FIELD_EQ(inName,"PACK_SKIP_ROWS") ) { return hx::Val( PACK_SKIP_ROWS ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_WRAP_R") ) { return hx::Val( TEXTURE_WRAP_R ); }
		if (HX_FIELD_EQ(inName,"R11F_G11F_B10F") ) { return hx::Val( R11F_G11F_B10F ); }
		if (HX_FIELD_EQ(inName,"INT_SAMPLER_2D") ) { return hx::Val( INT_SAMPLER_2D ); }
		if (HX_FIELD_EQ(inName,"INT_SAMPLER_3D") ) { return hx::Val( INT_SAMPLER_3D ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_BUFFER") ) { return hx::Val( UNIFORM_BUFFER ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_OFFSET") ) { return hx::Val( UNIFORM_OFFSET ); }
		if (HX_FIELD_EQ(inName,"SYNC_CONDITION") ) { return hx::Val( SYNC_CONDITION ); }
		if (HX_FIELD_EQ(inName,"bindBufferBase") ) { return hx::Val( bindBufferBase_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearBufferuiv") ) { return hx::Val( clearBufferuiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"clientWaitSync") ) { return hx::Val( clientWaitSync_dyn() ); }
		if (HX_FIELD_EQ(inName,"copyTexImage2D") ) { return hx::Val( copyTexImage2D_dyn() ); }
		if (HX_FIELD_EQ(inName,"generateMipmap") ) { return hx::Val( generateMipmap_dyn() ); }
		if (HX_FIELD_EQ(inName,"isRenderbuffer") ) { return hx::Val( isRenderbuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"mapBufferRange") ) { return hx::Val( mapBufferRange_dyn() ); }
		if (HX_FIELD_EQ(inName,"sampleCoverage") ) { return hx::Val( sampleCoverage_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttrib1f") ) { return hx::Val( vertexAttrib1f_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttrib2f") ) { return hx::Val( vertexAttrib2f_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttrib3f") ) { return hx::Val( vertexAttrib3f_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttrib4f") ) { return hx::Val( vertexAttrib4f_dyn() ); }
		if (HX_FIELD_EQ(inName,"__createObject") ) { return hx::Val( _hx___createObject_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"BLEND_DST_ALPHA") ) { return hx::Val( BLEND_DST_ALPHA ); }
		if (HX_FIELD_EQ(inName,"BLEND_SRC_ALPHA") ) { return hx::Val( BLEND_SRC_ALPHA ); }
		if (HX_FIELD_EQ(inName,"SAMPLE_COVERAGE") ) { return hx::Val( SAMPLE_COVERAGE ); }
		if (HX_FIELD_EQ(inName,"DEPTH_WRITEMASK") ) { return hx::Val( DEPTH_WRITEMASK ); }
		if (HX_FIELD_EQ(inName,"COLOR_WRITEMASK") ) { return hx::Val( COLOR_WRITEMASK ); }
		if (HX_FIELD_EQ(inName,"DEPTH_COMPONENT") ) { return hx::Val( DEPTH_COMPONENT ); }
		if (HX_FIELD_EQ(inName,"LUMINANCE_ALPHA") ) { return hx::Val( LUMINANCE_ALPHA ); }
		if (HX_FIELD_EQ(inName,"FRAGMENT_SHADER") ) { return hx::Val( FRAGMENT_SHADER ); }
		if (HX_FIELD_EQ(inName,"VALIDATE_STATUS") ) { return hx::Val( VALIDATE_STATUS ); }
		if (HX_FIELD_EQ(inName,"ACTIVE_UNIFORMS") ) { return hx::Val( ACTIVE_UNIFORMS ); }
		if (HX_FIELD_EQ(inName,"CURRENT_PROGRAM") ) { return hx::Val( CURRENT_PROGRAM ); }
		if (HX_FIELD_EQ(inName,"MIRRORED_REPEAT") ) { return hx::Val( MIRRORED_REPEAT ); }
		if (HX_FIELD_EQ(inName,"INFO_LOG_LENGTH") ) { return hx::Val( INFO_LOG_LENGTH ); }
		if (HX_FIELD_EQ(inName,"SHADER_COMPILER") ) { return hx::Val( SHADER_COMPILER ); }
		if (HX_FIELD_EQ(inName,"PACK_ROW_LENGTH") ) { return hx::Val( PACK_ROW_LENGTH ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_MIN_LOD") ) { return hx::Val( TEXTURE_MIN_LOD ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_MAX_LOD") ) { return hx::Val( TEXTURE_MAX_LOD ); }
		if (HX_FIELD_EQ(inName,"SAMPLER_BINDING") ) { return hx::Val( SAMPLER_BINDING ); }
		if (HX_FIELD_EQ(inName,"TIMEOUT_EXPIRED") ) { return hx::Val( TIMEOUT_EXPIRED ); }
		if (HX_FIELD_EQ(inName,"TIMEOUT_IGNORED") ) { return hx::Val( TIMEOUT_IGNORED ); }
		if (HX_FIELD_EQ(inName,"__isContextLost") ) { return hx::Val( _hx___isContextLost ); }
		if (HX_FIELD_EQ(inName,"bindBufferRange") ) { return hx::Val( bindBufferRange_dyn() ); }
		if (HX_FIELD_EQ(inName,"bindFramebuffer") ) { return hx::Val( bindFramebuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"bindVertexArray") ) { return hx::Val( bindVertexArray_dyn() ); }
		if (HX_FIELD_EQ(inName,"blitFramebuffer") ) { return hx::Val( blitFramebuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"getActiveAttrib") ) { return hx::Val( getActiveAttrib_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInteger64i_v") ) { return hx::Val( getInteger64i_v_dyn() ); }
		if (HX_FIELD_EQ(inName,"getShaderSource") ) { return hx::Val( getShaderSource_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTexParameter") ) { return hx::Val( getTexParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVertexAttrib") ) { return hx::Val( getVertexAttrib_dyn() ); }
		if (HX_FIELD_EQ(inName,"validateProgram") ) { return hx::Val( validateProgram_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttrib1fv") ) { return hx::Val( vertexAttrib1fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttrib2fv") ) { return hx::Val( vertexAttrib2fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttrib3fv") ) { return hx::Val( vertexAttrib3fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttrib4fv") ) { return hx::Val( vertexAttrib4fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttribI4i") ) { return hx::Val( vertexAttribI4i_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"DEPTH_BUFFER_BIT") ) { return hx::Val( DEPTH_BUFFER_BIT ); }
		if (HX_FIELD_EQ(inName,"COLOR_BUFFER_BIT") ) { return hx::Val( COLOR_BUFFER_BIT ); }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_REF") ) { return hx::Val( STENCIL_BACK_REF ); }
		if (HX_FIELD_EQ(inName,"UNPACK_ALIGNMENT") ) { return hx::Val( UNPACK_ALIGNMENT ); }
		if (HX_FIELD_EQ(inName,"MAX_TEXTURE_SIZE") ) { return hx::Val( MAX_TEXTURE_SIZE ); }
		if (HX_FIELD_EQ(inName,"ATTACHED_SHADERS") ) { return hx::Val( ATTACHED_SHADERS ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP") ) { return hx::Val( TEXTURE_CUBE_MAP ); }
		if (HX_FIELD_EQ(inName,"DEPTH_ATTACHMENT") ) { return hx::Val( DEPTH_ATTACHMENT ); }
		if (HX_FIELD_EQ(inName,"UNPACK_SKIP_ROWS") ) { return hx::Val( UNPACK_SKIP_ROWS ); }
		if (HX_FIELD_EQ(inName,"PACK_SKIP_PIXELS") ) { return hx::Val( PACK_SKIP_PIXELS ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_2D_ARRAY") ) { return hx::Val( TEXTURE_2D_ARRAY ); }
		if (HX_FIELD_EQ(inName,"MAX_DRAW_BUFFERS") ) { return hx::Val( MAX_DRAW_BUFFERS ); }
		if (HX_FIELD_EQ(inName,"SAMPLER_2D_ARRAY") ) { return hx::Val( SAMPLER_2D_ARRAY ); }
		if (HX_FIELD_EQ(inName,"INT_SAMPLER_CUBE") ) { return hx::Val( INT_SAMPLER_CUBE ); }
		if (HX_FIELD_EQ(inName,"COPY_READ_BUFFER") ) { return hx::Val( COPY_READ_BUFFER ); }
		if (HX_FIELD_EQ(inName,"SEPARATE_ATTRIBS") ) { return hx::Val( SEPARATE_ATTRIBS ); }
		if (HX_FIELD_EQ(inName,"DEPTH24_STENCIL8") ) { return hx::Val( DEPTH24_STENCIL8 ); }
		if (HX_FIELD_EQ(inName,"READ_FRAMEBUFFER") ) { return hx::Val( READ_FRAMEBUFFER ); }
		if (HX_FIELD_EQ(inName,"DRAW_FRAMEBUFFER") ) { return hx::Val( DRAW_FRAMEBUFFER ); }
		if (HX_FIELD_EQ(inName,"ALREADY_SIGNALED") ) { return hx::Val( ALREADY_SIGNALED ); }
		if (HX_FIELD_EQ(inName,"__currentProgram") ) { return hx::Val( _hx___currentProgram ); }
		if (HX_FIELD_EQ(inName,"bindRenderbuffer") ) { return hx::Val( bindRenderbuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"getActiveUniform") ) { return hx::Val( getActiveUniform_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBufferSubData") ) { return hx::Val( getBufferSubData_dyn() ); }
		if (HX_FIELD_EQ(inName,"getProgramBinary") ) { return hx::Val( getProgramBinary_dyn() ); }
		if (HX_FIELD_EQ(inName,"getQueryObjectui") ) { return hx::Val( getQueryObjectui_dyn() ); }
		if (HX_FIELD_EQ(inName,"getShaderInfoLog") ) { return hx::Val( getShaderInfoLog_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSyncParameter") ) { return hx::Val( getSyncParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTexParameterf") ) { return hx::Val( getTexParameterf_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTexParameteri") ) { return hx::Val( getTexParameteri_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVertexAttribf") ) { return hx::Val( getVertexAttribf_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVertexAttribi") ) { return hx::Val( getVertexAttribi_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniformMatrix2fv") ) { return hx::Val( uniformMatrix2fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniformMatrix3fv") ) { return hx::Val( uniformMatrix3fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniformMatrix4fv") ) { return hx::Val( uniformMatrix4fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttribI4iv") ) { return hx::Val( vertexAttribI4iv_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttribI4ui") ) { return hx::Val( vertexAttribI4ui_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"INVALID_OPERATION") ) { return hx::Val( INVALID_OPERATION ); }
		if (HX_FIELD_EQ(inName,"DEPTH_CLEAR_VALUE") ) { return hx::Val( DEPTH_CLEAR_VALUE ); }
		if (HX_FIELD_EQ(inName,"STENCIL_WRITEMASK") ) { return hx::Val( STENCIL_WRITEMASK ); }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_FUNC") ) { return hx::Val( STENCIL_BACK_FUNC ); }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_FAIL") ) { return hx::Val( STENCIL_BACK_FAIL ); }
		if (HX_FIELD_EQ(inName,"COLOR_CLEAR_VALUE") ) { return hx::Val( COLOR_CLEAR_VALUE ); }
		if (HX_FIELD_EQ(inName,"MAX_VIEWPORT_DIMS") ) { return hx::Val( MAX_VIEWPORT_DIMS ); }
		if (HX_FIELD_EQ(inName,"ACTIVE_ATTRIBUTES") ) { return hx::Val( ACTIVE_ATTRIBUTES ); }
		if (HX_FIELD_EQ(inName,"DEPTH_COMPONENT16") ) { return hx::Val( DEPTH_COMPONENT16 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT0") ) { return hx::Val( COLOR_ATTACHMENT0 ); }
		if (HX_FIELD_EQ(inName,"UNPACK_ROW_LENGTH") ) { return hx::Val( UNPACK_ROW_LENGTH ); }
		if (HX_FIELD_EQ(inName,"MAX_ELEMENT_INDEX") ) { return hx::Val( MAX_ELEMENT_INDEX ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_MAX_LEVEL") ) { return hx::Val( TEXTURE_MAX_LEVEL ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_24_8") ) { return hx::Val( UNSIGNED_INT_24_8 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT1") ) { return hx::Val( COLOR_ATTACHMENT1 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT2") ) { return hx::Val( COLOR_ATTACHMENT2 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT3") ) { return hx::Val( COLOR_ATTACHMENT3 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT4") ) { return hx::Val( COLOR_ATTACHMENT4 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT5") ) { return hx::Val( COLOR_ATTACHMENT5 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT6") ) { return hx::Val( COLOR_ATTACHMENT6 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT7") ) { return hx::Val( COLOR_ATTACHMENT7 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT8") ) { return hx::Val( COLOR_ATTACHMENT8 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT9") ) { return hx::Val( COLOR_ATTACHMENT9 ); }
		if (HX_FIELD_EQ(inName,"SAMPLER_2D_SHADOW") ) { return hx::Val( SAMPLER_2D_SHADOW ); }
		if (HX_FIELD_EQ(inName,"PIXEL_PACK_BUFFER") ) { return hx::Val( PIXEL_PACK_BUFFER ); }
		if (HX_FIELD_EQ(inName,"COPY_WRITE_BUFFER") ) { return hx::Val( COPY_WRITE_BUFFER ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_VEC2") ) { return hx::Val( UNSIGNED_INT_VEC2 ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_VEC3") ) { return hx::Val( UNSIGNED_INT_VEC3 ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_VEC4") ) { return hx::Val( UNSIGNED_INT_VEC4 ); }
		if (HX_FIELD_EQ(inName,"SIGNED_NORMALIZED") ) { return hx::Val( SIGNED_NORMALIZED ); }
		if (HX_FIELD_EQ(inName,"DEPTH_COMPONENT24") ) { return hx::Val( DEPTH_COMPONENT24 ); }
		if (HX_FIELD_EQ(inName,"DEPTH32F_STENCIL8") ) { return hx::Val( DEPTH32F_STENCIL8 ); }
		if (HX_FIELD_EQ(inName,"blendFuncSeparate") ) { return hx::Val( blendFuncSeparate_dyn() ); }
		if (HX_FIELD_EQ(inName,"copyBufferSubData") ) { return hx::Val( copyBufferSubData_dyn() ); }
		if (HX_FIELD_EQ(inName,"copyTexSubImage2D") ) { return hx::Val( copyTexSubImage2D_dyn() ); }
		if (HX_FIELD_EQ(inName,"copyTexSubImage3D") ) { return hx::Val( copyTexSubImage3D_dyn() ); }
		if (HX_FIELD_EQ(inName,"createFramebuffer") ) { return hx::Val( createFramebuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"createVertexArray") ) { return hx::Val( createVertexArray_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteFramebuffer") ) { return hx::Val( deleteFramebuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteVertexArray") ) { return hx::Val( deleteVertexArray_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawRangeElements") ) { return hx::Val( drawRangeElements_dyn() ); }
		if (HX_FIELD_EQ(inName,"getActiveUniforms") ) { return hx::Val( getActiveUniforms_dyn() ); }
		if (HX_FIELD_EQ(inName,"getAttribLocation") ) { return hx::Val( getAttribLocation_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBufferPointerv") ) { return hx::Val( getBufferPointerv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getProgramInfoLog") ) { return hx::Val( getProgramInfoLog_dyn() ); }
		if (HX_FIELD_EQ(inName,"getQueryObjectuiv") ) { return hx::Val( getQueryObjectuiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getQueryParameter") ) { return hx::Val( getQueryParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSyncParameteri") ) { return hx::Val( getSyncParameteri_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTexParameterfv") ) { return hx::Val( getTexParameterfv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTexParameteriv") ) { return hx::Val( getTexParameteriv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUniformIndices") ) { return hx::Val( getUniformIndices_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVertexAttribfv") ) { return hx::Val( getVertexAttribfv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVertexAttribIi") ) { return hx::Val( getVertexAttribIi_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVertexAttribiv") ) { return hx::Val( getVertexAttribiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"programParameteri") ) { return hx::Val( programParameteri_dyn() ); }
		if (HX_FIELD_EQ(inName,"samplerParameterf") ) { return hx::Val( samplerParameterf_dyn() ); }
		if (HX_FIELD_EQ(inName,"samplerParameteri") ) { return hx::Val( samplerParameteri_dyn() ); }
		if (HX_FIELD_EQ(inName,"stencilOpSeparate") ) { return hx::Val( stencilOpSeparate_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttribI4uiv") ) { return hx::Val( vertexAttribI4uiv_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"STENCIL_BUFFER_BIT") ) { return hx::Val( STENCIL_BUFFER_BIT ); }
		if (HX_FIELD_EQ(inName,"SRC_ALPHA_SATURATE") ) { return hx::Val( SRC_ALPHA_SATURATE ); }
		if (HX_FIELD_EQ(inName,"BLEND_EQUATION_RGB") ) { return hx::Val( BLEND_EQUATION_RGB ); }
		if (HX_FIELD_EQ(inName,"STENCIL_VALUE_MASK") ) { return hx::Val( STENCIL_VALUE_MASK ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_BINDING_2D") ) { return hx::Val( TEXTURE_BINDING_2D ); }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_ATTRIBS") ) { return hx::Val( MAX_VERTEX_ATTRIBS ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_MAG_FILTER") ) { return hx::Val( TEXTURE_MAG_FILTER ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_MIN_FILTER") ) { return hx::Val( TEXTURE_MIN_FILTER ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_WIDTH") ) { return hx::Val( RENDERBUFFER_WIDTH ); }
		if (HX_FIELD_EQ(inName,"STENCIL_ATTACHMENT") ) { return hx::Val( STENCIL_ATTACHMENT ); }
		if (HX_FIELD_EQ(inName,"CONTEXT_LOST_WEBGL") ) { return hx::Val( CONTEXT_LOST_WEBGL ); }
		if (HX_FIELD_EQ(inName,"UNPACK_SKIP_PIXELS") ) { return hx::Val( UNPACK_SKIP_PIXELS ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_BINDING_3D") ) { return hx::Val( TEXTURE_BINDING_3D ); }
		if (HX_FIELD_EQ(inName,"UNPACK_SKIP_IMAGES") ) { return hx::Val( UNPACK_SKIP_IMAGES ); }
		if (HX_FIELD_EQ(inName,"RASTERIZER_DISCARD") ) { return hx::Val( RASTERIZER_DISCARD ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_BASE_LEVEL") ) { return hx::Val( TEXTURE_BASE_LEVEL ); }
		if (HX_FIELD_EQ(inName,"INT_2_10_10_10_REV") ) { return hx::Val( INT_2_10_10_10_REV ); }
		if (HX_FIELD_EQ(inName,"ANY_SAMPLES_PASSED") ) { return hx::Val( ANY_SAMPLES_PASSED ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT10") ) { return hx::Val( COLOR_ATTACHMENT10 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT11") ) { return hx::Val( COLOR_ATTACHMENT11 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT12") ) { return hx::Val( COLOR_ATTACHMENT12 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT13") ) { return hx::Val( COLOR_ATTACHMENT13 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT14") ) { return hx::Val( COLOR_ATTACHMENT14 ); }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT15") ) { return hx::Val( COLOR_ATTACHMENT15 ); }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK") ) { return hx::Val( TRANSFORM_FEEDBACK ); }
		if (HX_FIELD_EQ(inName,"DEPTH_COMPONENT32F") ) { return hx::Val( DEPTH_COMPONENT32F ); }
		if (HX_FIELD_EQ(inName,"__texture2DBinding") ) { return hx::Val( _hx___texture2DBinding ); }
		if (HX_FIELD_EQ(inName,"bindAttribLocation") ) { return hx::Val( bindAttribLocation_dyn() ); }
		if (HX_FIELD_EQ(inName,"createRenderbuffer") ) { return hx::Val( createRenderbuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteRenderbuffer") ) { return hx::Val( deleteRenderbuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"getAttachedShaders") ) { return hx::Val( getAttachedShaders_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBufferParameter") ) { return hx::Val( getBufferParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInternalformati") ) { return hx::Val( getInternalformati_dyn() ); }
		if (HX_FIELD_EQ(inName,"getShaderParameter") ) { return hx::Val( getShaderParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSyncParameteriv") ) { return hx::Val( getSyncParameteriv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUniformLocation") ) { return hx::Val( getUniformLocation_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVertexAttribIiv") ) { return hx::Val( getVertexAttribIiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVertexAttribIui") ) { return hx::Val( getVertexAttribIui_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniformMatrix2x3fv") ) { return hx::Val( uniformMatrix2x3fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniformMatrix2x4fv") ) { return hx::Val( uniformMatrix2x4fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniformMatrix3x2fv") ) { return hx::Val( uniformMatrix3x2fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniformMatrix3x4fv") ) { return hx::Val( uniformMatrix3x4fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniformMatrix4x2fv") ) { return hx::Val( uniformMatrix4x2fv_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniformMatrix4x3fv") ) { return hx::Val( uniformMatrix4x3fv_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"ONE_MINUS_SRC_COLOR") ) { return hx::Val( ONE_MINUS_SRC_COLOR ); }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_SRC_ALPHA") ) { return hx::Val( ONE_MINUS_SRC_ALPHA ); }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_DST_ALPHA") ) { return hx::Val( ONE_MINUS_DST_ALPHA ); }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_DST_COLOR") ) { return hx::Val( ONE_MINUS_DST_COLOR ); }
		if (HX_FIELD_EQ(inName,"POLYGON_OFFSET_FILL") ) { return hx::Val( POLYGON_OFFSET_FILL ); }
		if (HX_FIELD_EQ(inName,"STENCIL_CLEAR_VALUE") ) { return hx::Val( STENCIL_CLEAR_VALUE ); }
		if (HX_FIELD_EQ(inName,"MAX_VARYING_VECTORS") ) { return hx::Val( MAX_VARYING_VECTORS ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_HEIGHT") ) { return hx::Val( RENDERBUFFER_HEIGHT ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_BINDING") ) { return hx::Val( FRAMEBUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"UNPACK_FLIP_Y_WEBGL") ) { return hx::Val( UNPACK_FLIP_Y_WEBGL ); }
		if (HX_FIELD_EQ(inName,"UNPACK_IMAGE_HEIGHT") ) { return hx::Val( UNPACK_IMAGE_HEIGHT ); }
		if (HX_FIELD_EQ(inName,"MAX_3D_TEXTURE_SIZE") ) { return hx::Val( MAX_3D_TEXTURE_SIZE ); }
		if (HX_FIELD_EQ(inName,"SAMPLER_CUBE_SHADOW") ) { return hx::Val( SAMPLER_CUBE_SHADOW ); }
		if (HX_FIELD_EQ(inName,"PIXEL_UNPACK_BUFFER") ) { return hx::Val( PIXEL_UNPACK_BUFFER ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_NORMALIZED") ) { return hx::Val( UNSIGNED_NORMALIZED ); }
		if (HX_FIELD_EQ(inName,"INTERLEAVED_ATTRIBS") ) { return hx::Val( INTERLEAVED_ATTRIBS ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_DEFAULT") ) { return hx::Val( FRAMEBUFFER_DEFAULT ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_BUFFER_SIZE") ) { return hx::Val( UNIFORM_BUFFER_SIZE ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_INDEX") ) { return hx::Val( UNIFORM_BLOCK_INDEX ); }
		if (HX_FIELD_EQ(inName,"CONDITION_SATISFIED") ) { return hx::Val( CONDITION_SATISFIED ); }
		if (HX_FIELD_EQ(inName,"drawArraysInstanced") ) { return hx::Val( drawArraysInstanced_dyn() ); }
		if (HX_FIELD_EQ(inName,"getActiveUniformsiv") ) { return hx::Val( getActiveUniformsiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBufferParameteri") ) { return hx::Val( getBufferParameteri_dyn() ); }
		if (HX_FIELD_EQ(inName,"getFragDataLocation") ) { return hx::Val( getFragDataLocation_dyn() ); }
		if (HX_FIELD_EQ(inName,"getIndexedParameter") ) { return hx::Val( getIndexedParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInternalformativ") ) { return hx::Val( getInternalformativ_dyn() ); }
		if (HX_FIELD_EQ(inName,"getProgramParameter") ) { return hx::Val( getProgramParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSamplerParameter") ) { return hx::Val( getSamplerParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVertexAttribIuiv") ) { return hx::Val( getVertexAttribIuiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"isTransformFeedback") ) { return hx::Val( isTransformFeedback_dyn() ); }
		if (HX_FIELD_EQ(inName,"renderbufferStorage") ) { return hx::Val( renderbufferStorage_dyn() ); }
		if (HX_FIELD_EQ(inName,"stencilFuncSeparate") ) { return hx::Val( stencilFuncSeparate_dyn() ); }
		if (HX_FIELD_EQ(inName,"stencilMaskSeparate") ) { return hx::Val( stencilMaskSeparate_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniformBlockBinding") ) { return hx::Val( uniformBlockBinding_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttribDivisor") ) { return hx::Val( vertexAttribDivisor_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttribPointer") ) { return hx::Val( vertexAttribPointer_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"BLEND_EQUATION_ALPHA") ) { return hx::Val( BLEND_EQUATION_ALPHA ); }
		if (HX_FIELD_EQ(inName,"ELEMENT_ARRAY_BUFFER") ) { return hx::Val( ELEMENT_ARRAY_BUFFER ); }
		if (HX_FIELD_EQ(inName,"ARRAY_BUFFER_BINDING") ) { return hx::Val( ARRAY_BUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"POLYGON_OFFSET_UNITS") ) { return hx::Val( POLYGON_OFFSET_UNITS ); }
		if (HX_FIELD_EQ(inName,"GENERATE_MIPMAP_HINT") ) { return hx::Val( GENERATE_MIPMAP_HINT ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_SHORT_5_6_5") ) { return hx::Val( UNSIGNED_SHORT_5_6_5 ); }
		if (HX_FIELD_EQ(inName,"LINEAR_MIPMAP_LINEAR") ) { return hx::Val( LINEAR_MIPMAP_LINEAR ); }
		if (HX_FIELD_EQ(inName,"SHADER_SOURCE_LENGTH") ) { return hx::Val( SHADER_SOURCE_LENGTH ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_COMPLETE") ) { return hx::Val( FRAMEBUFFER_COMPLETE ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_BINDING") ) { return hx::Val( RENDERBUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"MAX_ELEMENTS_INDICES") ) { return hx::Val( MAX_ELEMENTS_INDICES ); }
		if (HX_FIELD_EQ(inName,"MAX_TEXTURE_LOD_BIAS") ) { return hx::Val( MAX_TEXTURE_LOD_BIAS ); }
		if (HX_FIELD_EQ(inName,"VERTEX_ARRAY_BINDING") ) { return hx::Val( VERTEX_ARRAY_BINDING ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_COMPARE_MODE") ) { return hx::Val( TEXTURE_COMPARE_MODE ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_COMPARE_FUNC") ) { return hx::Val( TEXTURE_COMPARE_FUNC ); }
		if (HX_FIELD_EQ(inName,"INT_SAMPLER_2D_ARRAY") ) { return hx::Val( INT_SAMPLER_2D_ARRAY ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_SAMPLES") ) { return hx::Val( RENDERBUFFER_SAMPLES ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_BUFFER_START") ) { return hx::Val( UNIFORM_BUFFER_START ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_ARRAY_STRIDE") ) { return hx::Val( UNIFORM_ARRAY_STRIDE ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_IS_ROW_MAJOR") ) { return hx::Val( UNIFORM_IS_ROW_MAJOR ); }
		if (HX_FIELD_EQ(inName,"__arrayBufferBinding") ) { return hx::Val( _hx___arrayBufferBinding ); }
		if (HX_FIELD_EQ(inName,"__framebufferBinding") ) { return hx::Val( _hx___framebufferBinding ); }
		if (HX_FIELD_EQ(inName,"compressedTexImage2D") ) { return hx::Val( compressedTexImage2D_dyn() ); }
		if (HX_FIELD_EQ(inName,"compressedTexImage3D") ) { return hx::Val( compressedTexImage3D_dyn() ); }
		if (HX_FIELD_EQ(inName,"endTransformFeedback") ) { return hx::Val( endTransformFeedback_dyn() ); }
		if (HX_FIELD_EQ(inName,"framebufferTexture2D") ) { return hx::Val( framebufferTexture2D_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBufferParameteriv") ) { return hx::Val( getBufferParameteriv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getContextAttributes") ) { return hx::Val( getContextAttributes_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSamplerParameterf") ) { return hx::Val( getSamplerParameterf_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSamplerParameteri") ) { return hx::Val( getSamplerParameteri_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUniformBlockIndex") ) { return hx::Val( getUniformBlockIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"vertexAttribIPointer") ) { return hx::Val( vertexAttribIPointer_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"FUNC_REVERSE_SUBTRACT") ) { return hx::Val( FUNC_REVERSE_SUBTRACT ); }
		if (HX_FIELD_EQ(inName,"CURRENT_VERTEX_ATTRIB") ) { return hx::Val( CURRENT_VERTEX_ATTRIB ); }
		if (HX_FIELD_EQ(inName,"POLYGON_OFFSET_FACTOR") ) { return hx::Val( POLYGON_OFFSET_FACTOR ); }
		if (HX_FIELD_EQ(inName,"SAMPLE_COVERAGE_VALUE") ) { return hx::Val( SAMPLE_COVERAGE_VALUE ); }
		if (HX_FIELD_EQ(inName,"LINEAR_MIPMAP_NEAREST") ) { return hx::Val( LINEAR_MIPMAP_NEAREST ); }
		if (HX_FIELD_EQ(inName,"NEAREST_MIPMAP_LINEAR") ) { return hx::Val( NEAREST_MIPMAP_LINEAR ); }
		if (HX_FIELD_EQ(inName,"SHADER_BINARY_FORMATS") ) { return hx::Val( SHADER_BINARY_FORMATS ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_RED_SIZE") ) { return hx::Val( RENDERBUFFER_RED_SIZE ); }
		if (HX_FIELD_EQ(inName,"MAX_RENDERBUFFER_SIZE") ) { return hx::Val( MAX_RENDERBUFFER_SIZE ); }
		if (HX_FIELD_EQ(inName,"BROWSER_DEFAULT_WEBGL") ) { return hx::Val( BROWSER_DEFAULT_WEBGL ); }
		if (HX_FIELD_EQ(inName,"MAX_ELEMENTS_VERTICES") ) { return hx::Val( MAX_ELEMENTS_VERTICES ); }
		if (HX_FIELD_EQ(inName,"MAX_COLOR_ATTACHMENTS") ) { return hx::Val( MAX_COLOR_ATTACHMENTS ); }
		if (HX_FIELD_EQ(inName,"ACTIVE_UNIFORM_BLOCKS") ) { return hx::Val( ACTIVE_UNIFORM_BLOCKS ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_MATRIX_STRIDE") ) { return hx::Val( UNIFORM_MATRIX_STRIDE ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_BINDING") ) { return hx::Val( UNIFORM_BLOCK_BINDING ); }
		if (HX_FIELD_EQ(inName,"__renderbufferBinding") ) { return hx::Val( _hx___renderbufferBinding ); }
		if (HX_FIELD_EQ(inName,"bindTransformFeedback") ) { return hx::Val( bindTransformFeedback_dyn() ); }
		if (HX_FIELD_EQ(inName,"blendEquationSeparate") ) { return hx::Val( blendEquationSeparate_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawElementsInstanced") ) { return hx::Val( drawElementsInstanced_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSamplerParameterfv") ) { return hx::Val( getSamplerParameterfv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSamplerParameteriv") ) { return hx::Val( getSamplerParameteriv_dyn() ); }
		if (HX_FIELD_EQ(inName,"invalidateFramebuffer") ) { return hx::Val( invalidateFramebuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"releaseShaderCompiler") ) { return hx::Val( releaseShaderCompiler_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_WRITEMASK") ) { return hx::Val( STENCIL_BACK_WRITEMASK ); }
		if (HX_FIELD_EQ(inName,"SAMPLE_COVERAGE_INVERT") ) { return hx::Val( SAMPLE_COVERAGE_INVERT ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_SHORT_4_4_4_4") ) { return hx::Val( UNSIGNED_SHORT_4_4_4_4 ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_SHORT_5_5_5_1") ) { return hx::Val( UNSIGNED_SHORT_5_5_5_1 ); }
		if (HX_FIELD_EQ(inName,"NEAREST_MIPMAP_NEAREST") ) { return hx::Val( NEAREST_MIPMAP_NEAREST ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_BLUE_SIZE") ) { return hx::Val( RENDERBUFFER_BLUE_SIZE ); }
		if (HX_FIELD_EQ(inName,"MAX_VARYING_COMPONENTS") ) { return hx::Val( MAX_VARYING_COMPONENTS ); }
		if (HX_FIELD_EQ(inName,"COMPARE_REF_TO_TEXTURE") ) { return hx::Val( COMPARE_REF_TO_TEXTURE ); }
		if (HX_FIELD_EQ(inName,"QUERY_RESULT_AVAILABLE") ) { return hx::Val( QUERY_RESULT_AVAILABLE ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_BUFFER_BINDING") ) { return hx::Val( UNIFORM_BUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"MAX_UNIFORM_BLOCK_SIZE") ) { return hx::Val( MAX_UNIFORM_BLOCK_SIZE ); }
		if (HX_FIELD_EQ(inName,"__elementBufferBinding") ) { return hx::Val( _hx___elementBufferBinding ); }
		if (HX_FIELD_EQ(inName,"beginTransformFeedback") ) { return hx::Val( beginTransformFeedback_dyn() ); }
		if (HX_FIELD_EQ(inName,"checkFramebufferStatus") ) { return hx::Val( checkFramebufferStatus_dyn() ); }
		if (HX_FIELD_EQ(inName,"getActiveUniformBlocki") ) { return hx::Val( getActiveUniformBlocki_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBufferParameteri64v") ) { return hx::Val( getBufferParameteri64v_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSupportedExtensions") ) { return hx::Val( getSupportedExtensions_dyn() ); }
		if (HX_FIELD_EQ(inName,"pauseTransformFeedback") ) { return hx::Val( pauseTransformFeedback_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"STENCIL_PASS_DEPTH_FAIL") ) { return hx::Val( STENCIL_PASS_DEPTH_FAIL ); }
		if (HX_FIELD_EQ(inName,"STENCIL_PASS_DEPTH_PASS") ) { return hx::Val( STENCIL_PASS_DEPTH_PASS ); }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_VALUE_MASK") ) { return hx::Val( STENCIL_BACK_VALUE_MASK ); }
		if (HX_FIELD_EQ(inName,"MAX_TEXTURE_IMAGE_UNITS") ) { return hx::Val( MAX_TEXTURE_IMAGE_UNITS ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_GREEN_SIZE") ) { return hx::Val( RENDERBUFFER_GREEN_SIZE ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_ALPHA_SIZE") ) { return hx::Val( RENDERBUFFER_ALPHA_SIZE ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_DEPTH_SIZE") ) { return hx::Val( RENDERBUFFER_DEPTH_SIZE ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_UNSUPPORTED") ) { return hx::Val( FRAMEBUFFER_UNSUPPORTED ); }
		if (HX_FIELD_EQ(inName,"MAX_SERVER_WAIT_TIMEOUT") ) { return hx::Val( MAX_SERVER_WAIT_TIMEOUT ); }
		if (HX_FIELD_EQ(inName,"SAMPLER_2D_ARRAY_SHADOW") ) { return hx::Val( SAMPLER_2D_ARRAY_SHADOW ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_SAMPLER_2D") ) { return hx::Val( UNSIGNED_INT_SAMPLER_2D ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_SAMPLER_3D") ) { return hx::Val( UNSIGNED_INT_SAMPLER_3D ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_DATA_SIZE") ) { return hx::Val( UNIFORM_BLOCK_DATA_SIZE ); }
		if (HX_FIELD_EQ(inName,"SYNC_FLUSH_COMMANDS_BIT") ) { return hx::Val( SYNC_FLUSH_COMMANDS_BIT ); }
		if (HX_FIELD_EQ(inName,"__textureCubeMapBinding") ) { return hx::Val( _hx___textureCubeMapBinding ); }
		if (HX_FIELD_EQ(inName,"compressedTexSubImage2D") ) { return hx::Val( compressedTexSubImage2D_dyn() ); }
		if (HX_FIELD_EQ(inName,"compressedTexSubImage3D") ) { return hx::Val( compressedTexSubImage3D_dyn() ); }
		if (HX_FIELD_EQ(inName,"createTransformFeedback") ) { return hx::Val( createTransformFeedback_dyn() ); }
		if (HX_FIELD_EQ(inName,"deleteTransformFeedback") ) { return hx::Val( deleteTransformFeedback_dyn() ); }
		if (HX_FIELD_EQ(inName,"enableVertexAttribArray") ) { return hx::Val( enableVertexAttribArray_dyn() ); }
		if (HX_FIELD_EQ(inName,"framebufferRenderbuffer") ) { return hx::Val( framebufferRenderbuffer_dyn() ); }
		if (HX_FIELD_EQ(inName,"framebufferTextureLayer") ) { return hx::Val( framebufferTextureLayer_dyn() ); }
		if (HX_FIELD_EQ(inName,"getActiveUniformBlockiv") ) { return hx::Val( getActiveUniformBlockiv_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVertexAttribPointerv") ) { return hx::Val( getVertexAttribPointerv_dyn() ); }
		if (HX_FIELD_EQ(inName,"resumeTransformFeedback") ) { return hx::Val( resumeTransformFeedback_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"ONE_MINUS_CONSTANT_COLOR") ) { return hx::Val( ONE_MINUS_CONSTANT_COLOR ); }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_CONSTANT_ALPHA") ) { return hx::Val( ONE_MINUS_CONSTANT_ALPHA ); }
		if (HX_FIELD_EQ(inName,"SAMPLE_ALPHA_TO_COVERAGE") ) { return hx::Val( SAMPLE_ALPHA_TO_COVERAGE ); }
		if (HX_FIELD_EQ(inName,"ALIASED_POINT_SIZE_RANGE") ) { return hx::Val( ALIASED_POINT_SIZE_RANGE ); }
		if (HX_FIELD_EQ(inName,"ALIASED_LINE_WIDTH_RANGE") ) { return hx::Val( ALIASED_LINE_WIDTH_RANGE ); }
		if (HX_FIELD_EQ(inName,"SHADING_LANGUAGE_VERSION") ) { return hx::Val( SHADING_LANGUAGE_VERSION ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_BINDING_CUBE_MAP") ) { return hx::Val( TEXTURE_BINDING_CUBE_MAP ); }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_SIZE") ) { return hx::Val( VERTEX_ATTRIB_ARRAY_SIZE ); }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_TYPE") ) { return hx::Val( VERTEX_ATTRIB_ARRAY_TYPE ); }
		if (HX_FIELD_EQ(inName,"DEPTH_STENCIL_ATTACHMENT") ) { return hx::Val( DEPTH_STENCIL_ATTACHMENT ); }
		if (HX_FIELD_EQ(inName,"MAX_ARRAY_TEXTURE_LAYERS") ) { return hx::Val( MAX_ARRAY_TEXTURE_LAYERS ); }
		if (HX_FIELD_EQ(inName,"MIN_PROGRAM_TEXEL_OFFSET") ) { return hx::Val( MIN_PROGRAM_TEXEL_OFFSET ); }
		if (HX_FIELD_EQ(inName,"MAX_PROGRAM_TEXEL_OFFSET") ) { return hx::Val( MAX_PROGRAM_TEXEL_OFFSET ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_BINDING_2D_ARRAY") ) { return hx::Val( TEXTURE_BINDING_2D_ARRAY ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_IMMUTABLE_FORMAT") ) { return hx::Val( TEXTURE_IMMUTABLE_FORMAT ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_IMMUTABLE_LEVELS") ) { return hx::Val( TEXTURE_IMMUTABLE_LEVELS ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_5_9_9_9_REV") ) { return hx::Val( UNSIGNED_INT_5_9_9_9_REV ); }
		if (HX_FIELD_EQ(inName,"COPY_READ_BUFFER_BINDING") ) { return hx::Val( COPY_READ_BUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"DRAW_FRAMEBUFFER_BINDING") ) { return hx::Val( DRAW_FRAMEBUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"READ_FRAMEBUFFER_BINDING") ) { return hx::Val( READ_FRAMEBUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"disableVertexAttribArray") ) { return hx::Val( disableVertexAttribArray_dyn() ); }
		if (HX_FIELD_EQ(inName,"getRenderbufferParameter") ) { return hx::Val( getRenderbufferParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"getShaderPrecisionFormat") ) { return hx::Val( getShaderPrecisionFormat_dyn() ); }
		if (HX_FIELD_EQ(inName,"invalidateSubFramebuffer") ) { return hx::Val( invalidateSubFramebuffer_dyn() ); }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"MAX_CUBE_MAP_TEXTURE_SIZE") ) { return hx::Val( MAX_CUBE_MAP_TEXTURE_SIZE ); }
		if (HX_FIELD_EQ(inName,"VERTEX_PROGRAM_POINT_SIZE") ) { return hx::Val( VERTEX_PROGRAM_POINT_SIZE ); }
		if (HX_FIELD_EQ(inName,"NUM_SHADER_BINARY_FORMATS") ) { return hx::Val( NUM_SHADER_BINARY_FORMATS ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_STENCIL_SIZE") ) { return hx::Val( RENDERBUFFER_STENCIL_SIZE ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_SAMPLER_CUBE") ) { return hx::Val( UNSIGNED_INT_SAMPLER_CUBE ); }
		if (HX_FIELD_EQ(inName,"PIXEL_PACK_BUFFER_BINDING") ) { return hx::Val( PIXEL_PACK_BUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"COPY_WRITE_BUFFER_BINDING") ) { return hx::Val( COPY_WRITE_BUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BUFFER") ) { return hx::Val( TRANSFORM_FEEDBACK_BUFFER ); }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_PAUSED") ) { return hx::Val( TRANSFORM_FEEDBACK_PAUSED ); }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_ACTIVE") ) { return hx::Val( TRANSFORM_FEEDBACK_ACTIVE ); }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_UNIFORM_BLOCKS") ) { return hx::Val( MAX_VERTEX_UNIFORM_BLOCKS ); }
		if (HX_FIELD_EQ(inName,"getActiveUniformBlockName") ) { return hx::Val( getActiveUniformBlockName_dyn() ); }
		if (HX_FIELD_EQ(inName,"getRenderbufferParameteri") ) { return hx::Val( getRenderbufferParameteri_dyn() ); }
		if (HX_FIELD_EQ(inName,"transformFeedbackVaryings") ) { return hx::Val( transformFeedbackVaryings_dyn() ); }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"COMPRESSED_TEXTURE_FORMATS") ) { return hx::Val( COMPRESSED_TEXTURE_FORMATS ); }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_UNIFORM_VECTORS") ) { return hx::Val( MAX_VERTEX_UNIFORM_VECTORS ); }
		if (HX_FIELD_EQ(inName,"ACTIVE_UNIFORMS_MAX_LENGTH") ) { return hx::Val( ACTIVE_UNIFORMS_MAX_LENGTH ); }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_STRIDE") ) { return hx::Val( VERTEX_ATTRIB_ARRAY_STRIDE ); }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BINDING") ) { return hx::Val( TRANSFORM_FEEDBACK_BINDING ); }
		if (HX_FIELD_EQ(inName,"SYNC_GPU_COMMANDS_COMPLETE") ) { return hx::Val( SYNC_GPU_COMMANDS_COMPLETE ); }
		if (HX_FIELD_EQ(inName,"getInternalformatParameter") ) { return hx::Val( getInternalformatParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"getRenderbufferParameteriv") ) { return hx::Val( getRenderbufferParameteriv_dyn() ); }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_POSITIVE_X") ) { return hx::Val( TEXTURE_CUBE_MAP_POSITIVE_X ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_NEGATIVE_X") ) { return hx::Val( TEXTURE_CUBE_MAP_NEGATIVE_X ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_POSITIVE_Y") ) { return hx::Val( TEXTURE_CUBE_MAP_POSITIVE_Y ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_NEGATIVE_Y") ) { return hx::Val( TEXTURE_CUBE_MAP_NEGATIVE_Y ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_POSITIVE_Z") ) { return hx::Val( TEXTURE_CUBE_MAP_POSITIVE_Z ); }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_NEGATIVE_Z") ) { return hx::Val( TEXTURE_CUBE_MAP_NEGATIVE_Z ); }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_ENABLED") ) { return hx::Val( VERTEX_ATTRIB_ARRAY_ENABLED ); }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_POINTER") ) { return hx::Val( VERTEX_ATTRIB_ARRAY_POINTER ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_2_10_10_10_REV") ) { return hx::Val( UNSIGNED_INT_2_10_10_10_REV ); }
		if (HX_FIELD_EQ(inName,"PIXEL_UNPACK_BUFFER_BINDING") ) { return hx::Val( PIXEL_UNPACK_BUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_INTEGER") ) { return hx::Val( VERTEX_ATTRIB_ARRAY_INTEGER ); }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_DIVISOR") ) { return hx::Val( VERTEX_ATTRIB_ARRAY_DIVISOR ); }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_VARYINGS") ) { return hx::Val( TRANSFORM_FEEDBACK_VARYINGS ); }
		if (HX_FIELD_EQ(inName,"MAX_FRAGMENT_UNIFORM_BLOCKS") ) { return hx::Val( MAX_FRAGMENT_UNIFORM_BLOCKS ); }
		if (HX_FIELD_EQ(inName,"MAX_COMBINED_UNIFORM_BLOCKS") ) { return hx::Val( MAX_COMBINED_UNIFORM_BLOCKS ); }
		if (HX_FIELD_EQ(inName,"MAX_UNIFORM_BUFFER_BINDINGS") ) { return hx::Val( MAX_UNIFORM_BUFFER_BINDINGS ); }
		if (HX_FIELD_EQ(inName,"getTransformFeedbackVarying") ) { return hx::Val( getTransformFeedbackVarying_dyn() ); }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"ELEMENT_ARRAY_BUFFER_BINDING") ) { return hx::Val( ELEMENT_ARRAY_BUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_PASS_DEPTH_FAIL") ) { return hx::Val( STENCIL_BACK_PASS_DEPTH_FAIL ); }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_PASS_DEPTH_PASS") ) { return hx::Val( STENCIL_BACK_PASS_DEPTH_PASS ); }
		if (HX_FIELD_EQ(inName,"MAX_FRAGMENT_UNIFORM_VECTORS") ) { return hx::Val( MAX_FRAGMENT_UNIFORM_VECTORS ); }
		if (HX_FIELD_EQ(inName,"ACTIVE_ATTRIBUTES_MAX_LENGTH") ) { return hx::Val( ACTIVE_ATTRIBUTES_MAX_LENGTH ); }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_INTERNAL_FORMAT") ) { return hx::Val( RENDERBUFFER_INTERNAL_FORMAT ); }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_OUTPUT_COMPONENTS") ) { return hx::Val( MAX_VERTEX_OUTPUT_COMPONENTS ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_10F_11F_11F_REV") ) { return hx::Val( UNSIGNED_INT_10F_11F_11F_REV ); }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"INVALID_FRAMEBUFFER_OPERATION") ) { return hx::Val( INVALID_FRAMEBUFFER_OPERATION ); }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_UNIFORM_COMPONENTS") ) { return hx::Val( MAX_VERTEX_UNIFORM_COMPONENTS ); }
		if (HX_FIELD_EQ(inName,"MAX_FRAGMENT_INPUT_COMPONENTS") ) { return hx::Val( MAX_FRAGMENT_INPUT_COMPONENTS ); }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_SAMPLER_2D_ARRAY") ) { return hx::Val( UNSIGNED_INT_SAMPLER_2D_ARRAY ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_ACTIVE_UNIFORMS") ) { return hx::Val( UNIFORM_BLOCK_ACTIVE_UNIFORMS ); }
		if (HX_FIELD_EQ(inName,"MAX_CLIENT_WAIT_TIMEOUT_WEBGL") ) { return hx::Val( MAX_CLIENT_WAIT_TIMEOUT_WEBGL ); }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"NUM_COMPRESSED_TEXTURE_FORMATS") ) { return hx::Val( NUM_COMPRESSED_TEXTURE_FORMATS ); }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_TEXTURE_IMAGE_UNITS") ) { return hx::Val( MAX_VERTEX_TEXTURE_IMAGE_UNITS ); }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_NORMALIZED") ) { return hx::Val( VERTEX_ATTRIB_ARRAY_NORMALIZED ); }
		if (HX_FIELD_EQ(inName,"IMPLEMENTATION_COLOR_READ_TYPE") ) { return hx::Val( IMPLEMENTATION_COLOR_READ_TYPE ); }
		if (HX_FIELD_EQ(inName,"UNPACK_PREMULTIPLY_ALPHA_WEBGL") ) { return hx::Val( UNPACK_PREMULTIPLY_ALPHA_WEBGL ); }
		if (HX_FIELD_EQ(inName,"FLOAT_32_UNSIGNED_INT_24_8_REV") ) { return hx::Val( FLOAT_32_UNSIGNED_INT_24_8_REV ); }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BUFFER_MODE") ) { return hx::Val( TRANSFORM_FEEDBACK_BUFFER_MODE ); }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BUFFER_SIZE") ) { return hx::Val( TRANSFORM_FEEDBACK_BUFFER_SIZE ); }
		if (HX_FIELD_EQ(inName,"getActiveUniformBlockParameter") ) { return hx::Val( getActiveUniformBlockParameter_dyn() ); }
		if (HX_FIELD_EQ(inName,"renderbufferStorageMultisample") ) { return hx::Val( renderbufferStorageMultisample_dyn() ); }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"MAX_FRAGMENT_UNIFORM_COMPONENTS") ) { return hx::Val( MAX_FRAGMENT_UNIFORM_COMPONENTS ); }
		if (HX_FIELD_EQ(inName,"FRAGMENT_SHADER_DERIVATIVE_HINT") ) { return hx::Val( FRAGMENT_SHADER_DERIVATIVE_HINT ); }
		if (HX_FIELD_EQ(inName,"ANY_SAMPLES_PASSED_CONSERVATIVE") ) { return hx::Val( ANY_SAMPLES_PASSED_CONSERVATIVE ); }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BUFFER_START") ) { return hx::Val( TRANSFORM_FEEDBACK_BUFFER_START ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_RED_SIZE") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_RED_SIZE ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_BUFFER_OFFSET_ALIGNMENT") ) { return hx::Val( UNIFORM_BUFFER_OFFSET_ALIGNMENT ); }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"MAX_COMBINED_TEXTURE_IMAGE_UNITS") ) { return hx::Val( MAX_COMBINED_TEXTURE_IMAGE_UNITS ); }
		if (HX_FIELD_EQ(inName,"IMPLEMENTATION_COLOR_READ_FORMAT") ) { return hx::Val( IMPLEMENTATION_COLOR_READ_FORMAT ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_BLUE_SIZE ); }
		break;
	case 33:
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT") ) { return hx::Val( FRAMEBUFFER_INCOMPLETE_ATTACHMENT ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_INCOMPLETE_DIMENSIONS") ) { return hx::Val( FRAMEBUFFER_INCOMPLETE_DIMENSIONS ); }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BUFFER_BINDING") ) { return hx::Val( TRANSFORM_FEEDBACK_BUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_GREEN_SIZE ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE ); }
		if (HX_FIELD_EQ(inName,"getFramebufferAttachmentParameter") ) { return hx::Val( getFramebufferAttachmentParameter_dyn() ); }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING") ) { return hx::Val( VERTEX_ATTRIB_ARRAY_BUFFER_BINDING ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_OBJECT_NAME ); }
		if (HX_FIELD_EQ(inName,"UNPACK_COLORSPACE_CONVERSION_WEBGL") ) { return hx::Val( UNPACK_COLORSPACE_CONVERSION_WEBGL ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE") ) { return hx::Val( FRAMEBUFFER_INCOMPLETE_MULTISAMPLE ); }
		if (HX_FIELD_EQ(inName,"getFramebufferAttachmentParameteri") ) { return hx::Val( getFramebufferAttachmentParameteri_dyn() ); }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE ); }
		if (HX_FIELD_EQ(inName,"getFramebufferAttachmentParameteriv") ) { return hx::Val( getFramebufferAttachmentParameteriv_dyn() ); }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES") ) { return hx::Val( UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES ); }
		break;
	case 37:
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN") ) { return hx::Val( TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING ); }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE ); }
		break;
	case 38:
		if (HX_FIELD_EQ(inName,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS") ) { return hx::Val( MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS ); }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS") ) { return hx::Val( MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS ); }
		break;
	case 40:
		if (HX_FIELD_EQ(inName,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS") ) { return hx::Val( MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS ); }
		break;
	case 41:
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT") ) { return hx::Val( FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT ); }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER") ) { return hx::Val( UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER ); }
		break;
	case 42:
		if (HX_FIELD_EQ(inName,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS") ) { return hx::Val( MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS ); }
		break;
	case 43:
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER") ) { return hx::Val( UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER ); }
		break;
	case 44:
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE") ) { return hx::Val( FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE ); }
		break;
	case 45:
		if (HX_FIELD_EQ(inName,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS") ) { return hx::Val( MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS ); }
	}
	return super::__Field(inName,inCallProp);
}

bool NativeOpenGLRenderContext_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"__lastContextID") ) { outValue = ( _hx___lastContextID ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"__extensionObjects") ) { outValue = ( _hx___extensionObjects ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"__supportedExtensions") ) { outValue = ( _hx___supportedExtensions ); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"__extensionObjectConstructors") ) { outValue = ( _hx___extensionObjectConstructors ); return true; }
	}
	return false;
}

hx::Val NativeOpenGLRenderContext_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"CW") ) { CW=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"R8") ) { R8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG") ) { RG=inValue.Cast< int >(); return inValue; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"ONE") ) { ONE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CCW") ) { CCW=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INT") ) { INT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB") ) { RGB=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RED") ) { RED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG8") ) { RG8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"R8I") ) { R8I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MIN") ) { MIN=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX") ) { MAX=inValue.Cast< int >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"ZERO") ) { ZERO=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BACK") ) { BACK=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BYTE") ) { BYTE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA") ) { RGBA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LESS") ) { LESS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"KEEP") ) { KEEP=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INCR") ) { INCR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DECR") ) { DECR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BOOL") ) { BOOL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NONE") ) { NONE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB8") ) { RGB8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SRGB") ) { SRGB=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"R16F") ) { R16F=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"R32F") ) { R32F=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"R8UI") ) { R8UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"R16I") ) { R16I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"R32I") ) { R32I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG8I") ) { RG8I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"type") ) { type=inValue.Cast< ::String >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"LINES") ) { LINES=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRONT") ) { FRONT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BLEND") ) { BLEND=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SHORT") ) { SHORT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT") ) { FLOAT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FIXED") ) { FIXED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ALPHA") ) { ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NEVER") ) { NEVER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"EQUAL") ) { EQUAL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA4") ) { RGBA4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA8") ) { RGBA8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SRGB8") ) { SRGB8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB8I") ) { RGB8I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG16F") ) { RG16F=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG32F") ) { RG32F=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"R16UI") ) { R16UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"R32UI") ) { R32UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG8UI") ) { RG8UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG16I") ) { RG16I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG32I") ) { RG32I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR") ) { COLOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH") ) { DEPTH=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"POINTS") ) { POINTS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DITHER") ) { DITHER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NICEST") ) { NICEST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LEQUAL") ) { LEQUAL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"GEQUAL") ) { GEQUAL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ALWAYS") ) { ALWAYS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INVERT") ) { INVERT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VENDOR") ) { VENDOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LINEAR") ) { LINEAR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"REPEAT") ) { REPEAT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB565") ) { RGB565=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB32F") ) { RGB32F=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB16F") ) { RGB16F=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB8UI") ) { RGB8UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB32I") ) { RGB32I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB16I") ) { RGB16I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA8I") ) { RGBA8I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG16UI") ) { RG16UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG32UI") ) { RG32UI=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"SAMPLES") ) { SAMPLES=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FASTEST") ) { FASTEST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"GREATER") ) { GREATER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"REPLACE") ) { REPLACE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERSION") ) { VERSION=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NEAREST") ) { NEAREST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE") ) { TEXTURE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LOW_INT") ) { LOW_INT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB5_A1") ) { RGB5_A1=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA32F") ) { RGBA32F=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA16F") ) { RGBA16F=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB9_E5") ) { RGB9_E5=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB32UI") ) { RGB32UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB16UI") ) { RGB16UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA8UI") ) { RGBA8UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA32I") ) { RGBA32I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA16I") ) { RGBA16I=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL") ) { STENCIL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"version") ) { version=inValue.Cast< Float >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"FUNC_ADD") ) { FUNC_ADD=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NO_ERROR") ) { NO_ERROR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VIEWPORT") ) { VIEWPORT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RED_BITS") ) { RED_BITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NOTEQUAL") ) { NOTEQUAL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERER") ) { RENDERER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE0") ) { TEXTURE0=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE1") ) { TEXTURE1=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE2") ) { TEXTURE2=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE3") ) { TEXTURE3=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE4") ) { TEXTURE4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE5") ) { TEXTURE5=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE6") ) { TEXTURE6=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE7") ) { TEXTURE7=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE8") ) { TEXTURE8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE9") ) { TEXTURE9=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INT_VEC2") ) { INT_VEC2=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INT_VEC3") ) { INT_VEC3=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INT_VEC4") ) { INT_VEC4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"HIGH_INT") ) { HIGH_INT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB10_A2") ) { RGB10_A2=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA32UI") ) { RGBA32UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA16UI") ) { RGBA16UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"R8_SNORM") ) { R8_SNORM=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SIGNALED") ) { SIGNALED=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"LINE_LOOP") ) { LINE_LOOP=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TRIANGLES") ) { TRIANGLES=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SRC_COLOR") ) { SRC_COLOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SRC_ALPHA") ) { SRC_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DST_ALPHA") ) { DST_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DST_COLOR") ) { DST_COLOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CULL_FACE") ) { CULL_FACE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BLUE_BITS") ) { BLUE_BITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DONT_CARE") ) { DONT_CARE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LUMINANCE") ) { LUMINANCE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INCR_WRAP") ) { INCR_WRAP=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DECR_WRAP") ) { DECR_WRAP=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE10") ) { TEXTURE10=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE11") ) { TEXTURE11=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE12") ) { TEXTURE12=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE13") ) { TEXTURE13=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE14") ) { TEXTURE14=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE15") ) { TEXTURE15=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE16") ) { TEXTURE16=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE17") ) { TEXTURE17=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE18") ) { TEXTURE18=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE19") ) { TEXTURE19=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE20") ) { TEXTURE20=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE21") ) { TEXTURE21=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE22") ) { TEXTURE22=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE23") ) { TEXTURE23=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE24") ) { TEXTURE24=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE25") ) { TEXTURE25=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE26") ) { TEXTURE26=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE27") ) { TEXTURE27=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE28") ) { TEXTURE28=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE29") ) { TEXTURE29=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE30") ) { TEXTURE30=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE31") ) { TEXTURE31=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BOOL_VEC2") ) { BOOL_VEC2=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BOOL_VEC3") ) { BOOL_VEC3=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BOOL_VEC4") ) { BOOL_VEC4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LOW_FLOAT") ) { LOW_FLOAT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG8_SNORM") ) { RG8_SNORM=inValue.Cast< int >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"LINE_STRIP") ) { LINE_STRIP=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_2D") ) { TEXTURE_2D=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_TEST") ) { DEPTH_TEST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LINE_WIDTH") ) { LINE_WIDTH=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRONT_FACE") ) { FRONT_FACE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_FUNC") ) { DEPTH_FUNC=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"GREEN_BITS") ) { GREEN_BITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ALPHA_BITS") ) { ALPHA_BITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_BITS") ) { DEPTH_BITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"EXTENSIONS") ) { EXTENSIONS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_VEC2") ) { FLOAT_VEC2=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_VEC3") ) { FLOAT_VEC3=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_VEC4") ) { FLOAT_VEC4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT2") ) { FLOAT_MAT2=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT3") ) { FLOAT_MAT3=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT4") ) { FLOAT_MAT4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLER_2D") ) { SAMPLER_2D=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"HIGH_FLOAT") ) { HIGH_FLOAT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MEDIUM_INT") ) { MEDIUM_INT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_3D") ) { TEXTURE_3D=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB8_SNORM") ) { RGB8_SNORM=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB10_A2UI") ) { RGB10_A2UI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"HALF_FLOAT") ) { HALF_FLOAT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RG_INTEGER") ) { RG_INTEGER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLER_3D") ) { SAMPLER_3D=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SYNC_FLAGS") ) { SYNC_FLAGS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SYNC_FENCE") ) { SYNC_FENCE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNALED") ) { UNSIGNALED=inValue.Cast< int >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"BLEND_COLOR") ) { BLEND_COLOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STREAM_DRAW") ) { STREAM_DRAW=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STATIC_DRAW") ) { STATIC_DRAW=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BUFFER_SIZE") ) { BUFFER_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_RANGE") ) { DEPTH_RANGE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_REF") ) { STENCIL_REF=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SCISSOR_BOX") ) { SCISSOR_BOX=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SHADER_TYPE") ) { SHADER_TYPE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LINK_STATUS") ) { LINK_STATUS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER") ) { FRAMEBUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"READ_BUFFER") ) { READ_BUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RED_INTEGER") ) { RED_INTEGER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGB_INTEGER") ) { RGB_INTEGER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA8_SNORM") ) { RGBA8_SNORM=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_SAMPLES") ) { MAX_SAMPLES=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"OBJECT_TYPE") ) { OBJECT_TYPE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SYNC_STATUS") ) { SYNC_STATUS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"WAIT_FAILED") ) { WAIT_FAILED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STREAM_READ") ) { STREAM_READ=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STREAM_COPY") ) { STREAM_COPY=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STATIC_READ") ) { STATIC_READ=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STATIC_COPY") ) { STATIC_COPY=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__contextID") ) { _hx___contextID=inValue.Cast< int >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"TRIANGLE_FAN") ) { TRIANGLE_FAN=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ARRAY_BUFFER") ) { ARRAY_BUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DYNAMIC_DRAW") ) { DYNAMIC_DRAW=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BUFFER_USAGE") ) { BUFFER_USAGE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_TEST") ) { STENCIL_TEST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SCISSOR_TEST") ) { SCISSOR_TEST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INVALID_ENUM") ) { INVALID_ENUM=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_FUNC") ) { STENCIL_FUNC=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_FAIL") ) { STENCIL_FAIL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_BITS") ) { STENCIL_BITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT") ) { UNSIGNED_INT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLER_CUBE") ) { SAMPLER_CUBE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"POINT_SPRITE") ) { POINT_SPRITE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MEDIUM_FLOAT") ) { MEDIUM_FLOAT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER") ) { RENDERBUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SRGB8_ALPHA8") ) { SRGB8_ALPHA8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RGBA_INTEGER") ) { RGBA_INTEGER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"QUERY_RESULT") ) { QUERY_RESULT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER0") ) { DRAW_BUFFER0=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER1") ) { DRAW_BUFFER1=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER2") ) { DRAW_BUFFER2=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER3") ) { DRAW_BUFFER3=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER4") ) { DRAW_BUFFER4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER5") ) { DRAW_BUFFER5=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER6") ) { DRAW_BUFFER6=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER7") ) { DRAW_BUFFER7=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER8") ) { DRAW_BUFFER8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER9") ) { DRAW_BUFFER9=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT2x3") ) { FLOAT_MAT2x3=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT2x4") ) { FLOAT_MAT2x4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT3x2") ) { FLOAT_MAT3x2=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT3x4") ) { FLOAT_MAT3x4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT4x2") ) { FLOAT_MAT4x2=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_MAT4x3") ) { FLOAT_MAT4x3=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_TYPE") ) { UNIFORM_TYPE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_SIZE") ) { UNIFORM_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DYNAMIC_READ") ) { DYNAMIC_READ=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DYNAMIC_COPY") ) { DYNAMIC_COPY=inValue.Cast< int >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"FUNC_SUBTRACT") ) { FUNC_SUBTRACT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BLEND_DST_RGB") ) { BLEND_DST_RGB=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BLEND_SRC_RGB") ) { BLEND_SRC_RGB=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INVALID_VALUE") ) { INVALID_VALUE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"OUT_OF_MEMORY") ) { OUT_OF_MEMORY=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SUBPIXEL_BITS") ) { SUBPIXEL_BITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_BYTE") ) { UNSIGNED_BYTE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_SHADER") ) { VERTEX_SHADER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DELETE_STATUS") ) { DELETE_STATUS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CLAMP_TO_EDGE") ) { CLAMP_TO_EDGE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_INDEX") ) { STENCIL_INDEX=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_STENCIL") ) { DEPTH_STENCIL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CURRENT_QUERY") ) { CURRENT_QUERY=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER10") ) { DRAW_BUFFER10=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER11") ) { DRAW_BUFFER11=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER12") ) { DRAW_BUFFER12=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER13") ) { DRAW_BUFFER13=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER14") ) { DRAW_BUFFER14=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_BUFFER15") ) { DRAW_BUFFER15=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INVALID_INDEX") ) { INVALID_INDEX=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__initialized") ) { _hx___initialized=inValue.Cast< bool >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"TRIANGLE_STRIP") ) { TRIANGLE_STRIP=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BLEND_EQUATION") ) { BLEND_EQUATION=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CONSTANT_COLOR") ) { CONSTANT_COLOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CONSTANT_ALPHA") ) { CONSTANT_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRONT_AND_BACK") ) { FRONT_AND_BACK=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CULL_FACE_MODE") ) { CULL_FACE_MODE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"PACK_ALIGNMENT") ) { PACK_ALIGNMENT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLE_BUFFERS") ) { SAMPLE_BUFFERS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_SHORT") ) { UNSIGNED_SHORT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_WRAP_S") ) { TEXTURE_WRAP_S=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_WRAP_T") ) { TEXTURE_WRAP_T=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ACTIVE_TEXTURE") ) { ACTIVE_TEXTURE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COMPILE_STATUS") ) { COMPILE_STATUS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_INDEX8") ) { STENCIL_INDEX8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"PACK_SKIP_ROWS") ) { PACK_SKIP_ROWS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_WRAP_R") ) { TEXTURE_WRAP_R=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"R11F_G11F_B10F") ) { R11F_G11F_B10F=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INT_SAMPLER_2D") ) { INT_SAMPLER_2D=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INT_SAMPLER_3D") ) { INT_SAMPLER_3D=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_BUFFER") ) { UNIFORM_BUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_OFFSET") ) { UNIFORM_OFFSET=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SYNC_CONDITION") ) { SYNC_CONDITION=inValue.Cast< int >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"BLEND_DST_ALPHA") ) { BLEND_DST_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BLEND_SRC_ALPHA") ) { BLEND_SRC_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLE_COVERAGE") ) { SAMPLE_COVERAGE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_WRITEMASK") ) { DEPTH_WRITEMASK=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_WRITEMASK") ) { COLOR_WRITEMASK=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_COMPONENT") ) { DEPTH_COMPONENT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LUMINANCE_ALPHA") ) { LUMINANCE_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAGMENT_SHADER") ) { FRAGMENT_SHADER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VALIDATE_STATUS") ) { VALIDATE_STATUS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ACTIVE_UNIFORMS") ) { ACTIVE_UNIFORMS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CURRENT_PROGRAM") ) { CURRENT_PROGRAM=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MIRRORED_REPEAT") ) { MIRRORED_REPEAT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INFO_LOG_LENGTH") ) { INFO_LOG_LENGTH=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SHADER_COMPILER") ) { SHADER_COMPILER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"PACK_ROW_LENGTH") ) { PACK_ROW_LENGTH=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_MIN_LOD") ) { TEXTURE_MIN_LOD=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_MAX_LOD") ) { TEXTURE_MAX_LOD=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLER_BINDING") ) { SAMPLER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TIMEOUT_EXPIRED") ) { TIMEOUT_EXPIRED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TIMEOUT_IGNORED") ) { TIMEOUT_IGNORED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__isContextLost") ) { _hx___isContextLost=inValue.Cast< bool >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"DEPTH_BUFFER_BIT") ) { DEPTH_BUFFER_BIT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_BUFFER_BIT") ) { COLOR_BUFFER_BIT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_REF") ) { STENCIL_BACK_REF=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNPACK_ALIGNMENT") ) { UNPACK_ALIGNMENT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_TEXTURE_SIZE") ) { MAX_TEXTURE_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ATTACHED_SHADERS") ) { ATTACHED_SHADERS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP") ) { TEXTURE_CUBE_MAP=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_ATTACHMENT") ) { DEPTH_ATTACHMENT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNPACK_SKIP_ROWS") ) { UNPACK_SKIP_ROWS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"PACK_SKIP_PIXELS") ) { PACK_SKIP_PIXELS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_2D_ARRAY") ) { TEXTURE_2D_ARRAY=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_DRAW_BUFFERS") ) { MAX_DRAW_BUFFERS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLER_2D_ARRAY") ) { SAMPLER_2D_ARRAY=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INT_SAMPLER_CUBE") ) { INT_SAMPLER_CUBE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COPY_READ_BUFFER") ) { COPY_READ_BUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SEPARATE_ATTRIBS") ) { SEPARATE_ATTRIBS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH24_STENCIL8") ) { DEPTH24_STENCIL8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"READ_FRAMEBUFFER") ) { READ_FRAMEBUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_FRAMEBUFFER") ) { DRAW_FRAMEBUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ALREADY_SIGNALED") ) { ALREADY_SIGNALED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__currentProgram") ) { _hx___currentProgram=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"INVALID_OPERATION") ) { INVALID_OPERATION=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_CLEAR_VALUE") ) { DEPTH_CLEAR_VALUE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_WRITEMASK") ) { STENCIL_WRITEMASK=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_FUNC") ) { STENCIL_BACK_FUNC=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_FAIL") ) { STENCIL_BACK_FAIL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_CLEAR_VALUE") ) { COLOR_CLEAR_VALUE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_VIEWPORT_DIMS") ) { MAX_VIEWPORT_DIMS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ACTIVE_ATTRIBUTES") ) { ACTIVE_ATTRIBUTES=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_COMPONENT16") ) { DEPTH_COMPONENT16=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT0") ) { COLOR_ATTACHMENT0=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNPACK_ROW_LENGTH") ) { UNPACK_ROW_LENGTH=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_ELEMENT_INDEX") ) { MAX_ELEMENT_INDEX=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_MAX_LEVEL") ) { TEXTURE_MAX_LEVEL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_24_8") ) { UNSIGNED_INT_24_8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT1") ) { COLOR_ATTACHMENT1=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT2") ) { COLOR_ATTACHMENT2=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT3") ) { COLOR_ATTACHMENT3=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT4") ) { COLOR_ATTACHMENT4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT5") ) { COLOR_ATTACHMENT5=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT6") ) { COLOR_ATTACHMENT6=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT7") ) { COLOR_ATTACHMENT7=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT8") ) { COLOR_ATTACHMENT8=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT9") ) { COLOR_ATTACHMENT9=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLER_2D_SHADOW") ) { SAMPLER_2D_SHADOW=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"PIXEL_PACK_BUFFER") ) { PIXEL_PACK_BUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COPY_WRITE_BUFFER") ) { COPY_WRITE_BUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_VEC2") ) { UNSIGNED_INT_VEC2=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_VEC3") ) { UNSIGNED_INT_VEC3=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_VEC4") ) { UNSIGNED_INT_VEC4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SIGNED_NORMALIZED") ) { SIGNED_NORMALIZED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_COMPONENT24") ) { DEPTH_COMPONENT24=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH32F_STENCIL8") ) { DEPTH32F_STENCIL8=inValue.Cast< int >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"STENCIL_BUFFER_BIT") ) { STENCIL_BUFFER_BIT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SRC_ALPHA_SATURATE") ) { SRC_ALPHA_SATURATE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BLEND_EQUATION_RGB") ) { BLEND_EQUATION_RGB=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_VALUE_MASK") ) { STENCIL_VALUE_MASK=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_BINDING_2D") ) { TEXTURE_BINDING_2D=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_ATTRIBS") ) { MAX_VERTEX_ATTRIBS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_MAG_FILTER") ) { TEXTURE_MAG_FILTER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_MIN_FILTER") ) { TEXTURE_MIN_FILTER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_WIDTH") ) { RENDERBUFFER_WIDTH=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_ATTACHMENT") ) { STENCIL_ATTACHMENT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CONTEXT_LOST_WEBGL") ) { CONTEXT_LOST_WEBGL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNPACK_SKIP_PIXELS") ) { UNPACK_SKIP_PIXELS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_BINDING_3D") ) { TEXTURE_BINDING_3D=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNPACK_SKIP_IMAGES") ) { UNPACK_SKIP_IMAGES=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RASTERIZER_DISCARD") ) { RASTERIZER_DISCARD=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_BASE_LEVEL") ) { TEXTURE_BASE_LEVEL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INT_2_10_10_10_REV") ) { INT_2_10_10_10_REV=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ANY_SAMPLES_PASSED") ) { ANY_SAMPLES_PASSED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT10") ) { COLOR_ATTACHMENT10=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT11") ) { COLOR_ATTACHMENT11=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT12") ) { COLOR_ATTACHMENT12=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT13") ) { COLOR_ATTACHMENT13=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT14") ) { COLOR_ATTACHMENT14=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COLOR_ATTACHMENT15") ) { COLOR_ATTACHMENT15=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK") ) { TRANSFORM_FEEDBACK=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_COMPONENT32F") ) { DEPTH_COMPONENT32F=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__texture2DBinding") ) { _hx___texture2DBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"ONE_MINUS_SRC_COLOR") ) { ONE_MINUS_SRC_COLOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_SRC_ALPHA") ) { ONE_MINUS_SRC_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_DST_ALPHA") ) { ONE_MINUS_DST_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_DST_COLOR") ) { ONE_MINUS_DST_COLOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"POLYGON_OFFSET_FILL") ) { POLYGON_OFFSET_FILL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_CLEAR_VALUE") ) { STENCIL_CLEAR_VALUE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_VARYING_VECTORS") ) { MAX_VARYING_VECTORS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_HEIGHT") ) { RENDERBUFFER_HEIGHT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_BINDING") ) { FRAMEBUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNPACK_FLIP_Y_WEBGL") ) { UNPACK_FLIP_Y_WEBGL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNPACK_IMAGE_HEIGHT") ) { UNPACK_IMAGE_HEIGHT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_3D_TEXTURE_SIZE") ) { MAX_3D_TEXTURE_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLER_CUBE_SHADOW") ) { SAMPLER_CUBE_SHADOW=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"PIXEL_UNPACK_BUFFER") ) { PIXEL_UNPACK_BUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_NORMALIZED") ) { UNSIGNED_NORMALIZED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INTERLEAVED_ATTRIBS") ) { INTERLEAVED_ATTRIBS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_DEFAULT") ) { FRAMEBUFFER_DEFAULT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_BUFFER_SIZE") ) { UNIFORM_BUFFER_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_INDEX") ) { UNIFORM_BLOCK_INDEX=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CONDITION_SATISFIED") ) { CONDITION_SATISFIED=inValue.Cast< int >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"BLEND_EQUATION_ALPHA") ) { BLEND_EQUATION_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ELEMENT_ARRAY_BUFFER") ) { ELEMENT_ARRAY_BUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ARRAY_BUFFER_BINDING") ) { ARRAY_BUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"POLYGON_OFFSET_UNITS") ) { POLYGON_OFFSET_UNITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"GENERATE_MIPMAP_HINT") ) { GENERATE_MIPMAP_HINT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_SHORT_5_6_5") ) { UNSIGNED_SHORT_5_6_5=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LINEAR_MIPMAP_LINEAR") ) { LINEAR_MIPMAP_LINEAR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SHADER_SOURCE_LENGTH") ) { SHADER_SOURCE_LENGTH=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_COMPLETE") ) { FRAMEBUFFER_COMPLETE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_BINDING") ) { RENDERBUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_ELEMENTS_INDICES") ) { MAX_ELEMENTS_INDICES=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_TEXTURE_LOD_BIAS") ) { MAX_TEXTURE_LOD_BIAS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_ARRAY_BINDING") ) { VERTEX_ARRAY_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_COMPARE_MODE") ) { TEXTURE_COMPARE_MODE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_COMPARE_FUNC") ) { TEXTURE_COMPARE_FUNC=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"INT_SAMPLER_2D_ARRAY") ) { INT_SAMPLER_2D_ARRAY=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_SAMPLES") ) { RENDERBUFFER_SAMPLES=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_BUFFER_START") ) { UNIFORM_BUFFER_START=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_ARRAY_STRIDE") ) { UNIFORM_ARRAY_STRIDE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_IS_ROW_MAJOR") ) { UNIFORM_IS_ROW_MAJOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__arrayBufferBinding") ) { _hx___arrayBufferBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__framebufferBinding") ) { _hx___framebufferBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"FUNC_REVERSE_SUBTRACT") ) { FUNC_REVERSE_SUBTRACT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"CURRENT_VERTEX_ATTRIB") ) { CURRENT_VERTEX_ATTRIB=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"POLYGON_OFFSET_FACTOR") ) { POLYGON_OFFSET_FACTOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLE_COVERAGE_VALUE") ) { SAMPLE_COVERAGE_VALUE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"LINEAR_MIPMAP_NEAREST") ) { LINEAR_MIPMAP_NEAREST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NEAREST_MIPMAP_LINEAR") ) { NEAREST_MIPMAP_LINEAR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SHADER_BINARY_FORMATS") ) { SHADER_BINARY_FORMATS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_RED_SIZE") ) { RENDERBUFFER_RED_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_RENDERBUFFER_SIZE") ) { MAX_RENDERBUFFER_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"BROWSER_DEFAULT_WEBGL") ) { BROWSER_DEFAULT_WEBGL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_ELEMENTS_VERTICES") ) { MAX_ELEMENTS_VERTICES=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_COLOR_ATTACHMENTS") ) { MAX_COLOR_ATTACHMENTS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ACTIVE_UNIFORM_BLOCKS") ) { ACTIVE_UNIFORM_BLOCKS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_MATRIX_STRIDE") ) { UNIFORM_MATRIX_STRIDE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_BINDING") ) { UNIFORM_BLOCK_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__renderbufferBinding") ) { _hx___renderbufferBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_WRITEMASK") ) { STENCIL_BACK_WRITEMASK=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLE_COVERAGE_INVERT") ) { SAMPLE_COVERAGE_INVERT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_SHORT_4_4_4_4") ) { UNSIGNED_SHORT_4_4_4_4=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_SHORT_5_5_5_1") ) { UNSIGNED_SHORT_5_5_5_1=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NEAREST_MIPMAP_NEAREST") ) { NEAREST_MIPMAP_NEAREST=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_BLUE_SIZE") ) { RENDERBUFFER_BLUE_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_VARYING_COMPONENTS") ) { MAX_VARYING_COMPONENTS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COMPARE_REF_TO_TEXTURE") ) { COMPARE_REF_TO_TEXTURE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"QUERY_RESULT_AVAILABLE") ) { QUERY_RESULT_AVAILABLE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_BUFFER_BINDING") ) { UNIFORM_BUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_UNIFORM_BLOCK_SIZE") ) { MAX_UNIFORM_BLOCK_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__elementBufferBinding") ) { _hx___elementBufferBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"STENCIL_PASS_DEPTH_FAIL") ) { STENCIL_PASS_DEPTH_FAIL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_PASS_DEPTH_PASS") ) { STENCIL_PASS_DEPTH_PASS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_VALUE_MASK") ) { STENCIL_BACK_VALUE_MASK=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_TEXTURE_IMAGE_UNITS") ) { MAX_TEXTURE_IMAGE_UNITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_GREEN_SIZE") ) { RENDERBUFFER_GREEN_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_ALPHA_SIZE") ) { RENDERBUFFER_ALPHA_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_DEPTH_SIZE") ) { RENDERBUFFER_DEPTH_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_UNSUPPORTED") ) { FRAMEBUFFER_UNSUPPORTED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_SERVER_WAIT_TIMEOUT") ) { MAX_SERVER_WAIT_TIMEOUT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLER_2D_ARRAY_SHADOW") ) { SAMPLER_2D_ARRAY_SHADOW=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_SAMPLER_2D") ) { UNSIGNED_INT_SAMPLER_2D=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_SAMPLER_3D") ) { UNSIGNED_INT_SAMPLER_3D=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_DATA_SIZE") ) { UNIFORM_BLOCK_DATA_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SYNC_FLUSH_COMMANDS_BIT") ) { SYNC_FLUSH_COMMANDS_BIT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__textureCubeMapBinding") ) { _hx___textureCubeMapBinding=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"ONE_MINUS_CONSTANT_COLOR") ) { ONE_MINUS_CONSTANT_COLOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ONE_MINUS_CONSTANT_ALPHA") ) { ONE_MINUS_CONSTANT_ALPHA=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SAMPLE_ALPHA_TO_COVERAGE") ) { SAMPLE_ALPHA_TO_COVERAGE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ALIASED_POINT_SIZE_RANGE") ) { ALIASED_POINT_SIZE_RANGE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ALIASED_LINE_WIDTH_RANGE") ) { ALIASED_LINE_WIDTH_RANGE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SHADING_LANGUAGE_VERSION") ) { SHADING_LANGUAGE_VERSION=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_BINDING_CUBE_MAP") ) { TEXTURE_BINDING_CUBE_MAP=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_SIZE") ) { VERTEX_ATTRIB_ARRAY_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_TYPE") ) { VERTEX_ATTRIB_ARRAY_TYPE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DEPTH_STENCIL_ATTACHMENT") ) { DEPTH_STENCIL_ATTACHMENT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_ARRAY_TEXTURE_LAYERS") ) { MAX_ARRAY_TEXTURE_LAYERS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MIN_PROGRAM_TEXEL_OFFSET") ) { MIN_PROGRAM_TEXEL_OFFSET=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_PROGRAM_TEXEL_OFFSET") ) { MAX_PROGRAM_TEXEL_OFFSET=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_BINDING_2D_ARRAY") ) { TEXTURE_BINDING_2D_ARRAY=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_IMMUTABLE_FORMAT") ) { TEXTURE_IMMUTABLE_FORMAT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_IMMUTABLE_LEVELS") ) { TEXTURE_IMMUTABLE_LEVELS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_5_9_9_9_REV") ) { UNSIGNED_INT_5_9_9_9_REV=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COPY_READ_BUFFER_BINDING") ) { COPY_READ_BUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"DRAW_FRAMEBUFFER_BINDING") ) { DRAW_FRAMEBUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"READ_FRAMEBUFFER_BINDING") ) { READ_FRAMEBUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"MAX_CUBE_MAP_TEXTURE_SIZE") ) { MAX_CUBE_MAP_TEXTURE_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_PROGRAM_POINT_SIZE") ) { VERTEX_PROGRAM_POINT_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"NUM_SHADER_BINARY_FORMATS") ) { NUM_SHADER_BINARY_FORMATS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_STENCIL_SIZE") ) { RENDERBUFFER_STENCIL_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_SAMPLER_CUBE") ) { UNSIGNED_INT_SAMPLER_CUBE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"PIXEL_PACK_BUFFER_BINDING") ) { PIXEL_PACK_BUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"COPY_WRITE_BUFFER_BINDING") ) { COPY_WRITE_BUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BUFFER") ) { TRANSFORM_FEEDBACK_BUFFER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_PAUSED") ) { TRANSFORM_FEEDBACK_PAUSED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_ACTIVE") ) { TRANSFORM_FEEDBACK_ACTIVE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_UNIFORM_BLOCKS") ) { MAX_VERTEX_UNIFORM_BLOCKS=inValue.Cast< int >(); return inValue; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"COMPRESSED_TEXTURE_FORMATS") ) { COMPRESSED_TEXTURE_FORMATS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_UNIFORM_VECTORS") ) { MAX_VERTEX_UNIFORM_VECTORS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ACTIVE_UNIFORMS_MAX_LENGTH") ) { ACTIVE_UNIFORMS_MAX_LENGTH=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_STRIDE") ) { VERTEX_ATTRIB_ARRAY_STRIDE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BINDING") ) { TRANSFORM_FEEDBACK_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"SYNC_GPU_COMMANDS_COMPLETE") ) { SYNC_GPU_COMMANDS_COMPLETE=inValue.Cast< int >(); return inValue; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_POSITIVE_X") ) { TEXTURE_CUBE_MAP_POSITIVE_X=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_NEGATIVE_X") ) { TEXTURE_CUBE_MAP_NEGATIVE_X=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_POSITIVE_Y") ) { TEXTURE_CUBE_MAP_POSITIVE_Y=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_NEGATIVE_Y") ) { TEXTURE_CUBE_MAP_NEGATIVE_Y=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_POSITIVE_Z") ) { TEXTURE_CUBE_MAP_POSITIVE_Z=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TEXTURE_CUBE_MAP_NEGATIVE_Z") ) { TEXTURE_CUBE_MAP_NEGATIVE_Z=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_ENABLED") ) { VERTEX_ATTRIB_ARRAY_ENABLED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_POINTER") ) { VERTEX_ATTRIB_ARRAY_POINTER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_2_10_10_10_REV") ) { UNSIGNED_INT_2_10_10_10_REV=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"PIXEL_UNPACK_BUFFER_BINDING") ) { PIXEL_UNPACK_BUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_INTEGER") ) { VERTEX_ATTRIB_ARRAY_INTEGER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_DIVISOR") ) { VERTEX_ATTRIB_ARRAY_DIVISOR=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_VARYINGS") ) { TRANSFORM_FEEDBACK_VARYINGS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_FRAGMENT_UNIFORM_BLOCKS") ) { MAX_FRAGMENT_UNIFORM_BLOCKS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_COMBINED_UNIFORM_BLOCKS") ) { MAX_COMBINED_UNIFORM_BLOCKS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_UNIFORM_BUFFER_BINDINGS") ) { MAX_UNIFORM_BUFFER_BINDINGS=inValue.Cast< int >(); return inValue; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"ELEMENT_ARRAY_BUFFER_BINDING") ) { ELEMENT_ARRAY_BUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_PASS_DEPTH_FAIL") ) { STENCIL_BACK_PASS_DEPTH_FAIL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"STENCIL_BACK_PASS_DEPTH_PASS") ) { STENCIL_BACK_PASS_DEPTH_PASS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_FRAGMENT_UNIFORM_VECTORS") ) { MAX_FRAGMENT_UNIFORM_VECTORS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ACTIVE_ATTRIBUTES_MAX_LENGTH") ) { ACTIVE_ATTRIBUTES_MAX_LENGTH=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"RENDERBUFFER_INTERNAL_FORMAT") ) { RENDERBUFFER_INTERNAL_FORMAT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_OUTPUT_COMPONENTS") ) { MAX_VERTEX_OUTPUT_COMPONENTS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_10F_11F_11F_REV") ) { UNSIGNED_INT_10F_11F_11F_REV=inValue.Cast< int >(); return inValue; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"INVALID_FRAMEBUFFER_OPERATION") ) { INVALID_FRAMEBUFFER_OPERATION=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_UNIFORM_COMPONENTS") ) { MAX_VERTEX_UNIFORM_COMPONENTS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_FRAGMENT_INPUT_COMPONENTS") ) { MAX_FRAGMENT_INPUT_COMPONENTS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNSIGNED_INT_SAMPLER_2D_ARRAY") ) { UNSIGNED_INT_SAMPLER_2D_ARRAY=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_ACTIVE_UNIFORMS") ) { UNIFORM_BLOCK_ACTIVE_UNIFORMS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_CLIENT_WAIT_TIMEOUT_WEBGL") ) { MAX_CLIENT_WAIT_TIMEOUT_WEBGL=inValue.Cast< int >(); return inValue; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"NUM_COMPRESSED_TEXTURE_FORMATS") ) { NUM_COMPRESSED_TEXTURE_FORMATS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"MAX_VERTEX_TEXTURE_IMAGE_UNITS") ) { MAX_VERTEX_TEXTURE_IMAGE_UNITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_NORMALIZED") ) { VERTEX_ATTRIB_ARRAY_NORMALIZED=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"IMPLEMENTATION_COLOR_READ_TYPE") ) { IMPLEMENTATION_COLOR_READ_TYPE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNPACK_PREMULTIPLY_ALPHA_WEBGL") ) { UNPACK_PREMULTIPLY_ALPHA_WEBGL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FLOAT_32_UNSIGNED_INT_24_8_REV") ) { FLOAT_32_UNSIGNED_INT_24_8_REV=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BUFFER_MODE") ) { TRANSFORM_FEEDBACK_BUFFER_MODE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BUFFER_SIZE") ) { TRANSFORM_FEEDBACK_BUFFER_SIZE=inValue.Cast< int >(); return inValue; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"MAX_FRAGMENT_UNIFORM_COMPONENTS") ) { MAX_FRAGMENT_UNIFORM_COMPONENTS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAGMENT_SHADER_DERIVATIVE_HINT") ) { FRAGMENT_SHADER_DERIVATIVE_HINT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ANY_SAMPLES_PASSED_CONSERVATIVE") ) { ANY_SAMPLES_PASSED_CONSERVATIVE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BUFFER_START") ) { TRANSFORM_FEEDBACK_BUFFER_START=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_RED_SIZE") ) { FRAMEBUFFER_ATTACHMENT_RED_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_BUFFER_OFFSET_ALIGNMENT") ) { UNIFORM_BUFFER_OFFSET_ALIGNMENT=inValue.Cast< int >(); return inValue; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"MAX_COMBINED_TEXTURE_IMAGE_UNITS") ) { MAX_COMBINED_TEXTURE_IMAGE_UNITS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"IMPLEMENTATION_COLOR_READ_FORMAT") ) { IMPLEMENTATION_COLOR_READ_FORMAT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE") ) { FRAMEBUFFER_ATTACHMENT_BLUE_SIZE=inValue.Cast< int >(); return inValue; }
		break;
	case 33:
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT") ) { FRAMEBUFFER_INCOMPLETE_ATTACHMENT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_INCOMPLETE_DIMENSIONS") ) { FRAMEBUFFER_INCOMPLETE_DIMENSIONS=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_BUFFER_BINDING") ) { TRANSFORM_FEEDBACK_BUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE") ) { FRAMEBUFFER_ATTACHMENT_GREEN_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE") ) { FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE") ) { FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE=inValue.Cast< int >(); return inValue; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING") ) { VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE") ) { FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME") ) { FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNPACK_COLORSPACE_CONVERSION_WEBGL") ) { UNPACK_COLORSPACE_CONVERSION_WEBGL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE") ) { FRAMEBUFFER_INCOMPLETE_MULTISAMPLE=inValue.Cast< int >(); return inValue; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE") ) { FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE=inValue.Cast< int >(); return inValue; }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL") ) { FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER") ) { FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES") ) { UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES=inValue.Cast< int >(); return inValue; }
		break;
	case 37:
		if (HX_FIELD_EQ(inName,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN") ) { TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING") ) { FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE") ) { FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE=inValue.Cast< int >(); return inValue; }
		break;
	case 38:
		if (HX_FIELD_EQ(inName,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS") ) { MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS=inValue.Cast< int >(); return inValue; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS") ) { MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS=inValue.Cast< int >(); return inValue; }
		break;
	case 40:
		if (HX_FIELD_EQ(inName,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS") ) { MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS=inValue.Cast< int >(); return inValue; }
		break;
	case 41:
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT") ) { FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER") ) { UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER=inValue.Cast< int >(); return inValue; }
		break;
	case 42:
		if (HX_FIELD_EQ(inName,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS") ) { MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS=inValue.Cast< int >(); return inValue; }
		break;
	case 43:
		if (HX_FIELD_EQ(inName,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER") ) { UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER=inValue.Cast< int >(); return inValue; }
		break;
	case 44:
		if (HX_FIELD_EQ(inName,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE") ) { FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=inValue.Cast< int >(); return inValue; }
		break;
	case 45:
		if (HX_FIELD_EQ(inName,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS") ) { MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool NativeOpenGLRenderContext_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"__lastContextID") ) { _hx___lastContextID=ioValue.Cast< int >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"__extensionObjects") ) { _hx___extensionObjects=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"__supportedExtensions") ) { _hx___supportedExtensions=ioValue.Cast< ::Array< ::String > >(); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"__extensionObjectConstructors") ) { _hx___extensionObjectConstructors=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
	}
	return false;
}

void NativeOpenGLRenderContext_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("DEPTH_BUFFER_BIT",ca,5b,ce,c6));
	outFields->push(HX_("STENCIL_BUFFER_BIT",71,93,29,de));
	outFields->push(HX_("COLOR_BUFFER_BIT",6a,f7,74,fb));
	outFields->push(HX_("POINTS",23,be,b0,a9));
	outFields->push(HX_("LINES",df,15,f0,f2));
	outFields->push(HX_("LINE_LOOP",cf,55,c1,16));
	outFields->push(HX_("LINE_STRIP",ed,20,88,dd));
	outFields->push(HX_("TRIANGLES",8b,a0,99,7a));
	outFields->push(HX_("TRIANGLE_STRIP",c1,66,6c,f6));
	outFields->push(HX_("TRIANGLE_FAN",7c,ee,2e,91));
	outFields->push(HX_("ZERO",28,d7,b1,3b));
	outFields->push(HX_("ONE",46,36,3c,00));
	outFields->push(HX_("SRC_COLOR",48,9e,bd,5c));
	outFields->push(HX_("ONE_MINUS_SRC_COLOR",20,3b,e1,48));
	outFields->push(HX_("SRC_ALPHA",43,d4,f7,33));
	outFields->push(HX_("ONE_MINUS_SRC_ALPHA",1b,71,1b,20));
	outFields->push(HX_("DST_ALPHA",24,02,f2,d3));
	outFields->push(HX_("ONE_MINUS_DST_ALPHA",fc,9e,15,c0));
	outFields->push(HX_("DST_COLOR",29,cc,b7,fc));
	outFields->push(HX_("ONE_MINUS_DST_COLOR",01,69,db,e8));
	outFields->push(HX_("SRC_ALPHA_SATURATE",ab,e2,3d,33));
	outFields->push(HX_("FUNC_ADD",46,78,17,75));
	outFields->push(HX_("BLEND_EQUATION",9a,14,92,71));
	outFields->push(HX_("BLEND_EQUATION_RGB",88,25,eb,90));
	outFields->push(HX_("BLEND_EQUATION_ALPHA",99,aa,ae,37));
	outFields->push(HX_("FUNC_SUBTRACT",af,c0,a0,17));
	outFields->push(HX_("FUNC_REVERSE_SUBTRACT",cc,8d,ef,f3));
	outFields->push(HX_("BLEND_DST_RGB",05,87,f5,ec));
	outFields->push(HX_("BLEND_SRC_RGB",64,43,8c,2c));
	outFields->push(HX_("BLEND_DST_ALPHA",56,25,32,74));
	outFields->push(HX_("BLEND_SRC_ALPHA",75,f7,37,d4));
	outFields->push(HX_("CONSTANT_COLOR",e8,64,8a,c8));
	outFields->push(HX_("ONE_MINUS_CONSTANT_COLOR",10,39,e7,06));
	outFields->push(HX_("CONSTANT_ALPHA",e3,9a,c4,9f));
	outFields->push(HX_("ONE_MINUS_CONSTANT_ALPHA",0b,6f,21,de));
	outFields->push(HX_("BLEND_COLOR",75,cb,c8,67));
	outFields->push(HX_("ARRAY_BUFFER",46,66,17,f4));
	outFields->push(HX_("ELEMENT_ARRAY_BUFFER",09,05,53,3d));
	outFields->push(HX_("ARRAY_BUFFER_BINDING",ec,d4,a9,79));
	outFields->push(HX_("ELEMENT_ARRAY_BUFFER_BINDING",af,6e,96,a2));
	outFields->push(HX_("STREAM_DRAW",63,7f,28,15));
	outFields->push(HX_("STATIC_DRAW",75,50,2f,ba));
	outFields->push(HX_("DYNAMIC_DRAW",24,04,1f,24));
	outFields->push(HX_("BUFFER_SIZE",a0,7b,91,4c));
	outFields->push(HX_("BUFFER_USAGE",42,05,11,e0));
	outFields->push(HX_("CURRENT_VERTEX_ATTRIB",1f,8c,2f,ab));
	outFields->push(HX_("FRONT",89,50,7c,84));
	outFields->push(HX_("BACK",27,a2,d1,2b));
	outFields->push(HX_("FRONT_AND_BACK",a5,3d,6a,c1));
	outFields->push(HX_("TEXTURE_2D",16,0c,f8,a2));
	outFields->push(HX_("CULL_FACE",8a,a5,f4,cf));
	outFields->push(HX_("BLEND",31,20,e3,32));
	outFields->push(HX_("DITHER",e6,ac,41,70));
	outFields->push(HX_("STENCIL_TEST",d5,dc,69,d5));
	outFields->push(HX_("DEPTH_TEST",6e,6c,25,28));
	outFields->push(HX_("SCISSOR_TEST",b5,be,51,59));
	outFields->push(HX_("POLYGON_OFFSET_FILL",4a,3d,32,ac));
	outFields->push(HX_("SAMPLE_ALPHA_TO_COVERAGE",16,3e,56,e1));
	outFields->push(HX_("SAMPLE_COVERAGE",dd,b7,0e,c1));
	outFields->push(HX_("NO_ERROR",ea,b5,7d,2f));
	outFields->push(HX_("INVALID_ENUM",a9,74,70,13));
	outFields->push(HX_("INVALID_VALUE",a9,e8,26,b0));
	outFields->push(HX_("INVALID_OPERATION",5f,b1,c8,29));
	outFields->push(HX_("OUT_OF_MEMORY",18,f2,97,e1));
	outFields->push(HX_("CW",b4,3a,00,00));
	outFields->push(HX_("CCW",b7,11,33,00));
	outFields->push(HX_("LINE_WIDTH",1b,84,d2,23));
	outFields->push(HX_("ALIASED_POINT_SIZE_RANGE",fe,f6,a4,7b));
	outFields->push(HX_("ALIASED_LINE_WIDTH_RANGE",e9,22,d5,8a));
	outFields->push(HX_("CULL_FACE_MODE",78,bd,87,d1));
	outFields->push(HX_("FRONT_FACE",53,b7,4d,ef));
	outFields->push(HX_("DEPTH_RANGE",01,9a,23,cf));
	outFields->push(HX_("DEPTH_WRITEMASK",8f,37,3f,66));
	outFields->push(HX_("DEPTH_CLEAR_VALUE",23,17,0d,1b));
	outFields->push(HX_("DEPTH_FUNC",60,8f,f0,1e));
	outFields->push(HX_("STENCIL_CLEAR_VALUE",9c,91,82,73));
	outFields->push(HX_("STENCIL_FUNC",c7,ff,34,cc));
	outFields->push(HX_("STENCIL_FAIL",61,ce,25,cc));
	outFields->push(HX_("STENCIL_PASS_DEPTH_FAIL",45,ca,b9,c8));
	outFields->push(HX_("STENCIL_PASS_DEPTH_PASS",38,f5,55,cf));
	outFields->push(HX_("STENCIL_REF",10,6a,a5,3c));
	outFields->push(HX_("STENCIL_VALUE_MASK",9d,58,5e,a0));
	outFields->push(HX_("STENCIL_WRITEMASK",c8,f1,a6,49));
	outFields->push(HX_("STENCIL_BACK_FUNC",39,78,a2,90));
	outFields->push(HX_("STENCIL_BACK_FAIL",d3,46,93,90));
	outFields->push(HX_("STENCIL_BACK_PASS_DEPTH_FAIL",13,23,0e,34));
	outFields->push(HX_("STENCIL_BACK_PASS_DEPTH_PASS",06,4e,aa,3a));
	outFields->push(HX_("STENCIL_BACK_REF",de,45,b8,08));
	outFields->push(HX_("STENCIL_BACK_VALUE_MASK",8f,b2,c4,88));
	outFields->push(HX_("STENCIL_BACK_WRITEMASK",16,9c,15,c2));
	outFields->push(HX_("VIEWPORT",66,dc,2a,f6));
	outFields->push(HX_("SCISSOR_BOX",e8,48,4c,55));
	outFields->push(HX_("COLOR_CLEAR_VALUE",83,a7,2e,f8));
	outFields->push(HX_("COLOR_WRITEMASK",ef,ef,f9,14));
	outFields->push(HX_("UNPACK_ALIGNMENT",b6,2a,2e,4b));
	outFields->push(HX_("PACK_ALIGNMENT",9d,d6,85,c3));
	outFields->push(HX_("MAX_TEXTURE_SIZE",e0,0b,5b,fb));
	outFields->push(HX_("MAX_VIEWPORT_DIMS",a9,2d,fb,08));
	outFields->push(HX_("SUBPIXEL_BITS",1f,ac,14,0a));
	outFields->push(HX_("RED_BITS",14,f8,9e,96));
	outFields->push(HX_("GREEN_BITS",62,a9,9b,94));
	outFields->push(HX_("BLUE_BITS",0b,26,60,a1));
	outFields->push(HX_("ALPHA_BITS",e7,fe,7b,e0));
	outFields->push(HX_("DEPTH_BITS",22,9f,42,1c));
	outFields->push(HX_("STENCIL_BITS",89,0f,87,c9));
	outFields->push(HX_("POLYGON_OFFSET_UNITS",a8,e8,11,a6));
	outFields->push(HX_("POLYGON_OFFSET_FACTOR",56,6b,12,2a));
	outFields->push(HX_("TEXTURE_BINDING_2D",30,ec,98,b1));
	outFields->push(HX_("SAMPLE_BUFFERS",fe,16,71,3c));
	outFields->push(HX_("SAMPLES",e9,98,9d,03));
	outFields->push(HX_("SAMPLE_COVERAGE_VALUE",2f,7a,07,69));
	outFields->push(HX_("SAMPLE_COVERAGE_INVERT",78,52,a5,cd));
	outFields->push(HX_("NUM_COMPRESSED_TEXTURE_FORMATS",33,ae,1c,0d));
	outFields->push(HX_("COMPRESSED_TEXTURE_FORMATS",7a,13,e3,12));
	outFields->push(HX_("DONT_CARE",7f,9b,c1,cf));
	outFields->push(HX_("FASTEST",0a,a3,0d,5e));
	outFields->push(HX_("NICEST",7e,6d,94,64));
	outFields->push(HX_("GENERATE_MIPMAP_HINT",94,d3,d5,83));
	outFields->push(HX_("BYTE",08,e7,e3,2b));
	outFields->push(HX_("UNSIGNED_BYTE",d2,79,6b,01));
	outFields->push(HX_("SHORT",5c,bc,15,fa));
	outFields->push(HX_("UNSIGNED_SHORT",52,9a,2e,fb));
	outFields->push(HX_("INT",cf,a8,37,00));
	outFields->push(HX_("UNSIGNED_INT",45,fd,b9,1c));
	outFields->push(HX_("FLOAT",7c,fd,84,80));
	outFields->push(HX_("FIXED",54,31,90,7e));
	outFields->push(HX_("DEPTH_COMPONENT",01,1f,62,0f));
	outFields->push(HX_("ALPHA",3e,df,84,9f));
	outFields->push(HX_("RGB",ed,76,3e,00));
	outFields->push(HX_("RGBA",b4,98,69,36));
	outFields->push(HX_("LUMINANCE",d8,a7,e0,63));
	outFields->push(HX_("LUMINANCE_ALPHA",57,40,e0,bd));
	outFields->push(HX_("UNSIGNED_SHORT_4_4_4_4",a6,33,71,7b));
	outFields->push(HX_("UNSIGNED_SHORT_5_5_5_1",26,01,6e,38));
	outFields->push(HX_("UNSIGNED_SHORT_5_6_5",75,bb,16,8c));
	outFields->push(HX_("FRAGMENT_SHADER",f4,26,78,e9));
	outFields->push(HX_("VERTEX_SHADER",e0,69,73,49));
	outFields->push(HX_("MAX_VERTEX_ATTRIBS",49,c9,15,5f));
	outFields->push(HX_("MAX_VERTEX_UNIFORM_VECTORS",45,6c,16,5a));
	outFields->push(HX_("MAX_VARYING_VECTORS",06,b9,f7,37));
	outFields->push(HX_("MAX_COMBINED_TEXTURE_IMAGE_UNITS",a8,d1,a6,77));
	outFields->push(HX_("MAX_VERTEX_TEXTURE_IMAGE_UNITS",c7,90,95,2b));
	outFields->push(HX_("MAX_TEXTURE_IMAGE_UNITS",cc,6c,61,54));
	outFields->push(HX_("MAX_FRAGMENT_UNIFORM_VECTORS",71,49,f5,0a));
	outFields->push(HX_("SHADER_TYPE",54,e5,27,87));
	outFields->push(HX_("DELETE_STATUS",06,e4,98,1e));
	outFields->push(HX_("LINK_STATUS",17,18,8f,45));
	outFields->push(HX_("VALIDATE_STATUS",fb,22,07,c6));
	outFields->push(HX_("ATTACHED_SHADERS",73,d2,76,75));
	outFields->push(HX_("ACTIVE_UNIFORMS",98,7d,3a,2c));
	outFields->push(HX_("ACTIVE_UNIFORMS_MAX_LENGTH",08,cb,c9,4d));
	outFields->push(HX_("ACTIVE_ATTRIBUTES",f0,e5,c7,4a));
	outFields->push(HX_("ACTIVE_ATTRIBUTES_MAX_LENGTH",b0,11,b3,ae));
	outFields->push(HX_("SHADING_LANGUAGE_VERSION",e6,c4,ef,70));
	outFields->push(HX_("CURRENT_PROGRAM",fe,28,c0,3f));
	outFields->push(HX_("NEVER",6c,76,1e,17));
	outFields->push(HX_("LESS",59,db,70,32));
	outFields->push(HX_("EQUAL",94,07,71,f0));
	outFields->push(HX_("LEQUAL",c8,73,90,53));
	outFields->push(HX_("GREATER",da,64,94,37));
	outFields->push(HX_("NOTEQUAL",c1,c1,e9,c8));
	outFields->push(HX_("GEQUAL",ed,a5,c7,53));
	outFields->push(HX_("ALWAYS",cf,ba,59,f9));
	outFields->push(HX_("KEEP",85,98,c7,31));
	outFields->push(HX_("REPLACE",14,1c,fc,2a));
	outFields->push(HX_("INCR",d4,fd,7b,30));
	outFields->push(HX_("DECR",70,18,27,2d));
	outFields->push(HX_("INVERT",16,93,5b,52));
	outFields->push(HX_("INCR_WRAP",55,7f,68,2c));
	outFields->push(HX_("DECR_WRAP",39,6f,eb,0a));
	outFields->push(HX_("VENDOR",88,91,19,51));
	outFields->push(HX_("RENDERER",43,55,61,0c));
	outFields->push(HX_("VERSION",f8,ba,c5,fc));
	outFields->push(HX_("EXTENSIONS",14,f0,79,7b));
	outFields->push(HX_("NEAREST",3e,ec,9d,e5));
	outFields->push(HX_("LINEAR",e5,fd,22,9f));
	outFields->push(HX_("NEAREST_MIPMAP_NEAREST",68,b9,63,7e));
	outFields->push(HX_("LINEAR_MIPMAP_NEAREST",a1,9b,a4,65));
	outFields->push(HX_("NEAREST_MIPMAP_LINEAR",fb,83,f2,3b));
	outFields->push(HX_("LINEAR_MIPMAP_LINEAR",e2,8b,f8,99));
	outFields->push(HX_("TEXTURE_MAG_FILTER",88,ff,d5,1e));
	outFields->push(HX_("TEXTURE_MIN_FILTER",69,66,c2,46));
	outFields->push(HX_("TEXTURE_WRAP_S",a2,2d,c3,fe));
	outFields->push(HX_("TEXTURE_WRAP_T",a3,2d,c3,fe));
	outFields->push(HX_("TEXTURE",bb,9c,b4,1e));
	outFields->push(HX_("TEXTURE_CUBE_MAP",36,7a,e1,ad));
	outFields->push(HX_("TEXTURE_BINDING_CUBE_MAP",d0,69,98,75));
	outFields->push(HX_("TEXTURE_CUBE_MAP_POSITIVE_X",bb,1c,ee,24));
	outFields->push(HX_("TEXTURE_CUBE_MAP_NEGATIVE_X",77,03,e2,6b));
	outFields->push(HX_("TEXTURE_CUBE_MAP_POSITIVE_Y",bc,1c,ee,24));
	outFields->push(HX_("TEXTURE_CUBE_MAP_NEGATIVE_Y",78,03,e2,6b));
	outFields->push(HX_("TEXTURE_CUBE_MAP_POSITIVE_Z",bd,1c,ee,24));
	outFields->push(HX_("TEXTURE_CUBE_MAP_NEGATIVE_Z",79,03,e2,6b));
	outFields->push(HX_("MAX_CUBE_MAP_TEXTURE_SIZE",77,b9,24,9d));
	outFields->push(HX_("TEXTURE0",15,87,54,bf));
	outFields->push(HX_("TEXTURE1",16,87,54,bf));
	outFields->push(HX_("TEXTURE2",17,87,54,bf));
	outFields->push(HX_("TEXTURE3",18,87,54,bf));
	outFields->push(HX_("TEXTURE4",19,87,54,bf));
	outFields->push(HX_("TEXTURE5",1a,87,54,bf));
	outFields->push(HX_("TEXTURE6",1b,87,54,bf));
	outFields->push(HX_("TEXTURE7",1c,87,54,bf));
	outFields->push(HX_("TEXTURE8",1d,87,54,bf));
	outFields->push(HX_("TEXTURE9",1e,87,54,bf));
	outFields->push(HX_("TEXTURE10",5a,ac,a1,aa));
	outFields->push(HX_("TEXTURE11",5b,ac,a1,aa));
	outFields->push(HX_("TEXTURE12",5c,ac,a1,aa));
	outFields->push(HX_("TEXTURE13",5d,ac,a1,aa));
	outFields->push(HX_("TEXTURE14",5e,ac,a1,aa));
	outFields->push(HX_("TEXTURE15",5f,ac,a1,aa));
	outFields->push(HX_("TEXTURE16",60,ac,a1,aa));
	outFields->push(HX_("TEXTURE17",61,ac,a1,aa));
	outFields->push(HX_("TEXTURE18",62,ac,a1,aa));
	outFields->push(HX_("TEXTURE19",63,ac,a1,aa));
	outFields->push(HX_("TEXTURE20",39,ad,a1,aa));
	outFields->push(HX_("TEXTURE21",3a,ad,a1,aa));
	outFields->push(HX_("TEXTURE22",3b,ad,a1,aa));
	outFields->push(HX_("TEXTURE23",3c,ad,a1,aa));
	outFields->push(HX_("TEXTURE24",3d,ad,a1,aa));
	outFields->push(HX_("TEXTURE25",3e,ad,a1,aa));
	outFields->push(HX_("TEXTURE26",3f,ad,a1,aa));
	outFields->push(HX_("TEXTURE27",40,ad,a1,aa));
	outFields->push(HX_("TEXTURE28",41,ad,a1,aa));
	outFields->push(HX_("TEXTURE29",42,ad,a1,aa));
	outFields->push(HX_("TEXTURE30",18,ae,a1,aa));
	outFields->push(HX_("TEXTURE31",19,ae,a1,aa));
	outFields->push(HX_("ACTIVE_TEXTURE",02,1a,22,ce));
	outFields->push(HX_("REPEAT",5b,43,ff,b8));
	outFields->push(HX_("CLAMP_TO_EDGE",1d,fc,5a,96));
	outFields->push(HX_("MIRRORED_REPEAT",5c,94,80,4a));
	outFields->push(HX_("FLOAT_VEC2",61,ac,a4,eb));
	outFields->push(HX_("FLOAT_VEC3",62,ac,a4,eb));
	outFields->push(HX_("FLOAT_VEC4",63,ac,a4,eb));
	outFields->push(HX_("INT_VEC2",2e,14,05,7d));
	outFields->push(HX_("INT_VEC3",2f,14,05,7d));
	outFields->push(HX_("INT_VEC4",30,14,05,7d));
	outFields->push(HX_("BOOL",2a,4c,dc,2b));
	outFields->push(HX_("BOOL_VEC2",f3,66,2b,2d));
	outFields->push(HX_("BOOL_VEC3",f4,66,2b,2d));
	outFields->push(HX_("BOOL_VEC4",f5,66,2b,2d));
	outFields->push(HX_("FLOAT_MAT2",95,c6,ae,e5));
	outFields->push(HX_("FLOAT_MAT3",96,c6,ae,e5));
	outFields->push(HX_("FLOAT_MAT4",97,c6,ae,e5));
	outFields->push(HX_("SAMPLER_2D",09,2a,93,6e));
	outFields->push(HX_("SAMPLER_CUBE",ec,3e,82,a4));
	outFields->push(HX_("VERTEX_ATTRIB_ARRAY_ENABLED",61,99,09,66));
	outFields->push(HX_("VERTEX_ATTRIB_ARRAY_SIZE",c1,07,fd,08));
	outFields->push(HX_("VERTEX_ATTRIB_ARRAY_STRIDE",19,2b,41,58));
	outFields->push(HX_("VERTEX_ATTRIB_ARRAY_TYPE",ba,59,b2,09));
	outFields->push(HX_("VERTEX_ATTRIB_ARRAY_NORMALIZED",37,b7,22,78));
	outFields->push(HX_("VERTEX_ATTRIB_ARRAY_POINTER",9d,55,fa,38));
	outFields->push(HX_("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",a6,80,67,97));
	outFields->push(HX_("IMPLEMENTATION_COLOR_READ_TYPE",fa,b6,2b,35));
	outFields->push(HX_("IMPLEMENTATION_COLOR_READ_FORMAT",77,c7,1a,47));
	outFields->push(HX_("VERTEX_PROGRAM_POINT_SIZE",e6,56,be,34));
	outFields->push(HX_("POINT_SPRITE",74,93,5c,14));
	outFields->push(HX_("COMPILE_STATUS",de,cb,4e,8c));
	outFields->push(HX_("INFO_LOG_LENGTH",12,de,68,c7));
	outFields->push(HX_("SHADER_SOURCE_LENGTH",30,c9,50,62));
	outFields->push(HX_("SHADER_COMPILER",39,af,c7,ad));
	outFields->push(HX_("SHADER_BINARY_FORMATS",d8,ee,25,d0));
	outFields->push(HX_("NUM_SHADER_BINARY_FORMATS",bf,4e,e4,a8));
	outFields->push(HX_("LOW_FLOAT",31,04,74,e4));
	outFields->push(HX_("MEDIUM_FLOAT",f2,8a,46,b9));
	outFields->push(HX_("HIGH_FLOAT",9f,f9,3b,47));
	outFields->push(HX_("LOW_INT",44,28,70,45));
	outFields->push(HX_("MEDIUM_INT",c5,cc,af,4f));
	outFields->push(HX_("HIGH_INT",32,46,02,09));
	outFields->push(HX_("FRAMEBUFFER",cd,20,84,50));
	outFields->push(HX_("RENDERBUFFER",d6,a4,a4,a9));
	outFields->push(HX_("RGBA4",00,05,fc,65));
	outFields->push(HX_("RGB5_A1",47,8f,f9,d8));
	outFields->push(HX_("RGB565",e7,41,7f,d6));
	outFields->push(HX_("DEPTH_COMPONENT16",26,cc,68,43));
	outFields->push(HX_("STENCIL_INDEX",0f,79,b6,97));
	outFields->push(HX_("STENCIL_INDEX8",49,74,f3,27));
	outFields->push(HX_("DEPTH_STENCIL",40,2f,20,2b));
	outFields->push(HX_("RENDERBUFFER_WIDTH",7d,1e,e1,43));
	outFields->push(HX_("RENDERBUFFER_HEIGHT",70,07,69,d7));
	outFields->push(HX_("RENDERBUFFER_INTERNAL_FORMAT",90,da,eb,b5));
	outFields->push(HX_("RENDERBUFFER_RED_SIZE",98,a5,58,5e));
	outFields->push(HX_("RENDERBUFFER_GREEN_SIZE",26,9b,7d,3b));
	outFields->push(HX_("RENDERBUFFER_BLUE_SIZE",dd,93,86,dd));
	outFields->push(HX_("RENDERBUFFER_ALPHA_SIZE",ab,f0,5d,87));
	outFields->push(HX_("RENDERBUFFER_DEPTH_SIZE",e6,90,24,c3));
	outFields->push(HX_("RENDERBUFFER_STENCIL_SIZE",8d,d5,5a,9d));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",50,22,44,50));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",e1,a1,3a,4c));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",f6,9b,ba,81));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",dc,4c,39,8a));
	outFields->push(HX_("COLOR_ATTACHMENT0",b1,9a,fe,86));
	outFields->push(HX_("DEPTH_ATTACHMENT",ff,54,cd,e9));
	outFields->push(HX_("STENCIL_ATTACHMENT",a6,8c,28,01));
	outFields->push(HX_("DEPTH_STENCIL_ATTACHMENT",c2,e1,e1,9f));
	outFields->push(HX_("NONE",b8,da,ca,33));
	outFields->push(HX_("FRAMEBUFFER_COMPLETE",ab,65,7d,ea));
	outFields->push(HX_("FRAMEBUFFER_INCOMPLETE_ATTACHMENT",f2,cf,b7,1d));
	outFields->push(HX_("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",8b,0a,cd,77));
	outFields->push(HX_("FRAMEBUFFER_INCOMPLETE_DIMENSIONS",5c,86,e4,1c));
	outFields->push(HX_("FRAMEBUFFER_UNSUPPORTED",e3,a6,4e,c8));
	outFields->push(HX_("FRAMEBUFFER_BINDING",73,ee,ae,c5));
	outFields->push(HX_("RENDERBUFFER_BINDING",7c,23,70,23));
	outFields->push(HX_("MAX_RENDERBUFFER_SIZE",4f,d4,3d,65));
	outFields->push(HX_("INVALID_FRAMEBUFFER_OPERATION",2d,d4,c5,43));
	outFields->push(HX_("UNPACK_FLIP_Y_WEBGL",0e,9f,94,9d));
	outFields->push(HX_("UNPACK_PREMULTIPLY_ALPHA_WEBGL",73,5d,cb,c6));
	outFields->push(HX_("CONTEXT_LOST_WEBGL",6e,67,71,45));
	outFields->push(HX_("UNPACK_COLORSPACE_CONVERSION_WEBGL",9f,d9,f0,b9));
	outFields->push(HX_("BROWSER_DEFAULT_WEBGL",04,04,92,c0));
	outFields->push(HX_("READ_BUFFER",09,1e,91,cd));
	outFields->push(HX_("UNPACK_ROW_LENGTH",78,04,c5,5f));
	outFields->push(HX_("UNPACK_SKIP_ROWS",0c,e6,50,4d));
	outFields->push(HX_("UNPACK_SKIP_PIXELS",e0,26,60,af));
	outFields->push(HX_("PACK_ROW_LENGTH",b1,c2,23,34));
	outFields->push(HX_("PACK_SKIP_ROWS",f3,91,a8,c5));
	outFields->push(HX_("PACK_SKIP_PIXELS",87,da,e7,ad));
	outFields->push(HX_("TEXTURE_BINDING_3D",0f,ed,98,b1));
	outFields->push(HX_("UNPACK_SKIP_IMAGES",6b,88,48,21));
	outFields->push(HX_("UNPACK_IMAGE_HEIGHT",98,fd,7e,14));
	outFields->push(HX_("MAX_3D_TEXTURE_SIZE",98,9e,8f,d5));
	outFields->push(HX_("MAX_ELEMENTS_VERTICES",86,be,2e,25));
	outFields->push(HX_("MAX_ELEMENTS_INDICES",1a,7d,aa,73));
	outFields->push(HX_("MAX_TEXTURE_LOD_BIAS",f6,fc,86,68));
	outFields->push(HX_("MAX_FRAGMENT_UNIFORM_COMPONENTS",75,6c,59,3e));
	outFields->push(HX_("MAX_VERTEX_UNIFORM_COMPONENTS",21,c6,3a,5f));
	outFields->push(HX_("MAX_ARRAY_TEXTURE_LAYERS",e7,c3,5b,6e));
	outFields->push(HX_("MIN_PROGRAM_TEXEL_OFFSET",2c,3a,dc,08));
	outFields->push(HX_("MAX_PROGRAM_TEXEL_OFFSET",da,db,54,b2));
	outFields->push(HX_("MAX_VARYING_COMPONENTS",00,28,c3,5f));
	outFields->push(HX_("FRAGMENT_SHADER_DERIVATIVE_HINT",74,51,a3,7e));
	outFields->push(HX_("RASTERIZER_DISCARD",1a,72,dc,4a));
	outFields->push(HX_("VERTEX_ARRAY_BINDING",c4,1d,24,31));
	outFields->push(HX_("MAX_VERTEX_OUTPUT_COMPONENTS",54,64,33,f3));
	outFields->push(HX_("MAX_FRAGMENT_INPUT_COMPONENTS",5f,cc,5e,d8));
	outFields->push(HX_("MAX_SERVER_WAIT_TIMEOUT",38,5d,22,83));
	outFields->push(HX_("MAX_ELEMENT_INDEX",94,ef,d5,74));
	outFields->push(HX_("RED",31,75,3e,00));
	outFields->push(HX_("RGB8",ab,98,69,36));
	outFields->push(HX_("RGBA8",04,05,fc,65));
	outFields->push(HX_("RGB10_A2",64,47,cf,94));
	outFields->push(HX_("TEXTURE_3D",f5,0c,f8,a2));
	outFields->push(HX_("TEXTURE_WRAP_R",a1,2d,c3,fe));
	outFields->push(HX_("TEXTURE_MIN_LOD",10,2d,09,39));
	outFields->push(HX_("TEXTURE_MAX_LOD",22,17,30,c8));
	outFields->push(HX_("TEXTURE_BASE_LEVEL",ba,eb,52,05));
	outFields->push(HX_("TEXTURE_MAX_LEVEL",65,66,2f,3f));
	outFields->push(HX_("TEXTURE_COMPARE_MODE",e1,a5,b9,86));
	outFields->push(HX_("TEXTURE_COMPARE_FUNC",c2,bd,1d,82));
	outFields->push(HX_("SRGB",7a,2c,1b,37));
	outFields->push(HX_("SRGB8",7e,be,ab,00));
	outFields->push(HX_("SRGB8_ALPHA8",1b,b6,71,35));
	outFields->push(HX_("COMPARE_REF_TO_TEXTURE",3d,3b,36,aa));
	outFields->push(HX_("RGBA32F",93,ae,c6,e0));
	outFields->push(HX_("RGB32F",fa,b9,7d,d6));
	outFields->push(HX_("RGBA16F",8d,2d,c5,e0));
	outFields->push(HX_("RGB16F",f4,38,7c,d6));
	outFields->push(HX_("TEXTURE_2D_ARRAY",50,2d,c6,60));
	outFields->push(HX_("TEXTURE_BINDING_2D_ARRAY",ea,1c,7d,28));
	outFields->push(HX_("R11F_G11F_B10F",9a,02,7e,28));
	outFields->push(HX_("RGB9_E5",43,6d,9e,db));
	outFields->push(HX_("RGBA32UI",67,1f,12,cd));
	outFields->push(HX_("RGB32UI",20,0e,85,d7));
	outFields->push(HX_("RGBA16UI",2d,bb,c2,cb));
	outFields->push(HX_("RGB16UI",e6,a9,35,d6));
	outFields->push(HX_("RGBA8UI",58,98,ca,e0));
	outFields->push(HX_("RGB8UI",bf,a3,81,d6));
	outFields->push(HX_("RGBA32I",96,ae,c6,e0));
	outFields->push(HX_("RGB32I",fd,b9,7d,d6));
	outFields->push(HX_("RGBA16I",90,2d,c5,e0));
	outFields->push(HX_("RGB16I",f7,38,7c,d6));
	outFields->push(HX_("RGBA8I",c5,5e,88,d6));
	outFields->push(HX_("RGB8I",3e,fd,fb,65));
	outFields->push(HX_("RED_INTEGER",50,79,18,f4));
	outFields->push(HX_("RGB_INTEGER",0c,97,ca,ce));
	outFields->push(HX_("RGBA_INTEGER",d3,57,27,c0));
	outFields->push(HX_("R8",a6,47,00,00));
	outFields->push(HX_("RG8",e3,76,3e,00));
	outFields->push(HX_("R16F",af,dc,58,36));
	outFields->push(HX_("R32F",b5,5d,5a,36));
	outFields->push(HX_("RG16F",2c,15,ef,65));
	outFields->push(HX_("RG32F",32,96,f0,65));
	outFields->push(HX_("R8I",e3,69,3e,00));
	outFields->push(HX_("R8UI",7a,47,5e,36));
	outFields->push(HX_("R16I",b2,dc,58,36));
	outFields->push(HX_("R16UI",cb,49,68,57));
	outFields->push(HX_("R32I",b8,5d,5a,36));
	outFields->push(HX_("R32UI",05,ae,b7,58));
	outFields->push(HX_("RG8I",06,90,69,36));
	outFields->push(HX_("RG8UI",f7,7f,f4,65));
	outFields->push(HX_("RG16I",2f,15,ef,65));
	outFields->push(HX_("RG16UI",ae,7e,43,cb));
	outFields->push(HX_("RG32I",35,96,f0,65));
	outFields->push(HX_("RG32UI",e8,e2,92,cc));
	outFields->push(HX_("R8_SNORM",76,d3,ce,64));
	outFields->push(HX_("RG8_SNORM",73,8e,f7,80));
	outFields->push(HX_("RGB8_SNORM",3b,36,76,ea));
	outFields->push(HX_("RGBA8_SNORM",54,eb,97,96));
	outFields->push(HX_("RGB10_A2UI",b8,32,bb,dc));
	outFields->push(HX_("TEXTURE_IMMUTABLE_FORMAT",38,2c,95,5e));
	outFields->push(HX_("TEXTURE_IMMUTABLE_LEVELS",70,5b,56,05));
	outFields->push(HX_("UNSIGNED_INT_2_10_10_10_REV",0a,41,8d,b2));
	outFields->push(HX_("UNSIGNED_INT_10F_11F_11F_REV",5f,56,ed,03));
	outFields->push(HX_("UNSIGNED_INT_5_9_9_9_REV",ed,ec,63,c7));
	outFields->push(HX_("FLOAT_32_UNSIGNED_INT_24_8_REV",fc,a5,51,95));
	outFields->push(HX_("UNSIGNED_INT_24_8",b5,57,d6,d9));
	outFields->push(HX_("HALF_FLOAT",b0,fe,81,7a));
	outFields->push(HX_("RG",b5,47,00,00));
	outFields->push(HX_("RG_INTEGER",d4,6f,76,e9));
	outFields->push(HX_("INT_2_10_10_10_REV",c0,20,1e,cf));
	outFields->push(HX_("CURRENT_QUERY",02,13,44,ba));
	outFields->push(HX_("QUERY_RESULT",94,10,d9,08));
	outFields->push(HX_("QUERY_RESULT_AVAILABLE",fe,56,e1,27));
	outFields->push(HX_("ANY_SAMPLES_PASSED",99,0e,a3,86));
	outFields->push(HX_("ANY_SAMPLES_PASSED_CONSERVATIVE",53,18,b7,3e));
	outFields->push(HX_("MAX_DRAW_BUFFERS",b3,92,8a,37));
	outFields->push(HX_("DRAW_BUFFER0",b5,68,27,ac));
	outFields->push(HX_("DRAW_BUFFER1",b6,68,27,ac));
	outFields->push(HX_("DRAW_BUFFER2",b7,68,27,ac));
	outFields->push(HX_("DRAW_BUFFER3",b8,68,27,ac));
	outFields->push(HX_("DRAW_BUFFER4",b9,68,27,ac));
	outFields->push(HX_("DRAW_BUFFER5",ba,68,27,ac));
	outFields->push(HX_("DRAW_BUFFER6",bb,68,27,ac));
	outFields->push(HX_("DRAW_BUFFER7",bc,68,27,ac));
	outFields->push(HX_("DRAW_BUFFER8",bd,68,27,ac));
	outFields->push(HX_("DRAW_BUFFER9",be,68,27,ac));
	outFields->push(HX_("DRAW_BUFFER10",ba,36,54,f6));
	outFields->push(HX_("DRAW_BUFFER11",bb,36,54,f6));
	outFields->push(HX_("DRAW_BUFFER12",bc,36,54,f6));
	outFields->push(HX_("DRAW_BUFFER13",bd,36,54,f6));
	outFields->push(HX_("DRAW_BUFFER14",be,36,54,f6));
	outFields->push(HX_("DRAW_BUFFER15",bf,36,54,f6));
	outFields->push(HX_("MAX_COLOR_ATTACHMENTS",19,d7,ae,06));
	outFields->push(HX_("COLOR_ATTACHMENT1",b2,9a,fe,86));
	outFields->push(HX_("COLOR_ATTACHMENT2",b3,9a,fe,86));
	outFields->push(HX_("COLOR_ATTACHMENT3",b4,9a,fe,86));
	outFields->push(HX_("COLOR_ATTACHMENT4",b5,9a,fe,86));
	outFields->push(HX_("COLOR_ATTACHMENT5",b6,9a,fe,86));
	outFields->push(HX_("COLOR_ATTACHMENT6",b7,9a,fe,86));
	outFields->push(HX_("COLOR_ATTACHMENT7",b8,9a,fe,86));
	outFields->push(HX_("COLOR_ATTACHMENT8",b9,9a,fe,86));
	outFields->push(HX_("COLOR_ATTACHMENT9",ba,9a,fe,86));
	outFields->push(HX_("COLOR_ATTACHMENT10",3e,c1,c8,97));
	outFields->push(HX_("COLOR_ATTACHMENT11",3f,c1,c8,97));
	outFields->push(HX_("COLOR_ATTACHMENT12",40,c1,c8,97));
	outFields->push(HX_("COLOR_ATTACHMENT13",41,c1,c8,97));
	outFields->push(HX_("COLOR_ATTACHMENT14",42,c1,c8,97));
	outFields->push(HX_("COLOR_ATTACHMENT15",43,c1,c8,97));
	outFields->push(HX_("SAMPLER_3D",e8,2a,93,6e));
	outFields->push(HX_("SAMPLER_2D_SHADOW",96,9e,66,61));
	outFields->push(HX_("SAMPLER_2D_ARRAY",83,c3,f4,b9));
	outFields->push(HX_("SAMPLER_2D_ARRAY_SHADOW",5c,88,64,1c));
	outFields->push(HX_("SAMPLER_CUBE_SHADOW",13,3c,fd,ff));
	outFields->push(HX_("INT_SAMPLER_2D",b9,f2,ff,97));
	outFields->push(HX_("INT_SAMPLER_3D",98,f3,ff,97));
	outFields->push(HX_("INT_SAMPLER_CUBE",9c,93,36,99));
	outFields->push(HX_("INT_SAMPLER_2D_ARRAY",33,30,e9,17));
	outFields->push(HX_("UNSIGNED_INT_SAMPLER_2D",03,a6,f2,c4));
	outFields->push(HX_("UNSIGNED_INT_SAMPLER_3D",e2,a6,f2,c4));
	outFields->push(HX_("UNSIGNED_INT_SAMPLER_CUBE",66,2d,b4,ee));
	outFields->push(HX_("UNSIGNED_INT_SAMPLER_2D_ARRAY",fd,76,98,0d));
	outFields->push(HX_("MAX_SAMPLES",ee,bc,20,56));
	outFields->push(HX_("SAMPLER_BINDING",8e,79,76,22));
	outFields->push(HX_("PIXEL_PACK_BUFFER",4d,06,41,84));
	outFields->push(HX_("PIXEL_UNPACK_BUFFER",54,80,91,31));
	outFields->push(HX_("PIXEL_PACK_BUFFER_BINDING",f3,53,0d,81));
	outFields->push(HX_("PIXEL_UNPACK_BUFFER_BINDING",fa,ac,01,cf));
	outFields->push(HX_("COPY_READ_BUFFER",3f,8b,f1,64));
	outFields->push(HX_("COPY_WRITE_BUFFER",ca,9d,e5,e4));
	outFields->push(HX_("COPY_READ_BUFFER_BINDING",e5,1a,17,74));
	outFields->push(HX_("COPY_WRITE_BUFFER_BINDING",70,30,81,8a));
	outFields->push(HX_("FLOAT_MAT2x3",90,be,dd,c3));
	outFields->push(HX_("FLOAT_MAT2x4",91,be,dd,c3));
	outFields->push(HX_("FLOAT_MAT3x2",d0,80,de,c3));
	outFields->push(HX_("FLOAT_MAT3x4",d2,80,de,c3));
	outFields->push(HX_("FLOAT_MAT4x2",11,43,df,c3));
	outFields->push(HX_("FLOAT_MAT4x3",12,43,df,c3));
	outFields->push(HX_("UNSIGNED_INT_VEC2",f8,d3,ae,f1));
	outFields->push(HX_("UNSIGNED_INT_VEC3",f9,d3,ae,f1));
	outFields->push(HX_("UNSIGNED_INT_VEC4",fa,d3,ae,f1));
	outFields->push(HX_("UNSIGNED_NORMALIZED",81,9e,e9,b5));
	outFields->push(HX_("SIGNED_NORMALIZED",fa,1c,1f,6e));
	outFields->push(HX_("VERTEX_ATTRIB_ARRAY_INTEGER",9e,52,f4,fe));
	outFields->push(HX_("VERTEX_ATTRIB_ARRAY_DIVISOR",3e,5a,bb,58));
	outFields->push(HX_("TRANSFORM_FEEDBACK_BUFFER_MODE",5b,21,21,18));
	outFields->push(HX_("MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",66,0f,c1,2a));
	outFields->push(HX_("TRANSFORM_FEEDBACK_VARYINGS",4a,49,b8,8f));
	outFields->push(HX_("TRANSFORM_FEEDBACK_BUFFER_START",4a,5f,8f,7c));
	outFields->push(HX_("TRANSFORM_FEEDBACK_BUFFER_SIZE",b9,ee,13,1c));
	outFields->push(HX_("TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",2b,e6,b6,9f));
	outFields->push(HX_("MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",18,9a,28,79));
	outFields->push(HX_("MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",79,55,1c,52));
	outFields->push(HX_("INTERLEAVED_ATTRIBS",d3,03,58,cf));
	outFields->push(HX_("SEPARATE_ATTRIBS",ad,f1,7d,f6));
	outFields->push(HX_("TRANSFORM_FEEDBACK_BUFFER",87,cc,fb,c7));
	outFields->push(HX_("TRANSFORM_FEEDBACK_BUFFER_BINDING",2d,e4,af,90));
	outFields->push(HX_("TRANSFORM_FEEDBACK",18,81,af,95));
	outFields->push(HX_("TRANSFORM_FEEDBACK_PAUSED",35,50,eb,e6));
	outFields->push(HX_("TRANSFORM_FEEDBACK_ACTIVE",4d,51,ad,0d));
	outFields->push(HX_("TRANSFORM_FEEDBACK_BINDING",be,11,f4,01));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",79,c9,9d,03));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",c6,3b,6e,90));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_RED_SIZE",39,51,04,f1));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",07,31,24,91));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",1c,15,11,a1));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",8c,86,04,dd));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",c7,26,cb,18));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",ae,65,3b,9a));
	outFields->push(HX_("FRAMEBUFFER_DEFAULT",ef,3b,45,e2));
	outFields->push(HX_("DEPTH24_STENCIL8",36,5e,b6,a6));
	outFields->push(HX_("DRAW_FRAMEBUFFER_BINDING",78,93,98,ce));
	outFields->push(HX_("READ_FRAMEBUFFER",24,8b,f0,a0));
	outFields->push(HX_("DRAW_FRAMEBUFFER",d2,b8,5e,7a));
	outFields->push(HX_("READ_FRAMEBUFFER_BINDING",ca,07,a0,07));
	outFields->push(HX_("RENDERBUFFER_SAMPLES",40,5d,0c,28));
	outFields->push(HX_("FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",43,08,18,7f));
	outFields->push(HX_("FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",54,d0,f2,d0));
	outFields->push(HX_("UNIFORM_BUFFER",0b,f0,a3,ee));
	outFields->push(HX_("UNIFORM_BUFFER_BINDING",b1,2b,2d,65));
	outFields->push(HX_("UNIFORM_BUFFER_START",ce,fd,84,f1));
	outFields->push(HX_("UNIFORM_BUFFER_SIZE",b5,8c,28,19));
	outFields->push(HX_("MAX_VERTEX_UNIFORM_BLOCKS",11,56,73,a0));
	outFields->push(HX_("MAX_FRAGMENT_UNIFORM_BLOCKS",65,42,83,5d));
	outFields->push(HX_("MAX_COMBINED_UNIFORM_BLOCKS",d0,c0,cb,e7));
	outFields->push(HX_("MAX_UNIFORM_BUFFER_BINDINGS",87,4d,27,c3));
	outFields->push(HX_("MAX_UNIFORM_BLOCK_SIZE",f9,dc,3f,6c));
	outFields->push(HX_("MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",fd,37,15,e3));
	outFields->push(HX_("MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",51,0d,19,43));
	outFields->push(HX_("UNIFORM_BUFFER_OFFSET_ALIGNMENT",cb,a9,f8,cc));
	outFields->push(HX_("ACTIVE_UNIFORM_BLOCKS",2a,2b,e3,0c));
	outFields->push(HX_("UNIFORM_TYPE",05,d9,59,48));
	outFields->push(HX_("UNIFORM_SIZE",0c,87,a4,47));
	outFields->push(HX_("UNIFORM_BLOCK_INDEX",35,78,71,93));
	outFields->push(HX_("UNIFORM_OFFSET",9e,ca,4e,7e));
	outFields->push(HX_("UNIFORM_ARRAY_STRIDE",aa,aa,4a,6c));
	outFields->push(HX_("UNIFORM_MATRIX_STRIDE",ec,75,fb,fc));
	outFields->push(HX_("UNIFORM_IS_ROW_MAJOR",4a,d7,8e,f1));
	outFields->push(HX_("UNIFORM_BLOCK_BINDING",28,1b,56,0b));
	outFields->push(HX_("UNIFORM_BLOCK_DATA_SIZE",f9,d0,4f,72));
	outFields->push(HX_("UNIFORM_BLOCK_ACTIVE_UNIFORMS",9b,74,7f,6e));
	outFields->push(HX_("UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",40,99,27,7e));
	outFields->push(HX_("UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",c1,8d,d1,e0));
	outFields->push(HX_("UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",15,c5,8f,af));
	outFields->push(HX_("OBJECT_TYPE",7a,57,2a,1f));
	outFields->push(HX_("SYNC_CONDITION",57,f7,d5,73));
	outFields->push(HX_("SYNC_STATUS",d6,f3,b7,06));
	outFields->push(HX_("SYNC_FLAGS",03,e3,f0,79));
	outFields->push(HX_("SYNC_FENCE",6d,3e,5a,75));
	outFields->push(HX_("SYNC_GPU_COMMANDS_COMPLETE",f9,23,65,18));
	outFields->push(HX_("UNSIGNALED",20,4c,0a,fd));
	outFields->push(HX_("SIGNALED",c7,80,c2,de));
	outFields->push(HX_("ALREADY_SIGNALED",ae,dd,3f,e3));
	outFields->push(HX_("TIMEOUT_EXPIRED",87,64,05,cd));
	outFields->push(HX_("CONDITION_SATISFIED",ce,a6,40,b0));
	outFields->push(HX_("WAIT_FAILED",87,c9,db,92));
	outFields->push(HX_("SYNC_FLUSH_COMMANDS_BIT",d5,c6,2c,c7));
	outFields->push(HX_("COLOR",43,a9,4a,c8));
	outFields->push(HX_("DEPTH",e3,28,18,55));
	outFields->push(HX_("STENCIL",dc,91,d7,ff));
	outFields->push(HX_("MIN",72,ad,3a,00));
	outFields->push(HX_("MAX",84,a6,3a,00));
	outFields->push(HX_("DEPTH_COMPONENT24",03,cd,68,43));
	outFields->push(HX_("STREAM_READ",b5,9e,5f,1e));
	outFields->push(HX_("STREAM_COPY",14,0f,7d,14));
	outFields->push(HX_("STATIC_READ",c7,6f,66,c3));
	outFields->push(HX_("STATIC_COPY",26,e0,83,b9));
	outFields->push(HX_("DYNAMIC_READ",76,23,56,2d));
	outFields->push(HX_("DYNAMIC_COPY",d5,93,73,23));
	outFields->push(HX_("DEPTH_COMPONENT32F",66,56,4b,b8));
	outFields->push(HX_("DEPTH32F_STENCIL8",f7,07,b2,83));
	outFields->push(HX_("INVALID_INDEX",4a,04,83,3c));
	outFields->push(HX_("TIMEOUT_IGNORED",f4,3b,74,84));
	outFields->push(HX_("MAX_CLIENT_WAIT_TIMEOUT_WEBGL",8a,37,14,d5));
	outFields->push(HX_("type",ba,f2,08,4d));
	outFields->push(HX_("version",18,e7,f1,7c));
	outFields->push(HX_("__arrayBufferBinding",ec,c7,f6,4e));
	outFields->push(HX_("__elementBufferBinding",e9,54,64,1f));
	outFields->push(HX_("__contextID",6a,b8,28,45));
	outFields->push(HX_("__currentProgram",6b,4a,cd,35));
	outFields->push(HX_("__framebufferBinding",f8,60,08,ef));
	outFields->push(HX_("__initialized",f4,35,88,7f));
	outFields->push(HX_("__isContextLost",89,18,92,b5));
	outFields->push(HX_("__renderbufferBinding",ef,6d,e9,2f));
	outFields->push(HX_("__texture2DBinding",78,dc,16,4f));
	outFields->push(HX_("__textureCubeMapBinding",79,78,a4,c8));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo NativeOpenGLRenderContext_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_BUFFER_BIT),HX_("DEPTH_BUFFER_BIT",ca,5b,ce,c6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_BUFFER_BIT),HX_("STENCIL_BUFFER_BIT",71,93,29,de)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_BUFFER_BIT),HX_("COLOR_BUFFER_BIT",6a,f7,74,fb)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,POINTS),HX_("POINTS",23,be,b0,a9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINES),HX_("LINES",df,15,f0,f2)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINE_LOOP),HX_("LINE_LOOP",cf,55,c1,16)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINE_STRIP),HX_("LINE_STRIP",ed,20,88,dd)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRIANGLES),HX_("TRIANGLES",8b,a0,99,7a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRIANGLE_STRIP),HX_("TRIANGLE_STRIP",c1,66,6c,f6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRIANGLE_FAN),HX_("TRIANGLE_FAN",7c,ee,2e,91)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ZERO),HX_("ZERO",28,d7,b1,3b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE),HX_("ONE",46,36,3c,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SRC_COLOR),HX_("SRC_COLOR",48,9e,bd,5c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE_MINUS_SRC_COLOR),HX_("ONE_MINUS_SRC_COLOR",20,3b,e1,48)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SRC_ALPHA),HX_("SRC_ALPHA",43,d4,f7,33)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE_MINUS_SRC_ALPHA),HX_("ONE_MINUS_SRC_ALPHA",1b,71,1b,20)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DST_ALPHA),HX_("DST_ALPHA",24,02,f2,d3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE_MINUS_DST_ALPHA),HX_("ONE_MINUS_DST_ALPHA",fc,9e,15,c0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DST_COLOR),HX_("DST_COLOR",29,cc,b7,fc)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE_MINUS_DST_COLOR),HX_("ONE_MINUS_DST_COLOR",01,69,db,e8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SRC_ALPHA_SATURATE),HX_("SRC_ALPHA_SATURATE",ab,e2,3d,33)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FUNC_ADD),HX_("FUNC_ADD",46,78,17,75)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BLEND_EQUATION),HX_("BLEND_EQUATION",9a,14,92,71)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BLEND_EQUATION_RGB),HX_("BLEND_EQUATION_RGB",88,25,eb,90)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BLEND_EQUATION_ALPHA),HX_("BLEND_EQUATION_ALPHA",99,aa,ae,37)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FUNC_SUBTRACT),HX_("FUNC_SUBTRACT",af,c0,a0,17)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FUNC_REVERSE_SUBTRACT),HX_("FUNC_REVERSE_SUBTRACT",cc,8d,ef,f3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BLEND_DST_RGB),HX_("BLEND_DST_RGB",05,87,f5,ec)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BLEND_SRC_RGB),HX_("BLEND_SRC_RGB",64,43,8c,2c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BLEND_DST_ALPHA),HX_("BLEND_DST_ALPHA",56,25,32,74)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BLEND_SRC_ALPHA),HX_("BLEND_SRC_ALPHA",75,f7,37,d4)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CONSTANT_COLOR),HX_("CONSTANT_COLOR",e8,64,8a,c8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE_MINUS_CONSTANT_COLOR),HX_("ONE_MINUS_CONSTANT_COLOR",10,39,e7,06)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CONSTANT_ALPHA),HX_("CONSTANT_ALPHA",e3,9a,c4,9f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ONE_MINUS_CONSTANT_ALPHA),HX_("ONE_MINUS_CONSTANT_ALPHA",0b,6f,21,de)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BLEND_COLOR),HX_("BLEND_COLOR",75,cb,c8,67)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ARRAY_BUFFER),HX_("ARRAY_BUFFER",46,66,17,f4)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ELEMENT_ARRAY_BUFFER),HX_("ELEMENT_ARRAY_BUFFER",09,05,53,3d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ARRAY_BUFFER_BINDING),HX_("ARRAY_BUFFER_BINDING",ec,d4,a9,79)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ELEMENT_ARRAY_BUFFER_BINDING),HX_("ELEMENT_ARRAY_BUFFER_BINDING",af,6e,96,a2)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STREAM_DRAW),HX_("STREAM_DRAW",63,7f,28,15)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STATIC_DRAW),HX_("STATIC_DRAW",75,50,2f,ba)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DYNAMIC_DRAW),HX_("DYNAMIC_DRAW",24,04,1f,24)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BUFFER_SIZE),HX_("BUFFER_SIZE",a0,7b,91,4c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BUFFER_USAGE),HX_("BUFFER_USAGE",42,05,11,e0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CURRENT_VERTEX_ATTRIB),HX_("CURRENT_VERTEX_ATTRIB",1f,8c,2f,ab)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRONT),HX_("FRONT",89,50,7c,84)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BACK),HX_("BACK",27,a2,d1,2b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRONT_AND_BACK),HX_("FRONT_AND_BACK",a5,3d,6a,c1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_2D),HX_("TEXTURE_2D",16,0c,f8,a2)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CULL_FACE),HX_("CULL_FACE",8a,a5,f4,cf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BLEND),HX_("BLEND",31,20,e3,32)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DITHER),HX_("DITHER",e6,ac,41,70)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_TEST),HX_("STENCIL_TEST",d5,dc,69,d5)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_TEST),HX_("DEPTH_TEST",6e,6c,25,28)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SCISSOR_TEST),HX_("SCISSOR_TEST",b5,be,51,59)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,POLYGON_OFFSET_FILL),HX_("POLYGON_OFFSET_FILL",4a,3d,32,ac)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLE_ALPHA_TO_COVERAGE),HX_("SAMPLE_ALPHA_TO_COVERAGE",16,3e,56,e1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLE_COVERAGE),HX_("SAMPLE_COVERAGE",dd,b7,0e,c1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NO_ERROR),HX_("NO_ERROR",ea,b5,7d,2f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INVALID_ENUM),HX_("INVALID_ENUM",a9,74,70,13)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INVALID_VALUE),HX_("INVALID_VALUE",a9,e8,26,b0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INVALID_OPERATION),HX_("INVALID_OPERATION",5f,b1,c8,29)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,OUT_OF_MEMORY),HX_("OUT_OF_MEMORY",18,f2,97,e1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CW),HX_("CW",b4,3a,00,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CCW),HX_("CCW",b7,11,33,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINE_WIDTH),HX_("LINE_WIDTH",1b,84,d2,23)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ALIASED_POINT_SIZE_RANGE),HX_("ALIASED_POINT_SIZE_RANGE",fe,f6,a4,7b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ALIASED_LINE_WIDTH_RANGE),HX_("ALIASED_LINE_WIDTH_RANGE",e9,22,d5,8a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CULL_FACE_MODE),HX_("CULL_FACE_MODE",78,bd,87,d1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRONT_FACE),HX_("FRONT_FACE",53,b7,4d,ef)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_RANGE),HX_("DEPTH_RANGE",01,9a,23,cf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_WRITEMASK),HX_("DEPTH_WRITEMASK",8f,37,3f,66)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_CLEAR_VALUE),HX_("DEPTH_CLEAR_VALUE",23,17,0d,1b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_FUNC),HX_("DEPTH_FUNC",60,8f,f0,1e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_CLEAR_VALUE),HX_("STENCIL_CLEAR_VALUE",9c,91,82,73)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_FUNC),HX_("STENCIL_FUNC",c7,ff,34,cc)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_FAIL),HX_("STENCIL_FAIL",61,ce,25,cc)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_PASS_DEPTH_FAIL),HX_("STENCIL_PASS_DEPTH_FAIL",45,ca,b9,c8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_PASS_DEPTH_PASS),HX_("STENCIL_PASS_DEPTH_PASS",38,f5,55,cf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_REF),HX_("STENCIL_REF",10,6a,a5,3c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_VALUE_MASK),HX_("STENCIL_VALUE_MASK",9d,58,5e,a0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_WRITEMASK),HX_("STENCIL_WRITEMASK",c8,f1,a6,49)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_BACK_FUNC),HX_("STENCIL_BACK_FUNC",39,78,a2,90)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_BACK_FAIL),HX_("STENCIL_BACK_FAIL",d3,46,93,90)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_BACK_PASS_DEPTH_FAIL),HX_("STENCIL_BACK_PASS_DEPTH_FAIL",13,23,0e,34)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_BACK_PASS_DEPTH_PASS),HX_("STENCIL_BACK_PASS_DEPTH_PASS",06,4e,aa,3a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_BACK_REF),HX_("STENCIL_BACK_REF",de,45,b8,08)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_BACK_VALUE_MASK),HX_("STENCIL_BACK_VALUE_MASK",8f,b2,c4,88)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_BACK_WRITEMASK),HX_("STENCIL_BACK_WRITEMASK",16,9c,15,c2)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VIEWPORT),HX_("VIEWPORT",66,dc,2a,f6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SCISSOR_BOX),HX_("SCISSOR_BOX",e8,48,4c,55)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_CLEAR_VALUE),HX_("COLOR_CLEAR_VALUE",83,a7,2e,f8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_WRITEMASK),HX_("COLOR_WRITEMASK",ef,ef,f9,14)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNPACK_ALIGNMENT),HX_("UNPACK_ALIGNMENT",b6,2a,2e,4b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,PACK_ALIGNMENT),HX_("PACK_ALIGNMENT",9d,d6,85,c3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_TEXTURE_SIZE),HX_("MAX_TEXTURE_SIZE",e0,0b,5b,fb)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_VIEWPORT_DIMS),HX_("MAX_VIEWPORT_DIMS",a9,2d,fb,08)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SUBPIXEL_BITS),HX_("SUBPIXEL_BITS",1f,ac,14,0a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RED_BITS),HX_("RED_BITS",14,f8,9e,96)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,GREEN_BITS),HX_("GREEN_BITS",62,a9,9b,94)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BLUE_BITS),HX_("BLUE_BITS",0b,26,60,a1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ALPHA_BITS),HX_("ALPHA_BITS",e7,fe,7b,e0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_BITS),HX_("DEPTH_BITS",22,9f,42,1c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_BITS),HX_("STENCIL_BITS",89,0f,87,c9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,POLYGON_OFFSET_UNITS),HX_("POLYGON_OFFSET_UNITS",a8,e8,11,a6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,POLYGON_OFFSET_FACTOR),HX_("POLYGON_OFFSET_FACTOR",56,6b,12,2a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_BINDING_2D),HX_("TEXTURE_BINDING_2D",30,ec,98,b1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLE_BUFFERS),HX_("SAMPLE_BUFFERS",fe,16,71,3c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLES),HX_("SAMPLES",e9,98,9d,03)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLE_COVERAGE_VALUE),HX_("SAMPLE_COVERAGE_VALUE",2f,7a,07,69)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLE_COVERAGE_INVERT),HX_("SAMPLE_COVERAGE_INVERT",78,52,a5,cd)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NUM_COMPRESSED_TEXTURE_FORMATS),HX_("NUM_COMPRESSED_TEXTURE_FORMATS",33,ae,1c,0d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COMPRESSED_TEXTURE_FORMATS),HX_("COMPRESSED_TEXTURE_FORMATS",7a,13,e3,12)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DONT_CARE),HX_("DONT_CARE",7f,9b,c1,cf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FASTEST),HX_("FASTEST",0a,a3,0d,5e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NICEST),HX_("NICEST",7e,6d,94,64)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,GENERATE_MIPMAP_HINT),HX_("GENERATE_MIPMAP_HINT",94,d3,d5,83)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BYTE),HX_("BYTE",08,e7,e3,2b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_BYTE),HX_("UNSIGNED_BYTE",d2,79,6b,01)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SHORT),HX_("SHORT",5c,bc,15,fa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_SHORT),HX_("UNSIGNED_SHORT",52,9a,2e,fb)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INT),HX_("INT",cf,a8,37,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT),HX_("UNSIGNED_INT",45,fd,b9,1c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT),HX_("FLOAT",7c,fd,84,80)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FIXED),HX_("FIXED",54,31,90,7e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_COMPONENT),HX_("DEPTH_COMPONENT",01,1f,62,0f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ALPHA),HX_("ALPHA",3e,df,84,9f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB),HX_("RGB",ed,76,3e,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA),HX_("RGBA",b4,98,69,36)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LUMINANCE),HX_("LUMINANCE",d8,a7,e0,63)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LUMINANCE_ALPHA),HX_("LUMINANCE_ALPHA",57,40,e0,bd)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_SHORT_4_4_4_4),HX_("UNSIGNED_SHORT_4_4_4_4",a6,33,71,7b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_SHORT_5_5_5_1),HX_("UNSIGNED_SHORT_5_5_5_1",26,01,6e,38)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_SHORT_5_6_5),HX_("UNSIGNED_SHORT_5_6_5",75,bb,16,8c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAGMENT_SHADER),HX_("FRAGMENT_SHADER",f4,26,78,e9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_SHADER),HX_("VERTEX_SHADER",e0,69,73,49)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_VERTEX_ATTRIBS),HX_("MAX_VERTEX_ATTRIBS",49,c9,15,5f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_VERTEX_UNIFORM_VECTORS),HX_("MAX_VERTEX_UNIFORM_VECTORS",45,6c,16,5a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_VARYING_VECTORS),HX_("MAX_VARYING_VECTORS",06,b9,f7,37)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_COMBINED_TEXTURE_IMAGE_UNITS),HX_("MAX_COMBINED_TEXTURE_IMAGE_UNITS",a8,d1,a6,77)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_VERTEX_TEXTURE_IMAGE_UNITS),HX_("MAX_VERTEX_TEXTURE_IMAGE_UNITS",c7,90,95,2b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_TEXTURE_IMAGE_UNITS),HX_("MAX_TEXTURE_IMAGE_UNITS",cc,6c,61,54)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_FRAGMENT_UNIFORM_VECTORS),HX_("MAX_FRAGMENT_UNIFORM_VECTORS",71,49,f5,0a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SHADER_TYPE),HX_("SHADER_TYPE",54,e5,27,87)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DELETE_STATUS),HX_("DELETE_STATUS",06,e4,98,1e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINK_STATUS),HX_("LINK_STATUS",17,18,8f,45)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VALIDATE_STATUS),HX_("VALIDATE_STATUS",fb,22,07,c6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ATTACHED_SHADERS),HX_("ATTACHED_SHADERS",73,d2,76,75)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ACTIVE_UNIFORMS),HX_("ACTIVE_UNIFORMS",98,7d,3a,2c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ACTIVE_UNIFORMS_MAX_LENGTH),HX_("ACTIVE_UNIFORMS_MAX_LENGTH",08,cb,c9,4d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ACTIVE_ATTRIBUTES),HX_("ACTIVE_ATTRIBUTES",f0,e5,c7,4a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ACTIVE_ATTRIBUTES_MAX_LENGTH),HX_("ACTIVE_ATTRIBUTES_MAX_LENGTH",b0,11,b3,ae)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SHADING_LANGUAGE_VERSION),HX_("SHADING_LANGUAGE_VERSION",e6,c4,ef,70)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CURRENT_PROGRAM),HX_("CURRENT_PROGRAM",fe,28,c0,3f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NEVER),HX_("NEVER",6c,76,1e,17)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LESS),HX_("LESS",59,db,70,32)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,EQUAL),HX_("EQUAL",94,07,71,f0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LEQUAL),HX_("LEQUAL",c8,73,90,53)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,GREATER),HX_("GREATER",da,64,94,37)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NOTEQUAL),HX_("NOTEQUAL",c1,c1,e9,c8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,GEQUAL),HX_("GEQUAL",ed,a5,c7,53)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ALWAYS),HX_("ALWAYS",cf,ba,59,f9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,KEEP),HX_("KEEP",85,98,c7,31)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,REPLACE),HX_("REPLACE",14,1c,fc,2a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INCR),HX_("INCR",d4,fd,7b,30)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DECR),HX_("DECR",70,18,27,2d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INVERT),HX_("INVERT",16,93,5b,52)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INCR_WRAP),HX_("INCR_WRAP",55,7f,68,2c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DECR_WRAP),HX_("DECR_WRAP",39,6f,eb,0a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VENDOR),HX_("VENDOR",88,91,19,51)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERER),HX_("RENDERER",43,55,61,0c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERSION),HX_("VERSION",f8,ba,c5,fc)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,EXTENSIONS),HX_("EXTENSIONS",14,f0,79,7b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NEAREST),HX_("NEAREST",3e,ec,9d,e5)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINEAR),HX_("LINEAR",e5,fd,22,9f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NEAREST_MIPMAP_NEAREST),HX_("NEAREST_MIPMAP_NEAREST",68,b9,63,7e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINEAR_MIPMAP_NEAREST),HX_("LINEAR_MIPMAP_NEAREST",a1,9b,a4,65)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NEAREST_MIPMAP_LINEAR),HX_("NEAREST_MIPMAP_LINEAR",fb,83,f2,3b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LINEAR_MIPMAP_LINEAR),HX_("LINEAR_MIPMAP_LINEAR",e2,8b,f8,99)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_MAG_FILTER),HX_("TEXTURE_MAG_FILTER",88,ff,d5,1e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_MIN_FILTER),HX_("TEXTURE_MIN_FILTER",69,66,c2,46)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_WRAP_S),HX_("TEXTURE_WRAP_S",a2,2d,c3,fe)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_WRAP_T),HX_("TEXTURE_WRAP_T",a3,2d,c3,fe)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE),HX_("TEXTURE",bb,9c,b4,1e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_CUBE_MAP),HX_("TEXTURE_CUBE_MAP",36,7a,e1,ad)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_BINDING_CUBE_MAP),HX_("TEXTURE_BINDING_CUBE_MAP",d0,69,98,75)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_CUBE_MAP_POSITIVE_X),HX_("TEXTURE_CUBE_MAP_POSITIVE_X",bb,1c,ee,24)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_CUBE_MAP_NEGATIVE_X),HX_("TEXTURE_CUBE_MAP_NEGATIVE_X",77,03,e2,6b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_CUBE_MAP_POSITIVE_Y),HX_("TEXTURE_CUBE_MAP_POSITIVE_Y",bc,1c,ee,24)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_CUBE_MAP_NEGATIVE_Y),HX_("TEXTURE_CUBE_MAP_NEGATIVE_Y",78,03,e2,6b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_CUBE_MAP_POSITIVE_Z),HX_("TEXTURE_CUBE_MAP_POSITIVE_Z",bd,1c,ee,24)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_CUBE_MAP_NEGATIVE_Z),HX_("TEXTURE_CUBE_MAP_NEGATIVE_Z",79,03,e2,6b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_CUBE_MAP_TEXTURE_SIZE),HX_("MAX_CUBE_MAP_TEXTURE_SIZE",77,b9,24,9d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE0),HX_("TEXTURE0",15,87,54,bf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE1),HX_("TEXTURE1",16,87,54,bf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE2),HX_("TEXTURE2",17,87,54,bf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE3),HX_("TEXTURE3",18,87,54,bf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE4),HX_("TEXTURE4",19,87,54,bf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE5),HX_("TEXTURE5",1a,87,54,bf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE6),HX_("TEXTURE6",1b,87,54,bf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE7),HX_("TEXTURE7",1c,87,54,bf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE8),HX_("TEXTURE8",1d,87,54,bf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE9),HX_("TEXTURE9",1e,87,54,bf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE10),HX_("TEXTURE10",5a,ac,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE11),HX_("TEXTURE11",5b,ac,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE12),HX_("TEXTURE12",5c,ac,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE13),HX_("TEXTURE13",5d,ac,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE14),HX_("TEXTURE14",5e,ac,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE15),HX_("TEXTURE15",5f,ac,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE16),HX_("TEXTURE16",60,ac,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE17),HX_("TEXTURE17",61,ac,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE18),HX_("TEXTURE18",62,ac,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE19),HX_("TEXTURE19",63,ac,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE20),HX_("TEXTURE20",39,ad,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE21),HX_("TEXTURE21",3a,ad,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE22),HX_("TEXTURE22",3b,ad,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE23),HX_("TEXTURE23",3c,ad,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE24),HX_("TEXTURE24",3d,ad,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE25),HX_("TEXTURE25",3e,ad,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE26),HX_("TEXTURE26",3f,ad,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE27),HX_("TEXTURE27",40,ad,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE28),HX_("TEXTURE28",41,ad,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE29),HX_("TEXTURE29",42,ad,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE30),HX_("TEXTURE30",18,ae,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE31),HX_("TEXTURE31",19,ae,a1,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ACTIVE_TEXTURE),HX_("ACTIVE_TEXTURE",02,1a,22,ce)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,REPEAT),HX_("REPEAT",5b,43,ff,b8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CLAMP_TO_EDGE),HX_("CLAMP_TO_EDGE",1d,fc,5a,96)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MIRRORED_REPEAT),HX_("MIRRORED_REPEAT",5c,94,80,4a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_VEC2),HX_("FLOAT_VEC2",61,ac,a4,eb)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_VEC3),HX_("FLOAT_VEC3",62,ac,a4,eb)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_VEC4),HX_("FLOAT_VEC4",63,ac,a4,eb)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INT_VEC2),HX_("INT_VEC2",2e,14,05,7d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INT_VEC3),HX_("INT_VEC3",2f,14,05,7d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INT_VEC4),HX_("INT_VEC4",30,14,05,7d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BOOL),HX_("BOOL",2a,4c,dc,2b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BOOL_VEC2),HX_("BOOL_VEC2",f3,66,2b,2d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BOOL_VEC3),HX_("BOOL_VEC3",f4,66,2b,2d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BOOL_VEC4),HX_("BOOL_VEC4",f5,66,2b,2d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_MAT2),HX_("FLOAT_MAT2",95,c6,ae,e5)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_MAT3),HX_("FLOAT_MAT3",96,c6,ae,e5)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_MAT4),HX_("FLOAT_MAT4",97,c6,ae,e5)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLER_2D),HX_("SAMPLER_2D",09,2a,93,6e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLER_CUBE),HX_("SAMPLER_CUBE",ec,3e,82,a4)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_ATTRIB_ARRAY_ENABLED),HX_("VERTEX_ATTRIB_ARRAY_ENABLED",61,99,09,66)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_ATTRIB_ARRAY_SIZE),HX_("VERTEX_ATTRIB_ARRAY_SIZE",c1,07,fd,08)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_ATTRIB_ARRAY_STRIDE),HX_("VERTEX_ATTRIB_ARRAY_STRIDE",19,2b,41,58)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_ATTRIB_ARRAY_TYPE),HX_("VERTEX_ATTRIB_ARRAY_TYPE",ba,59,b2,09)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_ATTRIB_ARRAY_NORMALIZED),HX_("VERTEX_ATTRIB_ARRAY_NORMALIZED",37,b7,22,78)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_ATTRIB_ARRAY_POINTER),HX_("VERTEX_ATTRIB_ARRAY_POINTER",9d,55,fa,38)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING),HX_("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",a6,80,67,97)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,IMPLEMENTATION_COLOR_READ_TYPE),HX_("IMPLEMENTATION_COLOR_READ_TYPE",fa,b6,2b,35)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,IMPLEMENTATION_COLOR_READ_FORMAT),HX_("IMPLEMENTATION_COLOR_READ_FORMAT",77,c7,1a,47)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_PROGRAM_POINT_SIZE),HX_("VERTEX_PROGRAM_POINT_SIZE",e6,56,be,34)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,POINT_SPRITE),HX_("POINT_SPRITE",74,93,5c,14)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COMPILE_STATUS),HX_("COMPILE_STATUS",de,cb,4e,8c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INFO_LOG_LENGTH),HX_("INFO_LOG_LENGTH",12,de,68,c7)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SHADER_SOURCE_LENGTH),HX_("SHADER_SOURCE_LENGTH",30,c9,50,62)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SHADER_COMPILER),HX_("SHADER_COMPILER",39,af,c7,ad)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SHADER_BINARY_FORMATS),HX_("SHADER_BINARY_FORMATS",d8,ee,25,d0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NUM_SHADER_BINARY_FORMATS),HX_("NUM_SHADER_BINARY_FORMATS",bf,4e,e4,a8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LOW_FLOAT),HX_("LOW_FLOAT",31,04,74,e4)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MEDIUM_FLOAT),HX_("MEDIUM_FLOAT",f2,8a,46,b9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,HIGH_FLOAT),HX_("HIGH_FLOAT",9f,f9,3b,47)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,LOW_INT),HX_("LOW_INT",44,28,70,45)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MEDIUM_INT),HX_("MEDIUM_INT",c5,cc,af,4f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,HIGH_INT),HX_("HIGH_INT",32,46,02,09)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER),HX_("FRAMEBUFFER",cd,20,84,50)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER),HX_("RENDERBUFFER",d6,a4,a4,a9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA4),HX_("RGBA4",00,05,fc,65)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB5_A1),HX_("RGB5_A1",47,8f,f9,d8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB565),HX_("RGB565",e7,41,7f,d6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_COMPONENT16),HX_("DEPTH_COMPONENT16",26,cc,68,43)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_INDEX),HX_("STENCIL_INDEX",0f,79,b6,97)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_INDEX8),HX_("STENCIL_INDEX8",49,74,f3,27)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_STENCIL),HX_("DEPTH_STENCIL",40,2f,20,2b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER_WIDTH),HX_("RENDERBUFFER_WIDTH",7d,1e,e1,43)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER_HEIGHT),HX_("RENDERBUFFER_HEIGHT",70,07,69,d7)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER_INTERNAL_FORMAT),HX_("RENDERBUFFER_INTERNAL_FORMAT",90,da,eb,b5)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER_RED_SIZE),HX_("RENDERBUFFER_RED_SIZE",98,a5,58,5e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER_GREEN_SIZE),HX_("RENDERBUFFER_GREEN_SIZE",26,9b,7d,3b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER_BLUE_SIZE),HX_("RENDERBUFFER_BLUE_SIZE",dd,93,86,dd)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER_ALPHA_SIZE),HX_("RENDERBUFFER_ALPHA_SIZE",ab,f0,5d,87)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER_DEPTH_SIZE),HX_("RENDERBUFFER_DEPTH_SIZE",e6,90,24,c3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER_STENCIL_SIZE),HX_("RENDERBUFFER_STENCIL_SIZE",8d,d5,5a,9d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE),HX_("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",50,22,44,50)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME),HX_("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",e1,a1,3a,4c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL),HX_("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",f6,9b,ba,81)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE),HX_("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",dc,4c,39,8a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT0),HX_("COLOR_ATTACHMENT0",b1,9a,fe,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_ATTACHMENT),HX_("DEPTH_ATTACHMENT",ff,54,cd,e9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL_ATTACHMENT),HX_("STENCIL_ATTACHMENT",a6,8c,28,01)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_STENCIL_ATTACHMENT),HX_("DEPTH_STENCIL_ATTACHMENT",c2,e1,e1,9f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,NONE),HX_("NONE",b8,da,ca,33)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_COMPLETE),HX_("FRAMEBUFFER_COMPLETE",ab,65,7d,ea)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_INCOMPLETE_ATTACHMENT),HX_("FRAMEBUFFER_INCOMPLETE_ATTACHMENT",f2,cf,b7,1d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT),HX_("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",8b,0a,cd,77)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_INCOMPLETE_DIMENSIONS),HX_("FRAMEBUFFER_INCOMPLETE_DIMENSIONS",5c,86,e4,1c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_UNSUPPORTED),HX_("FRAMEBUFFER_UNSUPPORTED",e3,a6,4e,c8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_BINDING),HX_("FRAMEBUFFER_BINDING",73,ee,ae,c5)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER_BINDING),HX_("RENDERBUFFER_BINDING",7c,23,70,23)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_RENDERBUFFER_SIZE),HX_("MAX_RENDERBUFFER_SIZE",4f,d4,3d,65)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INVALID_FRAMEBUFFER_OPERATION),HX_("INVALID_FRAMEBUFFER_OPERATION",2d,d4,c5,43)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNPACK_FLIP_Y_WEBGL),HX_("UNPACK_FLIP_Y_WEBGL",0e,9f,94,9d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNPACK_PREMULTIPLY_ALPHA_WEBGL),HX_("UNPACK_PREMULTIPLY_ALPHA_WEBGL",73,5d,cb,c6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CONTEXT_LOST_WEBGL),HX_("CONTEXT_LOST_WEBGL",6e,67,71,45)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNPACK_COLORSPACE_CONVERSION_WEBGL),HX_("UNPACK_COLORSPACE_CONVERSION_WEBGL",9f,d9,f0,b9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,BROWSER_DEFAULT_WEBGL),HX_("BROWSER_DEFAULT_WEBGL",04,04,92,c0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,READ_BUFFER),HX_("READ_BUFFER",09,1e,91,cd)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNPACK_ROW_LENGTH),HX_("UNPACK_ROW_LENGTH",78,04,c5,5f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNPACK_SKIP_ROWS),HX_("UNPACK_SKIP_ROWS",0c,e6,50,4d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNPACK_SKIP_PIXELS),HX_("UNPACK_SKIP_PIXELS",e0,26,60,af)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,PACK_ROW_LENGTH),HX_("PACK_ROW_LENGTH",b1,c2,23,34)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,PACK_SKIP_ROWS),HX_("PACK_SKIP_ROWS",f3,91,a8,c5)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,PACK_SKIP_PIXELS),HX_("PACK_SKIP_PIXELS",87,da,e7,ad)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_BINDING_3D),HX_("TEXTURE_BINDING_3D",0f,ed,98,b1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNPACK_SKIP_IMAGES),HX_("UNPACK_SKIP_IMAGES",6b,88,48,21)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNPACK_IMAGE_HEIGHT),HX_("UNPACK_IMAGE_HEIGHT",98,fd,7e,14)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_3D_TEXTURE_SIZE),HX_("MAX_3D_TEXTURE_SIZE",98,9e,8f,d5)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_ELEMENTS_VERTICES),HX_("MAX_ELEMENTS_VERTICES",86,be,2e,25)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_ELEMENTS_INDICES),HX_("MAX_ELEMENTS_INDICES",1a,7d,aa,73)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_TEXTURE_LOD_BIAS),HX_("MAX_TEXTURE_LOD_BIAS",f6,fc,86,68)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_FRAGMENT_UNIFORM_COMPONENTS),HX_("MAX_FRAGMENT_UNIFORM_COMPONENTS",75,6c,59,3e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_VERTEX_UNIFORM_COMPONENTS),HX_("MAX_VERTEX_UNIFORM_COMPONENTS",21,c6,3a,5f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_ARRAY_TEXTURE_LAYERS),HX_("MAX_ARRAY_TEXTURE_LAYERS",e7,c3,5b,6e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MIN_PROGRAM_TEXEL_OFFSET),HX_("MIN_PROGRAM_TEXEL_OFFSET",2c,3a,dc,08)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_PROGRAM_TEXEL_OFFSET),HX_("MAX_PROGRAM_TEXEL_OFFSET",da,db,54,b2)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_VARYING_COMPONENTS),HX_("MAX_VARYING_COMPONENTS",00,28,c3,5f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAGMENT_SHADER_DERIVATIVE_HINT),HX_("FRAGMENT_SHADER_DERIVATIVE_HINT",74,51,a3,7e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RASTERIZER_DISCARD),HX_("RASTERIZER_DISCARD",1a,72,dc,4a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_ARRAY_BINDING),HX_("VERTEX_ARRAY_BINDING",c4,1d,24,31)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_VERTEX_OUTPUT_COMPONENTS),HX_("MAX_VERTEX_OUTPUT_COMPONENTS",54,64,33,f3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_FRAGMENT_INPUT_COMPONENTS),HX_("MAX_FRAGMENT_INPUT_COMPONENTS",5f,cc,5e,d8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_SERVER_WAIT_TIMEOUT),HX_("MAX_SERVER_WAIT_TIMEOUT",38,5d,22,83)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_ELEMENT_INDEX),HX_("MAX_ELEMENT_INDEX",94,ef,d5,74)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RED),HX_("RED",31,75,3e,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB8),HX_("RGB8",ab,98,69,36)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA8),HX_("RGBA8",04,05,fc,65)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB10_A2),HX_("RGB10_A2",64,47,cf,94)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_3D),HX_("TEXTURE_3D",f5,0c,f8,a2)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_WRAP_R),HX_("TEXTURE_WRAP_R",a1,2d,c3,fe)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_MIN_LOD),HX_("TEXTURE_MIN_LOD",10,2d,09,39)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_MAX_LOD),HX_("TEXTURE_MAX_LOD",22,17,30,c8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_BASE_LEVEL),HX_("TEXTURE_BASE_LEVEL",ba,eb,52,05)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_MAX_LEVEL),HX_("TEXTURE_MAX_LEVEL",65,66,2f,3f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_COMPARE_MODE),HX_("TEXTURE_COMPARE_MODE",e1,a5,b9,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_COMPARE_FUNC),HX_("TEXTURE_COMPARE_FUNC",c2,bd,1d,82)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SRGB),HX_("SRGB",7a,2c,1b,37)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SRGB8),HX_("SRGB8",7e,be,ab,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SRGB8_ALPHA8),HX_("SRGB8_ALPHA8",1b,b6,71,35)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COMPARE_REF_TO_TEXTURE),HX_("COMPARE_REF_TO_TEXTURE",3d,3b,36,aa)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA32F),HX_("RGBA32F",93,ae,c6,e0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB32F),HX_("RGB32F",fa,b9,7d,d6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA16F),HX_("RGBA16F",8d,2d,c5,e0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB16F),HX_("RGB16F",f4,38,7c,d6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_2D_ARRAY),HX_("TEXTURE_2D_ARRAY",50,2d,c6,60)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_BINDING_2D_ARRAY),HX_("TEXTURE_BINDING_2D_ARRAY",ea,1c,7d,28)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,R11F_G11F_B10F),HX_("R11F_G11F_B10F",9a,02,7e,28)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB9_E5),HX_("RGB9_E5",43,6d,9e,db)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA32UI),HX_("RGBA32UI",67,1f,12,cd)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB32UI),HX_("RGB32UI",20,0e,85,d7)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA16UI),HX_("RGBA16UI",2d,bb,c2,cb)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB16UI),HX_("RGB16UI",e6,a9,35,d6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA8UI),HX_("RGBA8UI",58,98,ca,e0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB8UI),HX_("RGB8UI",bf,a3,81,d6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA32I),HX_("RGBA32I",96,ae,c6,e0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB32I),HX_("RGB32I",fd,b9,7d,d6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA16I),HX_("RGBA16I",90,2d,c5,e0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB16I),HX_("RGB16I",f7,38,7c,d6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA8I),HX_("RGBA8I",c5,5e,88,d6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB8I),HX_("RGB8I",3e,fd,fb,65)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RED_INTEGER),HX_("RED_INTEGER",50,79,18,f4)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB_INTEGER),HX_("RGB_INTEGER",0c,97,ca,ce)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA_INTEGER),HX_("RGBA_INTEGER",d3,57,27,c0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,R8),HX_("R8",a6,47,00,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG8),HX_("RG8",e3,76,3e,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,R16F),HX_("R16F",af,dc,58,36)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,R32F),HX_("R32F",b5,5d,5a,36)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG16F),HX_("RG16F",2c,15,ef,65)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG32F),HX_("RG32F",32,96,f0,65)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,R8I),HX_("R8I",e3,69,3e,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,R8UI),HX_("R8UI",7a,47,5e,36)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,R16I),HX_("R16I",b2,dc,58,36)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,R16UI),HX_("R16UI",cb,49,68,57)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,R32I),HX_("R32I",b8,5d,5a,36)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,R32UI),HX_("R32UI",05,ae,b7,58)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG8I),HX_("RG8I",06,90,69,36)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG8UI),HX_("RG8UI",f7,7f,f4,65)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG16I),HX_("RG16I",2f,15,ef,65)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG16UI),HX_("RG16UI",ae,7e,43,cb)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG32I),HX_("RG32I",35,96,f0,65)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG32UI),HX_("RG32UI",e8,e2,92,cc)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,R8_SNORM),HX_("R8_SNORM",76,d3,ce,64)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG8_SNORM),HX_("RG8_SNORM",73,8e,f7,80)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB8_SNORM),HX_("RGB8_SNORM",3b,36,76,ea)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGBA8_SNORM),HX_("RGBA8_SNORM",54,eb,97,96)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RGB10_A2UI),HX_("RGB10_A2UI",b8,32,bb,dc)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_IMMUTABLE_FORMAT),HX_("TEXTURE_IMMUTABLE_FORMAT",38,2c,95,5e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TEXTURE_IMMUTABLE_LEVELS),HX_("TEXTURE_IMMUTABLE_LEVELS",70,5b,56,05)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT_2_10_10_10_REV),HX_("UNSIGNED_INT_2_10_10_10_REV",0a,41,8d,b2)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT_10F_11F_11F_REV),HX_("UNSIGNED_INT_10F_11F_11F_REV",5f,56,ed,03)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT_5_9_9_9_REV),HX_("UNSIGNED_INT_5_9_9_9_REV",ed,ec,63,c7)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_32_UNSIGNED_INT_24_8_REV),HX_("FLOAT_32_UNSIGNED_INT_24_8_REV",fc,a5,51,95)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT_24_8),HX_("UNSIGNED_INT_24_8",b5,57,d6,d9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,HALF_FLOAT),HX_("HALF_FLOAT",b0,fe,81,7a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG),HX_("RG",b5,47,00,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RG_INTEGER),HX_("RG_INTEGER",d4,6f,76,e9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INT_2_10_10_10_REV),HX_("INT_2_10_10_10_REV",c0,20,1e,cf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CURRENT_QUERY),HX_("CURRENT_QUERY",02,13,44,ba)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,QUERY_RESULT),HX_("QUERY_RESULT",94,10,d9,08)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,QUERY_RESULT_AVAILABLE),HX_("QUERY_RESULT_AVAILABLE",fe,56,e1,27)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ANY_SAMPLES_PASSED),HX_("ANY_SAMPLES_PASSED",99,0e,a3,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ANY_SAMPLES_PASSED_CONSERVATIVE),HX_("ANY_SAMPLES_PASSED_CONSERVATIVE",53,18,b7,3e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_DRAW_BUFFERS),HX_("MAX_DRAW_BUFFERS",b3,92,8a,37)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER0),HX_("DRAW_BUFFER0",b5,68,27,ac)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER1),HX_("DRAW_BUFFER1",b6,68,27,ac)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER2),HX_("DRAW_BUFFER2",b7,68,27,ac)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER3),HX_("DRAW_BUFFER3",b8,68,27,ac)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER4),HX_("DRAW_BUFFER4",b9,68,27,ac)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER5),HX_("DRAW_BUFFER5",ba,68,27,ac)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER6),HX_("DRAW_BUFFER6",bb,68,27,ac)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER7),HX_("DRAW_BUFFER7",bc,68,27,ac)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER8),HX_("DRAW_BUFFER8",bd,68,27,ac)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER9),HX_("DRAW_BUFFER9",be,68,27,ac)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER10),HX_("DRAW_BUFFER10",ba,36,54,f6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER11),HX_("DRAW_BUFFER11",bb,36,54,f6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER12),HX_("DRAW_BUFFER12",bc,36,54,f6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER13),HX_("DRAW_BUFFER13",bd,36,54,f6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER14),HX_("DRAW_BUFFER14",be,36,54,f6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_BUFFER15),HX_("DRAW_BUFFER15",bf,36,54,f6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_COLOR_ATTACHMENTS),HX_("MAX_COLOR_ATTACHMENTS",19,d7,ae,06)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT1),HX_("COLOR_ATTACHMENT1",b2,9a,fe,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT2),HX_("COLOR_ATTACHMENT2",b3,9a,fe,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT3),HX_("COLOR_ATTACHMENT3",b4,9a,fe,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT4),HX_("COLOR_ATTACHMENT4",b5,9a,fe,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT5),HX_("COLOR_ATTACHMENT5",b6,9a,fe,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT6),HX_("COLOR_ATTACHMENT6",b7,9a,fe,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT7),HX_("COLOR_ATTACHMENT7",b8,9a,fe,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT8),HX_("COLOR_ATTACHMENT8",b9,9a,fe,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT9),HX_("COLOR_ATTACHMENT9",ba,9a,fe,86)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT10),HX_("COLOR_ATTACHMENT10",3e,c1,c8,97)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT11),HX_("COLOR_ATTACHMENT11",3f,c1,c8,97)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT12),HX_("COLOR_ATTACHMENT12",40,c1,c8,97)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT13),HX_("COLOR_ATTACHMENT13",41,c1,c8,97)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT14),HX_("COLOR_ATTACHMENT14",42,c1,c8,97)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR_ATTACHMENT15),HX_("COLOR_ATTACHMENT15",43,c1,c8,97)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLER_3D),HX_("SAMPLER_3D",e8,2a,93,6e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLER_2D_SHADOW),HX_("SAMPLER_2D_SHADOW",96,9e,66,61)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLER_2D_ARRAY),HX_("SAMPLER_2D_ARRAY",83,c3,f4,b9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLER_2D_ARRAY_SHADOW),HX_("SAMPLER_2D_ARRAY_SHADOW",5c,88,64,1c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLER_CUBE_SHADOW),HX_("SAMPLER_CUBE_SHADOW",13,3c,fd,ff)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INT_SAMPLER_2D),HX_("INT_SAMPLER_2D",b9,f2,ff,97)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INT_SAMPLER_3D),HX_("INT_SAMPLER_3D",98,f3,ff,97)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INT_SAMPLER_CUBE),HX_("INT_SAMPLER_CUBE",9c,93,36,99)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INT_SAMPLER_2D_ARRAY),HX_("INT_SAMPLER_2D_ARRAY",33,30,e9,17)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT_SAMPLER_2D),HX_("UNSIGNED_INT_SAMPLER_2D",03,a6,f2,c4)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT_SAMPLER_3D),HX_("UNSIGNED_INT_SAMPLER_3D",e2,a6,f2,c4)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT_SAMPLER_CUBE),HX_("UNSIGNED_INT_SAMPLER_CUBE",66,2d,b4,ee)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT_SAMPLER_2D_ARRAY),HX_("UNSIGNED_INT_SAMPLER_2D_ARRAY",fd,76,98,0d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_SAMPLES),HX_("MAX_SAMPLES",ee,bc,20,56)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SAMPLER_BINDING),HX_("SAMPLER_BINDING",8e,79,76,22)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,PIXEL_PACK_BUFFER),HX_("PIXEL_PACK_BUFFER",4d,06,41,84)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,PIXEL_UNPACK_BUFFER),HX_("PIXEL_UNPACK_BUFFER",54,80,91,31)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,PIXEL_PACK_BUFFER_BINDING),HX_("PIXEL_PACK_BUFFER_BINDING",f3,53,0d,81)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,PIXEL_UNPACK_BUFFER_BINDING),HX_("PIXEL_UNPACK_BUFFER_BINDING",fa,ac,01,cf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COPY_READ_BUFFER),HX_("COPY_READ_BUFFER",3f,8b,f1,64)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COPY_WRITE_BUFFER),HX_("COPY_WRITE_BUFFER",ca,9d,e5,e4)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COPY_READ_BUFFER_BINDING),HX_("COPY_READ_BUFFER_BINDING",e5,1a,17,74)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COPY_WRITE_BUFFER_BINDING),HX_("COPY_WRITE_BUFFER_BINDING",70,30,81,8a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_MAT2x3),HX_("FLOAT_MAT2x3",90,be,dd,c3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_MAT2x4),HX_("FLOAT_MAT2x4",91,be,dd,c3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_MAT3x2),HX_("FLOAT_MAT3x2",d0,80,de,c3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_MAT3x4),HX_("FLOAT_MAT3x4",d2,80,de,c3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_MAT4x2),HX_("FLOAT_MAT4x2",11,43,df,c3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FLOAT_MAT4x3),HX_("FLOAT_MAT4x3",12,43,df,c3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT_VEC2),HX_("UNSIGNED_INT_VEC2",f8,d3,ae,f1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT_VEC3),HX_("UNSIGNED_INT_VEC3",f9,d3,ae,f1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_INT_VEC4),HX_("UNSIGNED_INT_VEC4",fa,d3,ae,f1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNED_NORMALIZED),HX_("UNSIGNED_NORMALIZED",81,9e,e9,b5)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SIGNED_NORMALIZED),HX_("SIGNED_NORMALIZED",fa,1c,1f,6e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_ATTRIB_ARRAY_INTEGER),HX_("VERTEX_ATTRIB_ARRAY_INTEGER",9e,52,f4,fe)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,VERTEX_ATTRIB_ARRAY_DIVISOR),HX_("VERTEX_ATTRIB_ARRAY_DIVISOR",3e,5a,bb,58)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRANSFORM_FEEDBACK_BUFFER_MODE),HX_("TRANSFORM_FEEDBACK_BUFFER_MODE",5b,21,21,18)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS),HX_("MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",66,0f,c1,2a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRANSFORM_FEEDBACK_VARYINGS),HX_("TRANSFORM_FEEDBACK_VARYINGS",4a,49,b8,8f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRANSFORM_FEEDBACK_BUFFER_START),HX_("TRANSFORM_FEEDBACK_BUFFER_START",4a,5f,8f,7c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRANSFORM_FEEDBACK_BUFFER_SIZE),HX_("TRANSFORM_FEEDBACK_BUFFER_SIZE",b9,ee,13,1c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN),HX_("TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",2b,e6,b6,9f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS),HX_("MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",18,9a,28,79)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS),HX_("MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",79,55,1c,52)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INTERLEAVED_ATTRIBS),HX_("INTERLEAVED_ATTRIBS",d3,03,58,cf)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SEPARATE_ATTRIBS),HX_("SEPARATE_ATTRIBS",ad,f1,7d,f6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRANSFORM_FEEDBACK_BUFFER),HX_("TRANSFORM_FEEDBACK_BUFFER",87,cc,fb,c7)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRANSFORM_FEEDBACK_BUFFER_BINDING),HX_("TRANSFORM_FEEDBACK_BUFFER_BINDING",2d,e4,af,90)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRANSFORM_FEEDBACK),HX_("TRANSFORM_FEEDBACK",18,81,af,95)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRANSFORM_FEEDBACK_PAUSED),HX_("TRANSFORM_FEEDBACK_PAUSED",35,50,eb,e6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRANSFORM_FEEDBACK_ACTIVE),HX_("TRANSFORM_FEEDBACK_ACTIVE",4d,51,ad,0d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TRANSFORM_FEEDBACK_BINDING),HX_("TRANSFORM_FEEDBACK_BINDING",be,11,f4,01)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING),HX_("FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",79,c9,9d,03)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE),HX_("FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",c6,3b,6e,90)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_RED_SIZE),HX_("FRAMEBUFFER_ATTACHMENT_RED_SIZE",39,51,04,f1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_GREEN_SIZE),HX_("FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",07,31,24,91)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_BLUE_SIZE),HX_("FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",1c,15,11,a1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE),HX_("FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",8c,86,04,dd)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE),HX_("FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",c7,26,cb,18)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE),HX_("FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",ae,65,3b,9a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_DEFAULT),HX_("FRAMEBUFFER_DEFAULT",ef,3b,45,e2)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH24_STENCIL8),HX_("DEPTH24_STENCIL8",36,5e,b6,a6)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_FRAMEBUFFER_BINDING),HX_("DRAW_FRAMEBUFFER_BINDING",78,93,98,ce)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,READ_FRAMEBUFFER),HX_("READ_FRAMEBUFFER",24,8b,f0,a0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DRAW_FRAMEBUFFER),HX_("DRAW_FRAMEBUFFER",d2,b8,5e,7a)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,READ_FRAMEBUFFER_BINDING),HX_("READ_FRAMEBUFFER_BINDING",ca,07,a0,07)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,RENDERBUFFER_SAMPLES),HX_("RENDERBUFFER_SAMPLES",40,5d,0c,28)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER),HX_("FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",43,08,18,7f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,FRAMEBUFFER_INCOMPLETE_MULTISAMPLE),HX_("FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",54,d0,f2,d0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BUFFER),HX_("UNIFORM_BUFFER",0b,f0,a3,ee)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BUFFER_BINDING),HX_("UNIFORM_BUFFER_BINDING",b1,2b,2d,65)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BUFFER_START),HX_("UNIFORM_BUFFER_START",ce,fd,84,f1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BUFFER_SIZE),HX_("UNIFORM_BUFFER_SIZE",b5,8c,28,19)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_VERTEX_UNIFORM_BLOCKS),HX_("MAX_VERTEX_UNIFORM_BLOCKS",11,56,73,a0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_FRAGMENT_UNIFORM_BLOCKS),HX_("MAX_FRAGMENT_UNIFORM_BLOCKS",65,42,83,5d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_COMBINED_UNIFORM_BLOCKS),HX_("MAX_COMBINED_UNIFORM_BLOCKS",d0,c0,cb,e7)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_UNIFORM_BUFFER_BINDINGS),HX_("MAX_UNIFORM_BUFFER_BINDINGS",87,4d,27,c3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_UNIFORM_BLOCK_SIZE),HX_("MAX_UNIFORM_BLOCK_SIZE",f9,dc,3f,6c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS),HX_("MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",fd,37,15,e3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS),HX_("MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",51,0d,19,43)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BUFFER_OFFSET_ALIGNMENT),HX_("UNIFORM_BUFFER_OFFSET_ALIGNMENT",cb,a9,f8,cc)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ACTIVE_UNIFORM_BLOCKS),HX_("ACTIVE_UNIFORM_BLOCKS",2a,2b,e3,0c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_TYPE),HX_("UNIFORM_TYPE",05,d9,59,48)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_SIZE),HX_("UNIFORM_SIZE",0c,87,a4,47)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BLOCK_INDEX),HX_("UNIFORM_BLOCK_INDEX",35,78,71,93)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_OFFSET),HX_("UNIFORM_OFFSET",9e,ca,4e,7e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_ARRAY_STRIDE),HX_("UNIFORM_ARRAY_STRIDE",aa,aa,4a,6c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_MATRIX_STRIDE),HX_("UNIFORM_MATRIX_STRIDE",ec,75,fb,fc)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_IS_ROW_MAJOR),HX_("UNIFORM_IS_ROW_MAJOR",4a,d7,8e,f1)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BLOCK_BINDING),HX_("UNIFORM_BLOCK_BINDING",28,1b,56,0b)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BLOCK_DATA_SIZE),HX_("UNIFORM_BLOCK_DATA_SIZE",f9,d0,4f,72)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BLOCK_ACTIVE_UNIFORMS),HX_("UNIFORM_BLOCK_ACTIVE_UNIFORMS",9b,74,7f,6e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),HX_("UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",40,99,27,7e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),HX_("UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",c1,8d,d1,e0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),HX_("UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",15,c5,8f,af)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,OBJECT_TYPE),HX_("OBJECT_TYPE",7a,57,2a,1f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SYNC_CONDITION),HX_("SYNC_CONDITION",57,f7,d5,73)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SYNC_STATUS),HX_("SYNC_STATUS",d6,f3,b7,06)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SYNC_FLAGS),HX_("SYNC_FLAGS",03,e3,f0,79)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SYNC_FENCE),HX_("SYNC_FENCE",6d,3e,5a,75)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SYNC_GPU_COMMANDS_COMPLETE),HX_("SYNC_GPU_COMMANDS_COMPLETE",f9,23,65,18)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,UNSIGNALED),HX_("UNSIGNALED",20,4c,0a,fd)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SIGNALED),HX_("SIGNALED",c7,80,c2,de)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,ALREADY_SIGNALED),HX_("ALREADY_SIGNALED",ae,dd,3f,e3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TIMEOUT_EXPIRED),HX_("TIMEOUT_EXPIRED",87,64,05,cd)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,CONDITION_SATISFIED),HX_("CONDITION_SATISFIED",ce,a6,40,b0)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,WAIT_FAILED),HX_("WAIT_FAILED",87,c9,db,92)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,SYNC_FLUSH_COMMANDS_BIT),HX_("SYNC_FLUSH_COMMANDS_BIT",d5,c6,2c,c7)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,COLOR),HX_("COLOR",43,a9,4a,c8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH),HX_("DEPTH",e3,28,18,55)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STENCIL),HX_("STENCIL",dc,91,d7,ff)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MIN),HX_("MIN",72,ad,3a,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX),HX_("MAX",84,a6,3a,00)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_COMPONENT24),HX_("DEPTH_COMPONENT24",03,cd,68,43)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STREAM_READ),HX_("STREAM_READ",b5,9e,5f,1e)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STREAM_COPY),HX_("STREAM_COPY",14,0f,7d,14)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STATIC_READ),HX_("STATIC_READ",c7,6f,66,c3)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,STATIC_COPY),HX_("STATIC_COPY",26,e0,83,b9)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DYNAMIC_READ),HX_("DYNAMIC_READ",76,23,56,2d)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DYNAMIC_COPY),HX_("DYNAMIC_COPY",d5,93,73,23)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH_COMPONENT32F),HX_("DEPTH_COMPONENT32F",66,56,4b,b8)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,DEPTH32F_STENCIL8),HX_("DEPTH32F_STENCIL8",f7,07,b2,83)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,INVALID_INDEX),HX_("INVALID_INDEX",4a,04,83,3c)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,TIMEOUT_IGNORED),HX_("TIMEOUT_IGNORED",f4,3b,74,84)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,MAX_CLIENT_WAIT_TIMEOUT_WEBGL),HX_("MAX_CLIENT_WAIT_TIMEOUT_WEBGL",8a,37,14,d5)},
	{hx::fsString,(int)offsetof(NativeOpenGLRenderContext_obj,type),HX_("type",ba,f2,08,4d)},
	{hx::fsFloat,(int)offsetof(NativeOpenGLRenderContext_obj,version),HX_("version",18,e7,f1,7c)},
	{hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___arrayBufferBinding),HX_("__arrayBufferBinding",ec,c7,f6,4e)},
	{hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___elementBufferBinding),HX_("__elementBufferBinding",e9,54,64,1f)},
	{hx::fsInt,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___contextID),HX_("__contextID",6a,b8,28,45)},
	{hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___currentProgram),HX_("__currentProgram",6b,4a,cd,35)},
	{hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___framebufferBinding),HX_("__framebufferBinding",f8,60,08,ef)},
	{hx::fsBool,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___initialized),HX_("__initialized",f4,35,88,7f)},
	{hx::fsBool,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___isContextLost),HX_("__isContextLost",89,18,92,b5)},
	{hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___renderbufferBinding),HX_("__renderbufferBinding",ef,6d,e9,2f)},
	{hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___texture2DBinding),HX_("__texture2DBinding",78,dc,16,4f)},
	{hx::fsObject /*  ::lime::graphics::opengl::GLObject */ ,(int)offsetof(NativeOpenGLRenderContext_obj,_hx___textureCubeMapBinding),HX_("__textureCubeMapBinding",79,78,a4,c8)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo NativeOpenGLRenderContext_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &NativeOpenGLRenderContext_obj::_hx___extensionObjects,HX_("__extensionObjects",35,8e,af,ef)},
	{hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors,HX_("__extensionObjectConstructors",d7,1f,f7,9f)},
	{hx::fsInt,(void *) &NativeOpenGLRenderContext_obj::_hx___lastContextID,HX_("__lastContextID",34,83,e7,9c)},
	{hx::fsObject /* ::Array< ::String > */ ,(void *) &NativeOpenGLRenderContext_obj::_hx___supportedExtensions,HX_("__supportedExtensions",c2,2c,4a,37)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String NativeOpenGLRenderContext_obj_sMemberFields[] = {
	HX_("DEPTH_BUFFER_BIT",ca,5b,ce,c6),
	HX_("STENCIL_BUFFER_BIT",71,93,29,de),
	HX_("COLOR_BUFFER_BIT",6a,f7,74,fb),
	HX_("POINTS",23,be,b0,a9),
	HX_("LINES",df,15,f0,f2),
	HX_("LINE_LOOP",cf,55,c1,16),
	HX_("LINE_STRIP",ed,20,88,dd),
	HX_("TRIANGLES",8b,a0,99,7a),
	HX_("TRIANGLE_STRIP",c1,66,6c,f6),
	HX_("TRIANGLE_FAN",7c,ee,2e,91),
	HX_("ZERO",28,d7,b1,3b),
	HX_("ONE",46,36,3c,00),
	HX_("SRC_COLOR",48,9e,bd,5c),
	HX_("ONE_MINUS_SRC_COLOR",20,3b,e1,48),
	HX_("SRC_ALPHA",43,d4,f7,33),
	HX_("ONE_MINUS_SRC_ALPHA",1b,71,1b,20),
	HX_("DST_ALPHA",24,02,f2,d3),
	HX_("ONE_MINUS_DST_ALPHA",fc,9e,15,c0),
	HX_("DST_COLOR",29,cc,b7,fc),
	HX_("ONE_MINUS_DST_COLOR",01,69,db,e8),
	HX_("SRC_ALPHA_SATURATE",ab,e2,3d,33),
	HX_("FUNC_ADD",46,78,17,75),
	HX_("BLEND_EQUATION",9a,14,92,71),
	HX_("BLEND_EQUATION_RGB",88,25,eb,90),
	HX_("BLEND_EQUATION_ALPHA",99,aa,ae,37),
	HX_("FUNC_SUBTRACT",af,c0,a0,17),
	HX_("FUNC_REVERSE_SUBTRACT",cc,8d,ef,f3),
	HX_("BLEND_DST_RGB",05,87,f5,ec),
	HX_("BLEND_SRC_RGB",64,43,8c,2c),
	HX_("BLEND_DST_ALPHA",56,25,32,74),
	HX_("BLEND_SRC_ALPHA",75,f7,37,d4),
	HX_("CONSTANT_COLOR",e8,64,8a,c8),
	HX_("ONE_MINUS_CONSTANT_COLOR",10,39,e7,06),
	HX_("CONSTANT_ALPHA",e3,9a,c4,9f),
	HX_("ONE_MINUS_CONSTANT_ALPHA",0b,6f,21,de),
	HX_("BLEND_COLOR",75,cb,c8,67),
	HX_("ARRAY_BUFFER",46,66,17,f4),
	HX_("ELEMENT_ARRAY_BUFFER",09,05,53,3d),
	HX_("ARRAY_BUFFER_BINDING",ec,d4,a9,79),
	HX_("ELEMENT_ARRAY_BUFFER_BINDING",af,6e,96,a2),
	HX_("STREAM_DRAW",63,7f,28,15),
	HX_("STATIC_DRAW",75,50,2f,ba),
	HX_("DYNAMIC_DRAW",24,04,1f,24),
	HX_("BUFFER_SIZE",a0,7b,91,4c),
	HX_("BUFFER_USAGE",42,05,11,e0),
	HX_("CURRENT_VERTEX_ATTRIB",1f,8c,2f,ab),
	HX_("FRONT",89,50,7c,84),
	HX_("BACK",27,a2,d1,2b),
	HX_("FRONT_AND_BACK",a5,3d,6a,c1),
	HX_("TEXTURE_2D",16,0c,f8,a2),
	HX_("CULL_FACE",8a,a5,f4,cf),
	HX_("BLEND",31,20,e3,32),
	HX_("DITHER",e6,ac,41,70),
	HX_("STENCIL_TEST",d5,dc,69,d5),
	HX_("DEPTH_TEST",6e,6c,25,28),
	HX_("SCISSOR_TEST",b5,be,51,59),
	HX_("POLYGON_OFFSET_FILL",4a,3d,32,ac),
	HX_("SAMPLE_ALPHA_TO_COVERAGE",16,3e,56,e1),
	HX_("SAMPLE_COVERAGE",dd,b7,0e,c1),
	HX_("NO_ERROR",ea,b5,7d,2f),
	HX_("INVALID_ENUM",a9,74,70,13),
	HX_("INVALID_VALUE",a9,e8,26,b0),
	HX_("INVALID_OPERATION",5f,b1,c8,29),
	HX_("OUT_OF_MEMORY",18,f2,97,e1),
	HX_("CW",b4,3a,00,00),
	HX_("CCW",b7,11,33,00),
	HX_("LINE_WIDTH",1b,84,d2,23),
	HX_("ALIASED_POINT_SIZE_RANGE",fe,f6,a4,7b),
	HX_("ALIASED_LINE_WIDTH_RANGE",e9,22,d5,8a),
	HX_("CULL_FACE_MODE",78,bd,87,d1),
	HX_("FRONT_FACE",53,b7,4d,ef),
	HX_("DEPTH_RANGE",01,9a,23,cf),
	HX_("DEPTH_WRITEMASK",8f,37,3f,66),
	HX_("DEPTH_CLEAR_VALUE",23,17,0d,1b),
	HX_("DEPTH_FUNC",60,8f,f0,1e),
	HX_("STENCIL_CLEAR_VALUE",9c,91,82,73),
	HX_("STENCIL_FUNC",c7,ff,34,cc),
	HX_("STENCIL_FAIL",61,ce,25,cc),
	HX_("STENCIL_PASS_DEPTH_FAIL",45,ca,b9,c8),
	HX_("STENCIL_PASS_DEPTH_PASS",38,f5,55,cf),
	HX_("STENCIL_REF",10,6a,a5,3c),
	HX_("STENCIL_VALUE_MASK",9d,58,5e,a0),
	HX_("STENCIL_WRITEMASK",c8,f1,a6,49),
	HX_("STENCIL_BACK_FUNC",39,78,a2,90),
	HX_("STENCIL_BACK_FAIL",d3,46,93,90),
	HX_("STENCIL_BACK_PASS_DEPTH_FAIL",13,23,0e,34),
	HX_("STENCIL_BACK_PASS_DEPTH_PASS",06,4e,aa,3a),
	HX_("STENCIL_BACK_REF",de,45,b8,08),
	HX_("STENCIL_BACK_VALUE_MASK",8f,b2,c4,88),
	HX_("STENCIL_BACK_WRITEMASK",16,9c,15,c2),
	HX_("VIEWPORT",66,dc,2a,f6),
	HX_("SCISSOR_BOX",e8,48,4c,55),
	HX_("COLOR_CLEAR_VALUE",83,a7,2e,f8),
	HX_("COLOR_WRITEMASK",ef,ef,f9,14),
	HX_("UNPACK_ALIGNMENT",b6,2a,2e,4b),
	HX_("PACK_ALIGNMENT",9d,d6,85,c3),
	HX_("MAX_TEXTURE_SIZE",e0,0b,5b,fb),
	HX_("MAX_VIEWPORT_DIMS",a9,2d,fb,08),
	HX_("SUBPIXEL_BITS",1f,ac,14,0a),
	HX_("RED_BITS",14,f8,9e,96),
	HX_("GREEN_BITS",62,a9,9b,94),
	HX_("BLUE_BITS",0b,26,60,a1),
	HX_("ALPHA_BITS",e7,fe,7b,e0),
	HX_("DEPTH_BITS",22,9f,42,1c),
	HX_("STENCIL_BITS",89,0f,87,c9),
	HX_("POLYGON_OFFSET_UNITS",a8,e8,11,a6),
	HX_("POLYGON_OFFSET_FACTOR",56,6b,12,2a),
	HX_("TEXTURE_BINDING_2D",30,ec,98,b1),
	HX_("SAMPLE_BUFFERS",fe,16,71,3c),
	HX_("SAMPLES",e9,98,9d,03),
	HX_("SAMPLE_COVERAGE_VALUE",2f,7a,07,69),
	HX_("SAMPLE_COVERAGE_INVERT",78,52,a5,cd),
	HX_("NUM_COMPRESSED_TEXTURE_FORMATS",33,ae,1c,0d),
	HX_("COMPRESSED_TEXTURE_FORMATS",7a,13,e3,12),
	HX_("DONT_CARE",7f,9b,c1,cf),
	HX_("FASTEST",0a,a3,0d,5e),
	HX_("NICEST",7e,6d,94,64),
	HX_("GENERATE_MIPMAP_HINT",94,d3,d5,83),
	HX_("BYTE",08,e7,e3,2b),
	HX_("UNSIGNED_BYTE",d2,79,6b,01),
	HX_("SHORT",5c,bc,15,fa),
	HX_("UNSIGNED_SHORT",52,9a,2e,fb),
	HX_("INT",cf,a8,37,00),
	HX_("UNSIGNED_INT",45,fd,b9,1c),
	HX_("FLOAT",7c,fd,84,80),
	HX_("FIXED",54,31,90,7e),
	HX_("DEPTH_COMPONENT",01,1f,62,0f),
	HX_("ALPHA",3e,df,84,9f),
	HX_("RGB",ed,76,3e,00),
	HX_("RGBA",b4,98,69,36),
	HX_("LUMINANCE",d8,a7,e0,63),
	HX_("LUMINANCE_ALPHA",57,40,e0,bd),
	HX_("UNSIGNED_SHORT_4_4_4_4",a6,33,71,7b),
	HX_("UNSIGNED_SHORT_5_5_5_1",26,01,6e,38),
	HX_("UNSIGNED_SHORT_5_6_5",75,bb,16,8c),
	HX_("FRAGMENT_SHADER",f4,26,78,e9),
	HX_("VERTEX_SHADER",e0,69,73,49),
	HX_("MAX_VERTEX_ATTRIBS",49,c9,15,5f),
	HX_("MAX_VERTEX_UNIFORM_VECTORS",45,6c,16,5a),
	HX_("MAX_VARYING_VECTORS",06,b9,f7,37),
	HX_("MAX_COMBINED_TEXTURE_IMAGE_UNITS",a8,d1,a6,77),
	HX_("MAX_VERTEX_TEXTURE_IMAGE_UNITS",c7,90,95,2b),
	HX_("MAX_TEXTURE_IMAGE_UNITS",cc,6c,61,54),
	HX_("MAX_FRAGMENT_UNIFORM_VECTORS",71,49,f5,0a),
	HX_("SHADER_TYPE",54,e5,27,87),
	HX_("DELETE_STATUS",06,e4,98,1e),
	HX_("LINK_STATUS",17,18,8f,45),
	HX_("VALIDATE_STATUS",fb,22,07,c6),
	HX_("ATTACHED_SHADERS",73,d2,76,75),
	HX_("ACTIVE_UNIFORMS",98,7d,3a,2c),
	HX_("ACTIVE_UNIFORMS_MAX_LENGTH",08,cb,c9,4d),
	HX_("ACTIVE_ATTRIBUTES",f0,e5,c7,4a),
	HX_("ACTIVE_ATTRIBUTES_MAX_LENGTH",b0,11,b3,ae),
	HX_("SHADING_LANGUAGE_VERSION",e6,c4,ef,70),
	HX_("CURRENT_PROGRAM",fe,28,c0,3f),
	HX_("NEVER",6c,76,1e,17),
	HX_("LESS",59,db,70,32),
	HX_("EQUAL",94,07,71,f0),
	HX_("LEQUAL",c8,73,90,53),
	HX_("GREATER",da,64,94,37),
	HX_("NOTEQUAL",c1,c1,e9,c8),
	HX_("GEQUAL",ed,a5,c7,53),
	HX_("ALWAYS",cf,ba,59,f9),
	HX_("KEEP",85,98,c7,31),
	HX_("REPLACE",14,1c,fc,2a),
	HX_("INCR",d4,fd,7b,30),
	HX_("DECR",70,18,27,2d),
	HX_("INVERT",16,93,5b,52),
	HX_("INCR_WRAP",55,7f,68,2c),
	HX_("DECR_WRAP",39,6f,eb,0a),
	HX_("VENDOR",88,91,19,51),
	HX_("RENDERER",43,55,61,0c),
	HX_("VERSION",f8,ba,c5,fc),
	HX_("EXTENSIONS",14,f0,79,7b),
	HX_("NEAREST",3e,ec,9d,e5),
	HX_("LINEAR",e5,fd,22,9f),
	HX_("NEAREST_MIPMAP_NEAREST",68,b9,63,7e),
	HX_("LINEAR_MIPMAP_NEAREST",a1,9b,a4,65),
	HX_("NEAREST_MIPMAP_LINEAR",fb,83,f2,3b),
	HX_("LINEAR_MIPMAP_LINEAR",e2,8b,f8,99),
	HX_("TEXTURE_MAG_FILTER",88,ff,d5,1e),
	HX_("TEXTURE_MIN_FILTER",69,66,c2,46),
	HX_("TEXTURE_WRAP_S",a2,2d,c3,fe),
	HX_("TEXTURE_WRAP_T",a3,2d,c3,fe),
	HX_("TEXTURE",bb,9c,b4,1e),
	HX_("TEXTURE_CUBE_MAP",36,7a,e1,ad),
	HX_("TEXTURE_BINDING_CUBE_MAP",d0,69,98,75),
	HX_("TEXTURE_CUBE_MAP_POSITIVE_X",bb,1c,ee,24),
	HX_("TEXTURE_CUBE_MAP_NEGATIVE_X",77,03,e2,6b),
	HX_("TEXTURE_CUBE_MAP_POSITIVE_Y",bc,1c,ee,24),
	HX_("TEXTURE_CUBE_MAP_NEGATIVE_Y",78,03,e2,6b),
	HX_("TEXTURE_CUBE_MAP_POSITIVE_Z",bd,1c,ee,24),
	HX_("TEXTURE_CUBE_MAP_NEGATIVE_Z",79,03,e2,6b),
	HX_("MAX_CUBE_MAP_TEXTURE_SIZE",77,b9,24,9d),
	HX_("TEXTURE0",15,87,54,bf),
	HX_("TEXTURE1",16,87,54,bf),
	HX_("TEXTURE2",17,87,54,bf),
	HX_("TEXTURE3",18,87,54,bf),
	HX_("TEXTURE4",19,87,54,bf),
	HX_("TEXTURE5",1a,87,54,bf),
	HX_("TEXTURE6",1b,87,54,bf),
	HX_("TEXTURE7",1c,87,54,bf),
	HX_("TEXTURE8",1d,87,54,bf),
	HX_("TEXTURE9",1e,87,54,bf),
	HX_("TEXTURE10",5a,ac,a1,aa),
	HX_("TEXTURE11",5b,ac,a1,aa),
	HX_("TEXTURE12",5c,ac,a1,aa),
	HX_("TEXTURE13",5d,ac,a1,aa),
	HX_("TEXTURE14",5e,ac,a1,aa),
	HX_("TEXTURE15",5f,ac,a1,aa),
	HX_("TEXTURE16",60,ac,a1,aa),
	HX_("TEXTURE17",61,ac,a1,aa),
	HX_("TEXTURE18",62,ac,a1,aa),
	HX_("TEXTURE19",63,ac,a1,aa),
	HX_("TEXTURE20",39,ad,a1,aa),
	HX_("TEXTURE21",3a,ad,a1,aa),
	HX_("TEXTURE22",3b,ad,a1,aa),
	HX_("TEXTURE23",3c,ad,a1,aa),
	HX_("TEXTURE24",3d,ad,a1,aa),
	HX_("TEXTURE25",3e,ad,a1,aa),
	HX_("TEXTURE26",3f,ad,a1,aa),
	HX_("TEXTURE27",40,ad,a1,aa),
	HX_("TEXTURE28",41,ad,a1,aa),
	HX_("TEXTURE29",42,ad,a1,aa),
	HX_("TEXTURE30",18,ae,a1,aa),
	HX_("TEXTURE31",19,ae,a1,aa),
	HX_("ACTIVE_TEXTURE",02,1a,22,ce),
	HX_("REPEAT",5b,43,ff,b8),
	HX_("CLAMP_TO_EDGE",1d,fc,5a,96),
	HX_("MIRRORED_REPEAT",5c,94,80,4a),
	HX_("FLOAT_VEC2",61,ac,a4,eb),
	HX_("FLOAT_VEC3",62,ac,a4,eb),
	HX_("FLOAT_VEC4",63,ac,a4,eb),
	HX_("INT_VEC2",2e,14,05,7d),
	HX_("INT_VEC3",2f,14,05,7d),
	HX_("INT_VEC4",30,14,05,7d),
	HX_("BOOL",2a,4c,dc,2b),
	HX_("BOOL_VEC2",f3,66,2b,2d),
	HX_("BOOL_VEC3",f4,66,2b,2d),
	HX_("BOOL_VEC4",f5,66,2b,2d),
	HX_("FLOAT_MAT2",95,c6,ae,e5),
	HX_("FLOAT_MAT3",96,c6,ae,e5),
	HX_("FLOAT_MAT4",97,c6,ae,e5),
	HX_("SAMPLER_2D",09,2a,93,6e),
	HX_("SAMPLER_CUBE",ec,3e,82,a4),
	HX_("VERTEX_ATTRIB_ARRAY_ENABLED",61,99,09,66),
	HX_("VERTEX_ATTRIB_ARRAY_SIZE",c1,07,fd,08),
	HX_("VERTEX_ATTRIB_ARRAY_STRIDE",19,2b,41,58),
	HX_("VERTEX_ATTRIB_ARRAY_TYPE",ba,59,b2,09),
	HX_("VERTEX_ATTRIB_ARRAY_NORMALIZED",37,b7,22,78),
	HX_("VERTEX_ATTRIB_ARRAY_POINTER",9d,55,fa,38),
	HX_("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",a6,80,67,97),
	HX_("IMPLEMENTATION_COLOR_READ_TYPE",fa,b6,2b,35),
	HX_("IMPLEMENTATION_COLOR_READ_FORMAT",77,c7,1a,47),
	HX_("VERTEX_PROGRAM_POINT_SIZE",e6,56,be,34),
	HX_("POINT_SPRITE",74,93,5c,14),
	HX_("COMPILE_STATUS",de,cb,4e,8c),
	HX_("INFO_LOG_LENGTH",12,de,68,c7),
	HX_("SHADER_SOURCE_LENGTH",30,c9,50,62),
	HX_("SHADER_COMPILER",39,af,c7,ad),
	HX_("SHADER_BINARY_FORMATS",d8,ee,25,d0),
	HX_("NUM_SHADER_BINARY_FORMATS",bf,4e,e4,a8),
	HX_("LOW_FLOAT",31,04,74,e4),
	HX_("MEDIUM_FLOAT",f2,8a,46,b9),
	HX_("HIGH_FLOAT",9f,f9,3b,47),
	HX_("LOW_INT",44,28,70,45),
	HX_("MEDIUM_INT",c5,cc,af,4f),
	HX_("HIGH_INT",32,46,02,09),
	HX_("FRAMEBUFFER",cd,20,84,50),
	HX_("RENDERBUFFER",d6,a4,a4,a9),
	HX_("RGBA4",00,05,fc,65),
	HX_("RGB5_A1",47,8f,f9,d8),
	HX_("RGB565",e7,41,7f,d6),
	HX_("DEPTH_COMPONENT16",26,cc,68,43),
	HX_("STENCIL_INDEX",0f,79,b6,97),
	HX_("STENCIL_INDEX8",49,74,f3,27),
	HX_("DEPTH_STENCIL",40,2f,20,2b),
	HX_("RENDERBUFFER_WIDTH",7d,1e,e1,43),
	HX_("RENDERBUFFER_HEIGHT",70,07,69,d7),
	HX_("RENDERBUFFER_INTERNAL_FORMAT",90,da,eb,b5),
	HX_("RENDERBUFFER_RED_SIZE",98,a5,58,5e),
	HX_("RENDERBUFFER_GREEN_SIZE",26,9b,7d,3b),
	HX_("RENDERBUFFER_BLUE_SIZE",dd,93,86,dd),
	HX_("RENDERBUFFER_ALPHA_SIZE",ab,f0,5d,87),
	HX_("RENDERBUFFER_DEPTH_SIZE",e6,90,24,c3),
	HX_("RENDERBUFFER_STENCIL_SIZE",8d,d5,5a,9d),
	HX_("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",50,22,44,50),
	HX_("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",e1,a1,3a,4c),
	HX_("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",f6,9b,ba,81),
	HX_("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",dc,4c,39,8a),
	HX_("COLOR_ATTACHMENT0",b1,9a,fe,86),
	HX_("DEPTH_ATTACHMENT",ff,54,cd,e9),
	HX_("STENCIL_ATTACHMENT",a6,8c,28,01),
	HX_("DEPTH_STENCIL_ATTACHMENT",c2,e1,e1,9f),
	HX_("NONE",b8,da,ca,33),
	HX_("FRAMEBUFFER_COMPLETE",ab,65,7d,ea),
	HX_("FRAMEBUFFER_INCOMPLETE_ATTACHMENT",f2,cf,b7,1d),
	HX_("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",8b,0a,cd,77),
	HX_("FRAMEBUFFER_INCOMPLETE_DIMENSIONS",5c,86,e4,1c),
	HX_("FRAMEBUFFER_UNSUPPORTED",e3,a6,4e,c8),
	HX_("FRAMEBUFFER_BINDING",73,ee,ae,c5),
	HX_("RENDERBUFFER_BINDING",7c,23,70,23),
	HX_("MAX_RENDERBUFFER_SIZE",4f,d4,3d,65),
	HX_("INVALID_FRAMEBUFFER_OPERATION",2d,d4,c5,43),
	HX_("UNPACK_FLIP_Y_WEBGL",0e,9f,94,9d),
	HX_("UNPACK_PREMULTIPLY_ALPHA_WEBGL",73,5d,cb,c6),
	HX_("CONTEXT_LOST_WEBGL",6e,67,71,45),
	HX_("UNPACK_COLORSPACE_CONVERSION_WEBGL",9f,d9,f0,b9),
	HX_("BROWSER_DEFAULT_WEBGL",04,04,92,c0),
	HX_("READ_BUFFER",09,1e,91,cd),
	HX_("UNPACK_ROW_LENGTH",78,04,c5,5f),
	HX_("UNPACK_SKIP_ROWS",0c,e6,50,4d),
	HX_("UNPACK_SKIP_PIXELS",e0,26,60,af),
	HX_("PACK_ROW_LENGTH",b1,c2,23,34),
	HX_("PACK_SKIP_ROWS",f3,91,a8,c5),
	HX_("PACK_SKIP_PIXELS",87,da,e7,ad),
	HX_("TEXTURE_BINDING_3D",0f,ed,98,b1),
	HX_("UNPACK_SKIP_IMAGES",6b,88,48,21),
	HX_("UNPACK_IMAGE_HEIGHT",98,fd,7e,14),
	HX_("MAX_3D_TEXTURE_SIZE",98,9e,8f,d5),
	HX_("MAX_ELEMENTS_VERTICES",86,be,2e,25),
	HX_("MAX_ELEMENTS_INDICES",1a,7d,aa,73),
	HX_("MAX_TEXTURE_LOD_BIAS",f6,fc,86,68),
	HX_("MAX_FRAGMENT_UNIFORM_COMPONENTS",75,6c,59,3e),
	HX_("MAX_VERTEX_UNIFORM_COMPONENTS",21,c6,3a,5f),
	HX_("MAX_ARRAY_TEXTURE_LAYERS",e7,c3,5b,6e),
	HX_("MIN_PROGRAM_TEXEL_OFFSET",2c,3a,dc,08),
	HX_("MAX_PROGRAM_TEXEL_OFFSET",da,db,54,b2),
	HX_("MAX_VARYING_COMPONENTS",00,28,c3,5f),
	HX_("FRAGMENT_SHADER_DERIVATIVE_HINT",74,51,a3,7e),
	HX_("RASTERIZER_DISCARD",1a,72,dc,4a),
	HX_("VERTEX_ARRAY_BINDING",c4,1d,24,31),
	HX_("MAX_VERTEX_OUTPUT_COMPONENTS",54,64,33,f3),
	HX_("MAX_FRAGMENT_INPUT_COMPONENTS",5f,cc,5e,d8),
	HX_("MAX_SERVER_WAIT_TIMEOUT",38,5d,22,83),
	HX_("MAX_ELEMENT_INDEX",94,ef,d5,74),
	HX_("RED",31,75,3e,00),
	HX_("RGB8",ab,98,69,36),
	HX_("RGBA8",04,05,fc,65),
	HX_("RGB10_A2",64,47,cf,94),
	HX_("TEXTURE_3D",f5,0c,f8,a2),
	HX_("TEXTURE_WRAP_R",a1,2d,c3,fe),
	HX_("TEXTURE_MIN_LOD",10,2d,09,39),
	HX_("TEXTURE_MAX_LOD",22,17,30,c8),
	HX_("TEXTURE_BASE_LEVEL",ba,eb,52,05),
	HX_("TEXTURE_MAX_LEVEL",65,66,2f,3f),
	HX_("TEXTURE_COMPARE_MODE",e1,a5,b9,86),
	HX_("TEXTURE_COMPARE_FUNC",c2,bd,1d,82),
	HX_("SRGB",7a,2c,1b,37),
	HX_("SRGB8",7e,be,ab,00),
	HX_("SRGB8_ALPHA8",1b,b6,71,35),
	HX_("COMPARE_REF_TO_TEXTURE",3d,3b,36,aa),
	HX_("RGBA32F",93,ae,c6,e0),
	HX_("RGB32F",fa,b9,7d,d6),
	HX_("RGBA16F",8d,2d,c5,e0),
	HX_("RGB16F",f4,38,7c,d6),
	HX_("TEXTURE_2D_ARRAY",50,2d,c6,60),
	HX_("TEXTURE_BINDING_2D_ARRAY",ea,1c,7d,28),
	HX_("R11F_G11F_B10F",9a,02,7e,28),
	HX_("RGB9_E5",43,6d,9e,db),
	HX_("RGBA32UI",67,1f,12,cd),
	HX_("RGB32UI",20,0e,85,d7),
	HX_("RGBA16UI",2d,bb,c2,cb),
	HX_("RGB16UI",e6,a9,35,d6),
	HX_("RGBA8UI",58,98,ca,e0),
	HX_("RGB8UI",bf,a3,81,d6),
	HX_("RGBA32I",96,ae,c6,e0),
	HX_("RGB32I",fd,b9,7d,d6),
	HX_("RGBA16I",90,2d,c5,e0),
	HX_("RGB16I",f7,38,7c,d6),
	HX_("RGBA8I",c5,5e,88,d6),
	HX_("RGB8I",3e,fd,fb,65),
	HX_("RED_INTEGER",50,79,18,f4),
	HX_("RGB_INTEGER",0c,97,ca,ce),
	HX_("RGBA_INTEGER",d3,57,27,c0),
	HX_("R8",a6,47,00,00),
	HX_("RG8",e3,76,3e,00),
	HX_("R16F",af,dc,58,36),
	HX_("R32F",b5,5d,5a,36),
	HX_("RG16F",2c,15,ef,65),
	HX_("RG32F",32,96,f0,65),
	HX_("R8I",e3,69,3e,00),
	HX_("R8UI",7a,47,5e,36),
	HX_("R16I",b2,dc,58,36),
	HX_("R16UI",cb,49,68,57),
	HX_("R32I",b8,5d,5a,36),
	HX_("R32UI",05,ae,b7,58),
	HX_("RG8I",06,90,69,36),
	HX_("RG8UI",f7,7f,f4,65),
	HX_("RG16I",2f,15,ef,65),
	HX_("RG16UI",ae,7e,43,cb),
	HX_("RG32I",35,96,f0,65),
	HX_("RG32UI",e8,e2,92,cc),
	HX_("R8_SNORM",76,d3,ce,64),
	HX_("RG8_SNORM",73,8e,f7,80),
	HX_("RGB8_SNORM",3b,36,76,ea),
	HX_("RGBA8_SNORM",54,eb,97,96),
	HX_("RGB10_A2UI",b8,32,bb,dc),
	HX_("TEXTURE_IMMUTABLE_FORMAT",38,2c,95,5e),
	HX_("TEXTURE_IMMUTABLE_LEVELS",70,5b,56,05),
	HX_("UNSIGNED_INT_2_10_10_10_REV",0a,41,8d,b2),
	HX_("UNSIGNED_INT_10F_11F_11F_REV",5f,56,ed,03),
	HX_("UNSIGNED_INT_5_9_9_9_REV",ed,ec,63,c7),
	HX_("FLOAT_32_UNSIGNED_INT_24_8_REV",fc,a5,51,95),
	HX_("UNSIGNED_INT_24_8",b5,57,d6,d9),
	HX_("HALF_FLOAT",b0,fe,81,7a),
	HX_("RG",b5,47,00,00),
	HX_("RG_INTEGER",d4,6f,76,e9),
	HX_("INT_2_10_10_10_REV",c0,20,1e,cf),
	HX_("CURRENT_QUERY",02,13,44,ba),
	HX_("QUERY_RESULT",94,10,d9,08),
	HX_("QUERY_RESULT_AVAILABLE",fe,56,e1,27),
	HX_("ANY_SAMPLES_PASSED",99,0e,a3,86),
	HX_("ANY_SAMPLES_PASSED_CONSERVATIVE",53,18,b7,3e),
	HX_("MAX_DRAW_BUFFERS",b3,92,8a,37),
	HX_("DRAW_BUFFER0",b5,68,27,ac),
	HX_("DRAW_BUFFER1",b6,68,27,ac),
	HX_("DRAW_BUFFER2",b7,68,27,ac),
	HX_("DRAW_BUFFER3",b8,68,27,ac),
	HX_("DRAW_BUFFER4",b9,68,27,ac),
	HX_("DRAW_BUFFER5",ba,68,27,ac),
	HX_("DRAW_BUFFER6",bb,68,27,ac),
	HX_("DRAW_BUFFER7",bc,68,27,ac),
	HX_("DRAW_BUFFER8",bd,68,27,ac),
	HX_("DRAW_BUFFER9",be,68,27,ac),
	HX_("DRAW_BUFFER10",ba,36,54,f6),
	HX_("DRAW_BUFFER11",bb,36,54,f6),
	HX_("DRAW_BUFFER12",bc,36,54,f6),
	HX_("DRAW_BUFFER13",bd,36,54,f6),
	HX_("DRAW_BUFFER14",be,36,54,f6),
	HX_("DRAW_BUFFER15",bf,36,54,f6),
	HX_("MAX_COLOR_ATTACHMENTS",19,d7,ae,06),
	HX_("COLOR_ATTACHMENT1",b2,9a,fe,86),
	HX_("COLOR_ATTACHMENT2",b3,9a,fe,86),
	HX_("COLOR_ATTACHMENT3",b4,9a,fe,86),
	HX_("COLOR_ATTACHMENT4",b5,9a,fe,86),
	HX_("COLOR_ATTACHMENT5",b6,9a,fe,86),
	HX_("COLOR_ATTACHMENT6",b7,9a,fe,86),
	HX_("COLOR_ATTACHMENT7",b8,9a,fe,86),
	HX_("COLOR_ATTACHMENT8",b9,9a,fe,86),
	HX_("COLOR_ATTACHMENT9",ba,9a,fe,86),
	HX_("COLOR_ATTACHMENT10",3e,c1,c8,97),
	HX_("COLOR_ATTACHMENT11",3f,c1,c8,97),
	HX_("COLOR_ATTACHMENT12",40,c1,c8,97),
	HX_("COLOR_ATTACHMENT13",41,c1,c8,97),
	HX_("COLOR_ATTACHMENT14",42,c1,c8,97),
	HX_("COLOR_ATTACHMENT15",43,c1,c8,97),
	HX_("SAMPLER_3D",e8,2a,93,6e),
	HX_("SAMPLER_2D_SHADOW",96,9e,66,61),
	HX_("SAMPLER_2D_ARRAY",83,c3,f4,b9),
	HX_("SAMPLER_2D_ARRAY_SHADOW",5c,88,64,1c),
	HX_("SAMPLER_CUBE_SHADOW",13,3c,fd,ff),
	HX_("INT_SAMPLER_2D",b9,f2,ff,97),
	HX_("INT_SAMPLER_3D",98,f3,ff,97),
	HX_("INT_SAMPLER_CUBE",9c,93,36,99),
	HX_("INT_SAMPLER_2D_ARRAY",33,30,e9,17),
	HX_("UNSIGNED_INT_SAMPLER_2D",03,a6,f2,c4),
	HX_("UNSIGNED_INT_SAMPLER_3D",e2,a6,f2,c4),
	HX_("UNSIGNED_INT_SAMPLER_CUBE",66,2d,b4,ee),
	HX_("UNSIGNED_INT_SAMPLER_2D_ARRAY",fd,76,98,0d),
	HX_("MAX_SAMPLES",ee,bc,20,56),
	HX_("SAMPLER_BINDING",8e,79,76,22),
	HX_("PIXEL_PACK_BUFFER",4d,06,41,84),
	HX_("PIXEL_UNPACK_BUFFER",54,80,91,31),
	HX_("PIXEL_PACK_BUFFER_BINDING",f3,53,0d,81),
	HX_("PIXEL_UNPACK_BUFFER_BINDING",fa,ac,01,cf),
	HX_("COPY_READ_BUFFER",3f,8b,f1,64),
	HX_("COPY_WRITE_BUFFER",ca,9d,e5,e4),
	HX_("COPY_READ_BUFFER_BINDING",e5,1a,17,74),
	HX_("COPY_WRITE_BUFFER_BINDING",70,30,81,8a),
	HX_("FLOAT_MAT2x3",90,be,dd,c3),
	HX_("FLOAT_MAT2x4",91,be,dd,c3),
	HX_("FLOAT_MAT3x2",d0,80,de,c3),
	HX_("FLOAT_MAT3x4",d2,80,de,c3),
	HX_("FLOAT_MAT4x2",11,43,df,c3),
	HX_("FLOAT_MAT4x3",12,43,df,c3),
	HX_("UNSIGNED_INT_VEC2",f8,d3,ae,f1),
	HX_("UNSIGNED_INT_VEC3",f9,d3,ae,f1),
	HX_("UNSIGNED_INT_VEC4",fa,d3,ae,f1),
	HX_("UNSIGNED_NORMALIZED",81,9e,e9,b5),
	HX_("SIGNED_NORMALIZED",fa,1c,1f,6e),
	HX_("VERTEX_ATTRIB_ARRAY_INTEGER",9e,52,f4,fe),
	HX_("VERTEX_ATTRIB_ARRAY_DIVISOR",3e,5a,bb,58),
	HX_("TRANSFORM_FEEDBACK_BUFFER_MODE",5b,21,21,18),
	HX_("MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS",66,0f,c1,2a),
	HX_("TRANSFORM_FEEDBACK_VARYINGS",4a,49,b8,8f),
	HX_("TRANSFORM_FEEDBACK_BUFFER_START",4a,5f,8f,7c),
	HX_("TRANSFORM_FEEDBACK_BUFFER_SIZE",b9,ee,13,1c),
	HX_("TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN",2b,e6,b6,9f),
	HX_("MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS",18,9a,28,79),
	HX_("MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS",79,55,1c,52),
	HX_("INTERLEAVED_ATTRIBS",d3,03,58,cf),
	HX_("SEPARATE_ATTRIBS",ad,f1,7d,f6),
	HX_("TRANSFORM_FEEDBACK_BUFFER",87,cc,fb,c7),
	HX_("TRANSFORM_FEEDBACK_BUFFER_BINDING",2d,e4,af,90),
	HX_("TRANSFORM_FEEDBACK",18,81,af,95),
	HX_("TRANSFORM_FEEDBACK_PAUSED",35,50,eb,e6),
	HX_("TRANSFORM_FEEDBACK_ACTIVE",4d,51,ad,0d),
	HX_("TRANSFORM_FEEDBACK_BINDING",be,11,f4,01),
	HX_("FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING",79,c9,9d,03),
	HX_("FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE",c6,3b,6e,90),
	HX_("FRAMEBUFFER_ATTACHMENT_RED_SIZE",39,51,04,f1),
	HX_("FRAMEBUFFER_ATTACHMENT_GREEN_SIZE",07,31,24,91),
	HX_("FRAMEBUFFER_ATTACHMENT_BLUE_SIZE",1c,15,11,a1),
	HX_("FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE",8c,86,04,dd),
	HX_("FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE",c7,26,cb,18),
	HX_("FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE",ae,65,3b,9a),
	HX_("FRAMEBUFFER_DEFAULT",ef,3b,45,e2),
	HX_("DEPTH24_STENCIL8",36,5e,b6,a6),
	HX_("DRAW_FRAMEBUFFER_BINDING",78,93,98,ce),
	HX_("READ_FRAMEBUFFER",24,8b,f0,a0),
	HX_("DRAW_FRAMEBUFFER",d2,b8,5e,7a),
	HX_("READ_FRAMEBUFFER_BINDING",ca,07,a0,07),
	HX_("RENDERBUFFER_SAMPLES",40,5d,0c,28),
	HX_("FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER",43,08,18,7f),
	HX_("FRAMEBUFFER_INCOMPLETE_MULTISAMPLE",54,d0,f2,d0),
	HX_("UNIFORM_BUFFER",0b,f0,a3,ee),
	HX_("UNIFORM_BUFFER_BINDING",b1,2b,2d,65),
	HX_("UNIFORM_BUFFER_START",ce,fd,84,f1),
	HX_("UNIFORM_BUFFER_SIZE",b5,8c,28,19),
	HX_("MAX_VERTEX_UNIFORM_BLOCKS",11,56,73,a0),
	HX_("MAX_FRAGMENT_UNIFORM_BLOCKS",65,42,83,5d),
	HX_("MAX_COMBINED_UNIFORM_BLOCKS",d0,c0,cb,e7),
	HX_("MAX_UNIFORM_BUFFER_BINDINGS",87,4d,27,c3),
	HX_("MAX_UNIFORM_BLOCK_SIZE",f9,dc,3f,6c),
	HX_("MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS",fd,37,15,e3),
	HX_("MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS",51,0d,19,43),
	HX_("UNIFORM_BUFFER_OFFSET_ALIGNMENT",cb,a9,f8,cc),
	HX_("ACTIVE_UNIFORM_BLOCKS",2a,2b,e3,0c),
	HX_("UNIFORM_TYPE",05,d9,59,48),
	HX_("UNIFORM_SIZE",0c,87,a4,47),
	HX_("UNIFORM_BLOCK_INDEX",35,78,71,93),
	HX_("UNIFORM_OFFSET",9e,ca,4e,7e),
	HX_("UNIFORM_ARRAY_STRIDE",aa,aa,4a,6c),
	HX_("UNIFORM_MATRIX_STRIDE",ec,75,fb,fc),
	HX_("UNIFORM_IS_ROW_MAJOR",4a,d7,8e,f1),
	HX_("UNIFORM_BLOCK_BINDING",28,1b,56,0b),
	HX_("UNIFORM_BLOCK_DATA_SIZE",f9,d0,4f,72),
	HX_("UNIFORM_BLOCK_ACTIVE_UNIFORMS",9b,74,7f,6e),
	HX_("UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES",40,99,27,7e),
	HX_("UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER",c1,8d,d1,e0),
	HX_("UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER",15,c5,8f,af),
	HX_("OBJECT_TYPE",7a,57,2a,1f),
	HX_("SYNC_CONDITION",57,f7,d5,73),
	HX_("SYNC_STATUS",d6,f3,b7,06),
	HX_("SYNC_FLAGS",03,e3,f0,79),
	HX_("SYNC_FENCE",6d,3e,5a,75),
	HX_("SYNC_GPU_COMMANDS_COMPLETE",f9,23,65,18),
	HX_("UNSIGNALED",20,4c,0a,fd),
	HX_("SIGNALED",c7,80,c2,de),
	HX_("ALREADY_SIGNALED",ae,dd,3f,e3),
	HX_("TIMEOUT_EXPIRED",87,64,05,cd),
	HX_("CONDITION_SATISFIED",ce,a6,40,b0),
	HX_("WAIT_FAILED",87,c9,db,92),
	HX_("SYNC_FLUSH_COMMANDS_BIT",d5,c6,2c,c7),
	HX_("COLOR",43,a9,4a,c8),
	HX_("DEPTH",e3,28,18,55),
	HX_("STENCIL",dc,91,d7,ff),
	HX_("MIN",72,ad,3a,00),
	HX_("MAX",84,a6,3a,00),
	HX_("DEPTH_COMPONENT24",03,cd,68,43),
	HX_("STREAM_READ",b5,9e,5f,1e),
	HX_("STREAM_COPY",14,0f,7d,14),
	HX_("STATIC_READ",c7,6f,66,c3),
	HX_("STATIC_COPY",26,e0,83,b9),
	HX_("DYNAMIC_READ",76,23,56,2d),
	HX_("DYNAMIC_COPY",d5,93,73,23),
	HX_("DEPTH_COMPONENT32F",66,56,4b,b8),
	HX_("DEPTH32F_STENCIL8",f7,07,b2,83),
	HX_("INVALID_INDEX",4a,04,83,3c),
	HX_("TIMEOUT_IGNORED",f4,3b,74,84),
	HX_("MAX_CLIENT_WAIT_TIMEOUT_WEBGL",8a,37,14,d5),
	HX_("type",ba,f2,08,4d),
	HX_("version",18,e7,f1,7c),
	HX_("__arrayBufferBinding",ec,c7,f6,4e),
	HX_("__elementBufferBinding",e9,54,64,1f),
	HX_("__contextID",6a,b8,28,45),
	HX_("__currentProgram",6b,4a,cd,35),
	HX_("__framebufferBinding",f8,60,08,ef),
	HX_("__initialized",f4,35,88,7f),
	HX_("__isContextLost",89,18,92,b5),
	HX_("__renderbufferBinding",ef,6d,e9,2f),
	HX_("__texture2DBinding",78,dc,16,4f),
	HX_("__textureCubeMapBinding",79,78,a4,c8),
	HX_("activeTexture",b5,13,aa,56),
	HX_("attachShader",ca,d0,77,b2),
	HX_("beginQuery",1f,9c,b3,d3),
	HX_("beginTransformFeedback",a8,ad,bb,cc),
	HX_("bindAttribLocation",3c,a6,30,1e),
	HX_("bindBuffer",9d,92,be,f8),
	HX_("bindBufferBase",4e,b9,42,42),
	HX_("bindBufferRange",e0,e9,84,ee),
	HX_("bindFramebuffer",30,c6,61,e7),
	HX_("bindRenderbuffer",33,b6,b7,14),
	HX_("bindSampler",cb,d8,3a,80),
	HX_("bindTexture",9e,dc,51,9b),
	HX_("bindTransformFeedback",94,5b,e4,3f),
	HX_("bindVertexArray",d8,e8,e4,a6),
	HX_("blendColor",52,33,b4,e2),
	HX_("blendEquation",fd,98,ad,02),
	HX_("blendEquationSeparate",80,39,68,a7),
	HX_("blendFunc",35,fc,9b,07),
	HX_("blendFuncSeparate",b8,94,c0,ca),
	HX_("blitFramebuffer",b8,26,9e,ee),
	HX_("bufferData",4a,bf,73,93),
	HX_("bufferSubData",aa,f6,e4,45),
	HX_("checkFramebufferStatus",17,26,75,0a),
	HX_("clear",8d,71,5b,48),
	HX_("clearBufferfi",f0,58,5b,e0),
	HX_("clearBufferfv",fd,58,5b,e0),
	HX_("clearBufferiv",9a,5b,5b,e0),
	HX_("clearBufferuiv",55,db,9d,6f),
	HX_("clearColor",96,b0,66,1f),
	HX_("clearDepthf",70,ff,75,01),
	HX_("clearStencil",ef,6f,82,5b),
	HX_("clientWaitSync",db,68,d7,e9),
	HX_("colorMask",ef,cb,c3,23),
	HX_("compileShader",f8,70,b2,da),
	HX_("compressedTexImage2D",a7,d8,5d,24),
	HX_("compressedTexImage3D",86,d9,5d,24),
	HX_("compressedTexSubImage2D",d3,b5,7d,36),
	HX_("compressedTexSubImage3D",b2,b6,7d,36),
	HX_("copyBufferSubData",b5,9d,03,c2),
	HX_("copyTexImage2D",db,d0,76,e4),
	HX_("copyTexSubImage2D",1f,d6,ae,a4),
	HX_("copyTexSubImage3D",fe,d6,ae,a4),
	HX_("createBuffer",1c,fd,e9,f2),
	HX_("createFramebuffer",51,ef,e8,cc),
	HX_("createProgram",e8,22,3c,dc),
	HX_("createQuery",6c,c2,65,87),
	HX_("createRenderbuffer",f2,89,74,05),
	HX_("createSampler",6c,9d,0c,6c),
	HX_("createShader",41,ff,75,3f),
	HX_("createTexture",3f,a1,23,87),
	HX_("createTransformFeedback",75,93,f4,d0),
	HX_("createVertexArray",f9,11,6c,8c),
	HX_("cullFace",6f,e7,31,ac),
	HX_("deleteBuffer",8b,e3,2c,37),
	HX_("deleteFramebuffer",82,56,01,50),
	HX_("deleteProgram",99,dd,82,52),
	HX_("deleteQuery",dd,be,df,ed),
	HX_("deleteRenderbuffer",a1,6d,b6,37),
	HX_("deleteSampler",1d,58,53,e2),
	HX_("deleteShader",b0,e5,b8,83),
	HX_("deleteSync",26,98,ac,9f),
	HX_("deleteTexture",f0,5b,6a,fd),
	HX_("deleteTransformFeedback",66,f5,6f,ce),
	HX_("deleteVertexArray",2a,79,84,0f),
	HX_("depthFunc",e7,45,48,9a),
	HX_("depthMask",8f,9b,d9,9e),
	HX_("depthRangef",6c,e9,9a,39),
	HX_("detachShader",d8,d0,ad,ea),
	HX_("disable",e8,69,58,b1),
	HX_("disableVertexAttribArray",e3,69,74,4a),
	HX_("drawArrays",de,f3,b3,f9),
	HX_("drawArraysInstanced",71,03,37,15),
	HX_("drawBuffers",cf,e7,d8,fa),
	HX_("drawElements",5b,c2,b7,59),
	HX_("drawElementsInstanced",54,fd,a5,ed),
	HX_("drawRangeElements",70,0e,07,62),
	HX_("enable",83,ae,87,f8),
	HX_("enableVertexAttribArray",e8,46,5a,ac),
	HX_("endQuery",2d,1d,e8,5b),
	HX_("endTransformFeedback",b6,8b,b4,a2),
	HX_("fenceSync",ac,19,56,6f),
	HX_("finish",53,40,7f,86),
	HX_("flush",c4,62,9b,02),
	HX_("framebufferRenderbuffer",63,dd,b2,36),
	HX_("framebufferTexture2D",c0,66,22,24),
	HX_("framebufferTextureLayer",83,bf,bc,93),
	HX_("frontFace",e6,01,c1,80),
	HX_("generateMipmap",9d,d6,0d,5b),
	HX_("getActiveAttrib",66,8b,22,63),
	HX_("getActiveUniform",98,35,4e,d7),
	HX_("getActiveUniformBlocki",34,1a,a1,c4),
	HX_("getActiveUniformBlockiv",c2,d3,55,48),
	HX_("getActiveUniformBlockName",80,75,5b,56),
	HX_("getActiveUniformBlockParameter",54,72,d3,90),
	HX_("getActiveUniforms",db,af,20,8d),
	HX_("getActiveUniformsiv",88,f8,90,9a),
	HX_("getAttachedShaders",b4,2e,77,93),
	HX_("getAttribLocation",d5,1a,10,5d),
	HX_("getBoolean",b2,70,60,cd),
	HX_("getBooleanv",84,2b,02,e7),
	HX_("getBufferParameter",93,58,b4,14),
	HX_("getBufferParameteri",76,28,19,09),
	HX_("getBufferParameteri64v",c2,2c,38,ab),
	HX_("getBufferParameteriv",40,3f,ea,ec),
	HX_("getBufferPointerv",6f,0d,a6,b7),
	HX_("getBufferSubData",34,a0,05,b0),
	HX_("getContextAttributes",30,da,e1,ad),
	HX_("getError",52,db,00,d3),
	HX_("getExtension",09,30,67,f4),
	HX_("getFloat",26,d5,6d,62),
	HX_("getFloatv",90,ac,ac,bd),
	HX_("getFragDataLocation",87,0b,d2,5c),
	HX_("getFramebufferAttachmentParameter",8f,bf,8d,ff),
	HX_("getFramebufferAttachmentParameteri",fa,dd,79,9c),
	HX_("getFramebufferAttachmentParameteriv",3c,5d,28,4e),
	HX_("getIndexedParameter",2e,9c,c1,b2),
	HX_("getInteger",c8,43,7d,66),
	HX_("getInteger64",06,f5,2b,f3),
	HX_("getInteger64i",a3,70,4a,d3),
	HX_("getInteger64i_v",9a,72,42,0f),
	HX_("getInteger64v",b0,70,4a,d3),
	HX_("getIntegeri_v",18,49,71,d3),
	HX_("getIntegerv",ae,0b,1e,47),
	HX_("getInternalformati",bf,0b,2e,f1),
	HX_("getInternalformativ",d7,3b,1c,17),
	HX_("getInternalformatParameter",df,66,4d,f6),
	HX_("getParameter",33,d2,06,58),
	HX_("getProgrami",1b,ac,1b,ac),
	HX_("getProgramiv",fb,eb,1a,ec),
	HX_("getProgramBinary",2f,df,de,e5),
	HX_("getProgramInfoLog",c8,f1,f2,cd),
	HX_("getProgramParameter",3b,c3,9c,96),
	HX_("getQuery",92,9a,c1,bd),
	HX_("getQueryi",97,a5,a5,4b),
	HX_("getQueryiv",ff,3e,4b,e5),
	HX_("getQueryObjectui",85,8b,77,ca),
	HX_("getQueryObjectuiv",51,89,22,5e),
	HX_("getQueryParameter",b7,98,36,63),
	HX_("getRenderbufferParameter",7d,c1,d7,3c),
	HX_("getRenderbufferParameteri",4c,8c,f1,ff),
	HX_("getRenderbufferParameteriv",aa,36,69,f3),
	HX_("getSamplerParameter",37,d8,52,30),
	HX_("getSamplerParameterf",4f,58,2a,18),
	HX_("getSamplerParameterfv",47,ed,e2,0c),
	HX_("getSamplerParameteri",52,58,2a,18),
	HX_("getSamplerParameteriv",e4,ef,e2,0c),
	HX_("getShaderi",ae,07,e8,ae),
	HX_("getShaderiv",08,b1,1e,5c),
	HX_("getShaderInfoLog",9b,bd,c8,f3),
	HX_("getShaderParameter",ce,69,5b,36),
	HX_("getShaderPrecisionFormat",fa,b8,cf,ce),
	HX_("getShaderSource",96,a3,04,c5),
	HX_("getString",07,b2,86,8d),
	HX_("getStringi",82,14,55,48),
	HX_("getSupportedExtensions",ec,78,6d,a1),
	HX_("getSyncParameter",58,61,f5,79),
	HX_("getSyncParameteri",11,cc,bf,3c),
	HX_("getSyncParameteriv",45,c3,12,eb),
	HX_("getTexParameter",78,98,d3,d2),
	HX_("getTexParameterf",ee,d0,51,a6),
	HX_("getTexParameterfv",c8,ff,44,e1),
	HX_("getTexParameteri",f1,d0,51,a6),
	HX_("getTexParameteriv",65,02,45,e1),
	HX_("getTransformFeedbackVarying",15,71,4a,f2),
	HX_("getUniform",3e,c7,c5,04),
	HX_("getUniformf",68,8f,48,28),
	HX_("getUniformfv",0e,ec,34,17),
	HX_("getUniformi",6b,8f,48,28),
	HX_("getUniformiv",ab,ee,34,17),
	HX_("getUniformui",12,f9,34,17),
	HX_("getUniformuiv",24,f7,24,37),
	HX_("getUniformBlockIndex",63,c3,6b,34),
	HX_("getUniformIndices",89,2b,6e,0f),
	HX_("getUniformLocation",93,5f,d4,4f),
	HX_("getVertexAttrib",84,2f,1c,a3),
	HX_("getVertexAttribf",62,64,8d,15),
	HX_("getVertexAttribfv",d4,71,2a,c6),
	HX_("getVertexAttribi",65,64,8d,15),
	HX_("getVertexAttribIi",84,58,2a,c6),
	HX_("getVertexAttribIiv",72,1b,e3,9e),
	HX_("getVertexAttribIui",d9,25,e3,9e),
	HX_("getVertexAttribIuiv",7d,f8,dd,67),
	HX_("getVertexAttribiv",71,74,2a,c6),
	HX_("getVertexAttribPointerv",bd,f4,f5,bb),
	HX_("hint",87,3d,0e,45),
	HX_("invalidateFramebuffer",32,df,3e,7c),
	HX_("invalidateSubFramebuffer",28,a2,17,ad),
	HX_("isBuffer",8a,58,fe,28),
	HX_("isContextLost",a9,df,df,2d),
	HX_("isEnabled",b7,81,2f,82),
	HX_("isFramebuffer",23,65,6c,83),
	HX_("isProgram",ba,c7,f7,f7),
	HX_("isQuery",be,2e,70,fa),
	HX_("isRenderbuffer",e0,2b,f8,01),
	HX_("isSampler",3e,42,c8,87),
	HX_("isShader",af,5a,8a,75),
	HX_("isSync",65,7f,c6,69),
	HX_("isTexture",11,46,df,a2),
	HX_("isTransformFeedback",c7,32,99,37),
	HX_("isVertexArray",cb,87,ef,42),
	HX_("lineWidth",72,b9,5d,11),
	HX_("linkProgram",aa,ad,7b,89),
	HX_("mapBufferRange",61,d3,19,7b),
	HX_("pauseTransformFeedback",3b,8a,d6,e8),
	HX_("pixelStorei",8e,34,c8,80),
	HX_("polygonOffset",ad,25,4d,66),
	HX_("programBinary",a5,35,be,7b),
	HX_("programParameteri",44,da,18,0b),
	HX_("readBuffer",f6,a0,10,ca),
	HX_("readPixels",23,d3,25,86),
	HX_("releaseShaderCompiler",0b,50,7a,a0),
	HX_("renderbufferStorage",05,a1,70,87),
	HX_("renderbufferStorageMultisample",5e,46,79,34),
	HX_("resumeTransformFeedback",a4,79,d5,6f),
	HX_("sampleCoverage",32,68,81,3b),
	HX_("samplerParameterf",c5,21,b5,f0),
	HX_("samplerParameteri",c8,21,b5,f0),
	HX_("scissor",1c,28,e7,04),
	HX_("shaderBinary",06,59,f4,5c),
	HX_("shaderSource",e0,4d,1a,a2),
	HX_("stencilFunc",60,83,be,40),
	HX_("stencilFuncSeparate",e3,be,ce,b2),
	HX_("stencilMask",08,d9,4f,45),
	HX_("stencilMaskSeparate",8b,fc,a9,c6),
	HX_("stencilOp",3d,7a,ec,56),
	HX_("stencilOpSeparate",c0,5a,4a,53),
	HX_("texImage2D",c6,7c,67,b9),
	HX_("texImage3D",a5,7d,67,b9),
	HX_("texStorage2D",e6,9c,44,cf),
	HX_("texStorage3D",c5,9d,44,cf),
	HX_("texParameterf",64,27,31,3c),
	HX_("texParameteri",67,27,31,3c),
	HX_("texSubImage2D",14,2f,90,28),
	HX_("texSubImage3D",f3,2f,90,28),
	HX_("toString",ac,d0,6e,38),
	HX_("transformFeedbackVaryings",34,b1,1a,48),
	HX_("uniform1f",49,21,de,07),
	HX_("uniform1fv",0d,ff,7e,da),
	HX_("uniform1i",4c,21,de,07),
	HX_("uniform1iv",aa,01,7f,da),
	HX_("uniform1ui",11,0c,7f,da),
	HX_("uniform1uiv",45,83,ab,54),
	HX_("uniform2f",28,22,de,07),
	HX_("uniform2fv",4e,c1,7f,da),
	HX_("uniform2i",2b,22,de,07),
	HX_("uniform2iv",eb,c3,7f,da),
	HX_("uniform2ui",52,ce,7f,da),
	HX_("uniform2uiv",e4,b9,54,55),
	HX_("uniform3f",07,23,de,07),
	HX_("uniform3fv",8f,83,80,da),
	HX_("uniform3i",0a,23,de,07),
	HX_("uniform3iv",2c,86,80,da),
	HX_("uniform3ui",93,90,80,da),
	HX_("uniform3uiv",83,f0,fd,55),
	HX_("uniform4f",e6,23,de,07),
	HX_("uniform4fv",d0,45,81,da),
	HX_("uniform4i",e9,23,de,07),
	HX_("uniform4iv",6d,48,81,da),
	HX_("uniform4ui",d4,52,81,da),
	HX_("uniform4uiv",22,27,a7,56),
	HX_("uniformBlockBinding",cc,bc,c4,bf),
	HX_("uniformMatrix2fv",8d,8a,59,c5),
	HX_("uniformMatrix2x3fv",48,61,6e,02),
	HX_("uniformMatrix2x4fv",89,23,6f,02),
	HX_("uniformMatrix3fv",ce,4c,5a,c5),
	HX_("uniformMatrix3x2fv",88,33,d4,95),
	HX_("uniformMatrix3x4fv",0a,b8,d5,95),
	HX_("uniformMatrix4fv",0f,0f,5b,c5),
	HX_("uniformMatrix4x2fv",09,c8,3a,29),
	HX_("uniformMatrix4x3fv",4a,8a,3b,29),
	HX_("unmapBuffer",43,9f,1a,39),
	HX_("useProgram",fd,6c,ac,f6),
	HX_("validateProgram",8e,80,0f,ef),
	HX_("vertexAttrib1f",63,94,b6,53),
	HX_("vertexAttrib1fv",b3,42,0b,ec),
	HX_("vertexAttrib2f",42,95,b6,53),
	HX_("vertexAttrib2fv",f4,04,0c,ec),
	HX_("vertexAttrib3f",21,96,b6,53),
	HX_("vertexAttrib3fv",35,c7,0c,ec),
	HX_("vertexAttrib4f",00,97,b6,53),
	HX_("vertexAttrib4fv",76,89,0d,ec),
	HX_("vertexAttribDivisor",30,09,77,5f),
	HX_("vertexAttribI4i",30,4d,1d,ec),
	HX_("vertexAttribI4iv",46,3d,86,ad),
	HX_("vertexAttribI4ui",ad,47,86,ad),
	HX_("vertexAttribI4uiv",29,70,f8,27),
	HX_("vertexAttribIPointer",42,cb,4a,67),
	HX_("vertexAttribPointer",8f,04,b6,3f),
	HX_("viewport",66,4c,a5,9c),
	HX_("waitSync",70,1f,42,55),
	HX_("__contextLost",53,d0,33,6d),
	HX_("__createObject",fb,41,55,58),
	HX_("__getObjectID",f0,2f,98,f1),
	HX_("__initialize",70,ac,4e,25),
	::String(null()) };

static void NativeOpenGLRenderContext_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___extensionObjects,"__extensionObjects");
	HX_MARK_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors,"__extensionObjectConstructors");
	HX_MARK_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___lastContextID,"__lastContextID");
	HX_MARK_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___supportedExtensions,"__supportedExtensions");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NativeOpenGLRenderContext_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___extensionObjects,"__extensionObjects");
	HX_VISIT_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___extensionObjectConstructors,"__extensionObjectConstructors");
	HX_VISIT_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___lastContextID,"__lastContextID");
	HX_VISIT_MEMBER_NAME(NativeOpenGLRenderContext_obj::_hx___supportedExtensions,"__supportedExtensions");
};

#endif

hx::Class NativeOpenGLRenderContext_obj::__mClass;

static ::String NativeOpenGLRenderContext_obj_sStaticFields[] = {
	HX_("__extensionObjects",35,8e,af,ef),
	HX_("__extensionObjectConstructors",d7,1f,f7,9f),
	HX_("__lastContextID",34,83,e7,9c),
	HX_("__supportedExtensions",c2,2c,4a,37),
	::String(null())
};

void NativeOpenGLRenderContext_obj::__register()
{
	NativeOpenGLRenderContext_obj _hx_dummy;
	NativeOpenGLRenderContext_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("lime._internal.backend.native.NativeOpenGLRenderContext",a1,fb,a1,9c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &NativeOpenGLRenderContext_obj::__GetStatic;
	__mClass->mSetStaticField = &NativeOpenGLRenderContext_obj::__SetStatic;
	__mClass->mMarkFunc = NativeOpenGLRenderContext_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(NativeOpenGLRenderContext_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(NativeOpenGLRenderContext_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< NativeOpenGLRenderContext_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NativeOpenGLRenderContext_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NativeOpenGLRenderContext_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NativeOpenGLRenderContext_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void NativeOpenGLRenderContext_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_65c657fec0b420d3_39_boot)
HXDLIN(  39)		_hx___extensionObjectConstructors =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}
{
            	HX_STACKFRAME(&_hx_pos_65c657fec0b420d3_40_boot)
HXDLIN(  40)		_hx___lastContextID = 0;
            	}
}

} // end namespace lime
} // end namespace _internal
} // end namespace backend
} // end namespace native
