// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_39f5eab4124248fe_27_print,"Sys","print",0x483745ec,"Sys.print","/usr/local/lib/haxe/std/cpp/_std/Sys.hx",27,0xd23c22f3)
HX_LOCAL_STACK_FRAME(_hx_pos_39f5eab4124248fe_31_println,"Sys","println",0x3905f76e,"Sys.println","/usr/local/lib/haxe/std/cpp/_std/Sys.hx",31,0xd23c22f3)
HX_LOCAL_STACK_FRAME(_hx_pos_39f5eab4124248fe_54_args,"Sys","args",0xeaeddc7e,"Sys.args","/usr/local/lib/haxe/std/cpp/_std/Sys.hx",54,0xd23c22f3)
HX_LOCAL_STACK_FRAME(_hx_pos_39f5eab4124248fe_57_getEnv,"Sys","getEnv",0xd9e05658,"Sys.getEnv","/usr/local/lib/haxe/std/cpp/_std/Sys.hx",57,0xd23c22f3)
HX_LOCAL_STACK_FRAME(_hx_pos_39f5eab4124248fe_69_sleep,"Sys","sleep",0xfe70aad6,"Sys.sleep","/usr/local/lib/haxe/std/cpp/_std/Sys.hx",69,0xd23c22f3)
HX_LOCAL_STACK_FRAME(_hx_pos_39f5eab4124248fe_85_systemName,"Sys","systemName",0xbea5b6bb,"Sys.systemName","/usr/local/lib/haxe/std/cpp/_std/Sys.hx",85,0xd23c22f3)
HX_LOCAL_STACK_FRAME(_hx_pos_39f5eab4124248fe_89_command,"Sys","command",0x363f8cca,"Sys.command","/usr/local/lib/haxe/std/cpp/_std/Sys.hx",89,0xd23c22f3)
HX_LOCAL_STACK_FRAME(_hx_pos_39f5eab4124248fe_107_exit,"Sys","exit",0xed97463f,"Sys.exit","/usr/local/lib/haxe/std/cpp/_std/Sys.hx",107,0xd23c22f3)

void Sys_obj::__construct() { }

Dynamic Sys_obj::__CreateEmpty() { return new Sys_obj; }

void *Sys_obj::_hx_vtable = 0;

Dynamic Sys_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Sys_obj > _hx_result = new Sys_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Sys_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x003f64ed;
}

void Sys_obj::print( ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_39f5eab4124248fe_27_print)
HXDLIN(  27)		 ::__hxcpp_print(v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Sys_obj,print,(void))

void Sys_obj::println( ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_39f5eab4124248fe_31_println)
HXDLIN(  31)		 ::__hxcpp_println(v);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Sys_obj,println,(void))

::Array< ::String > Sys_obj::args(){
            	HX_STACKFRAME(&_hx_pos_39f5eab4124248fe_54_args)
HXDLIN(  54)		return  ::__get_args();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Sys_obj,args,return )

::String Sys_obj::getEnv(::String s){
            	HX_STACKFRAME(&_hx_pos_39f5eab4124248fe_57_getEnv)
HXLINE(  58)		::String v = _hx_std_get_env(s);
HXLINE(  59)		if (hx::IsNull( v )) {
HXLINE(  60)			return null();
            		}
HXLINE(  61)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Sys_obj,getEnv,return )

void Sys_obj::sleep(Float seconds){
            	HX_STACKFRAME(&_hx_pos_39f5eab4124248fe_69_sleep)
HXDLIN(  69)		_hx_std_sys_sleep(seconds);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Sys_obj,sleep,(void))

::String Sys_obj::systemName(){
            	HX_STACKFRAME(&_hx_pos_39f5eab4124248fe_85_systemName)
HXDLIN(  85)		return _hx_std_sys_string();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Sys_obj,systemName,return )

int Sys_obj::command(::String cmd,::Array< ::String > args){
            	HX_STACKFRAME(&_hx_pos_39f5eab4124248fe_89_command)
HXDLIN(  89)		if (hx::IsNull( args )) {
HXLINE(  90)			return _hx_std_sys_command(cmd);
            		}
            		else {
HXLINE(  92)			if ((::Sys_obj::systemName() == HX_("Windows",63,06,c6,b5))) {
HXLINE(  94)				::Array< ::String > _g = ::Array_obj< ::String >::__new(0);
HXLINE(  95)				{
HXLINE(  95)					int _g1 = 0;
HXDLIN(  95)					::Array< ::String > _g2 = ::Array_obj< ::String >::__new(1)->init(0,::StringTools_obj::replace(cmd,HX_("/",2f,00,00,00),HX_("\\",5c,00,00,00)))->concat(args);
HXDLIN(  95)					while((_g1 < _g2->length)){
HXLINE(  95)						::String a = _g2->__get(_g1);
HXDLIN(  95)						_g1 = (_g1 + 1);
HXLINE(  96)						_g->push(::StringTools_obj::quoteWinArg(a,true));
            					}
            				}
HXLINE(  94)				cmd = _g->join(HX_(" ",20,00,00,00));
HXLINE(  98)				return _hx_std_sys_command(cmd);
            			}
            			else {
HXLINE( 100)				cmd = ::Array_obj< ::String >::__new(1)->init(0,cmd)->concat(args)->map(::StringTools_obj::quoteUnixArg_dyn())->join(HX_(" ",20,00,00,00));
HXLINE( 101)				return _hx_std_sys_command(cmd);
            			}
            		}
HXLINE(  89)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Sys_obj,command,return )

void Sys_obj::exit(int code){
            	HX_STACKFRAME(&_hx_pos_39f5eab4124248fe_107_exit)
HXDLIN( 107)		 ::__hxcpp_exit(code);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Sys_obj,exit,(void))


Sys_obj::Sys_obj()
{
}

bool Sys_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"args") ) { outValue = args_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"exit") ) { outValue = exit_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"print") ) { outValue = print_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sleep") ) { outValue = sleep_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"getEnv") ) { outValue = getEnv_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"println") ) { outValue = println_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"command") ) { outValue = command_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"systemName") ) { outValue = systemName_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Sys_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Sys_obj_sStaticStorageInfo = 0;
#endif

hx::Class Sys_obj::__mClass;

static ::String Sys_obj_sStaticFields[] = {
	HX_("print",2d,58,8b,c8),
	HX_("println",ef,db,33,84),
	HX_("args",5d,8d,74,40),
	HX_("getEnv",f7,3c,1c,a3),
	HX_("sleep",17,bd,c4,7e),
	HX_("systemName",da,d8,82,f7),
	HX_("command",4b,71,6d,81),
	HX_("exit",1e,f7,1d,43),
	::String(null())
};

void Sys_obj::__register()
{
	Sys_obj _hx_dummy;
	Sys_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("Sys",ed,64,3f,00);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Sys_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Sys_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Sys_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Sys_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Sys_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

