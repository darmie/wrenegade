// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_38344beec7696400
#define INCLUDED_38344beec7696400
#include "cpp/Int64.h"
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Encoding
#include <haxe/io/Encoding.h>
#endif
#ifndef INCLUDED_haxe_io_Error
#include <haxe/io/Error.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7de8773c9a509473_44_new,"haxe.io.Bytes","new",0x3938d57d,"haxe.io.Bytes.new","haxe/io/Bytes.hx",44,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_59_get,"haxe.io.Bytes","get",0x393385b3,"haxe.io.Bytes.get","haxe/io/Bytes.hx",59,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_76_set,"haxe.io.Bytes","set",0x393ca0bf,"haxe.io.Bytes.set","haxe/io/Bytes.hx",76,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_89_blit,"haxe.io.Bytes","blit",0xd098ac78,"haxe.io.Bytes.blit","haxe/io/Bytes.hx",89,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_140_fill,"haxe.io.Bytes","fill",0xd33b42c6,"haxe.io.Bytes.fill","haxe/io/Bytes.hx",140,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_148_sub,"haxe.io.Bytes","sub",0x393cae9d,"haxe.io.Bytes.sub","haxe/io/Bytes.hx",148,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_210_compare,"haxe.io.Bytes","compare",0x46537042,"haxe.io.Bytes.compare","haxe/io/Bytes.hx",210,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_229_getDouble,"haxe.io.Bytes","getDouble",0xc306ed24,"haxe.io.Bytes.getDouble","haxe/io/Bytes.hx",229,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_251_getFloat,"haxe.io.Bytes","getFloat",0x2c9026e9,"haxe.io.Bytes.getFloat","haxe/io/Bytes.hx",251,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_273_setDouble,"haxe.io.Bytes","setDouble",0xa657d930,"haxe.io.Bytes.setDouble","haxe/io/Bytes.hx",273,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_299_setFloat,"haxe.io.Bytes","setFloat",0xdaed805d,"haxe.io.Bytes.setFloat","haxe/io/Bytes.hx",299,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_323_getUInt16,"haxe.io.Bytes","getUInt16",0xa94afaf2,"haxe.io.Bytes.getUInt16","haxe/io/Bytes.hx",323,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_331_setUInt16,"haxe.io.Bytes","setUInt16",0x8c9be6fe,"haxe.io.Bytes.setUInt16","haxe/io/Bytes.hx",331,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_354_getInt32,"haxe.io.Bytes","getInt32",0xe819f49b,"haxe.io.Bytes.getInt32","haxe/io/Bytes.hx",354,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_363_getInt64,"haxe.io.Bytes","getInt64",0xe819f73a,"haxe.io.Bytes.getInt64","haxe/io/Bytes.hx",363,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_370_setInt32,"haxe.io.Bytes","setInt32",0x96774e0f,"haxe.io.Bytes.setInt32","haxe/io/Bytes.hx",370,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_385_setInt64,"haxe.io.Bytes","setInt64",0x967750ae,"haxe.io.Bytes.setInt64","haxe/io/Bytes.hx",385,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_391_getString,"haxe.io.Bytes","getString",0xa16beae4,"haxe.io.Bytes.getString","haxe/io/Bytes.hx",391,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_457_readString,"haxe.io.Bytes","readString",0x5f58954a,"haxe.io.Bytes.readString","haxe/io/Bytes.hx",457,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_480_toString,"haxe.io.Bytes","toString",0x0291226f,"haxe.io.Bytes.toString","haxe/io/Bytes.hx",480,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_485_toHex,"haxe.io.Bytes","toHex",0x14173a7d,"haxe.io.Bytes.toHex","haxe/io/Bytes.hx",485,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_502_getData,"haxe.io.Bytes","getData",0xd7d05d7d,"haxe.io.Bytes.getData","haxe/io/Bytes.hx",502,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_506_alloc,"haxe.io.Bytes","alloc",0x2199ead2,"haxe.io.Bytes.alloc","haxe/io/Bytes.hx",506,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_536_ofString,"haxe.io.Bytes","ofString",0x6e53bb0b,"haxe.io.Bytes.ofString","haxe/io/Bytes.hx",536,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_606_ofData,"haxe.io.Bytes","ofData",0x4f3005e4,"haxe.io.Bytes.ofData","haxe/io/Bytes.hx",606,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_615_ofHex,"haxe.io.Bytes","ofHex",0x2d236861,"haxe.io.Bytes.ofHex","haxe/io/Bytes.hx",615,0x68bfff33)
HX_LOCAL_STACK_FRAME(_hx_pos_7de8773c9a509473_642_fastGet,"haxe.io.Bytes","fastGet",0xa10d56f7,"haxe.io.Bytes.fastGet","haxe/io/Bytes.hx",642,0x68bfff33)
namespace haxe{
namespace io{

void Bytes_obj::__construct(int length,::Array< unsigned char > b){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_44_new)
HXLINE(  45)		this->length = length;
HXLINE(  46)		this->b = b;
            	}

Dynamic Bytes_obj::__CreateEmpty() { return new Bytes_obj; }

void *Bytes_obj::_hx_vtable = 0;

Dynamic Bytes_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Bytes_obj > _hx_result = new Bytes_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Bytes_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5b931193;
}

int Bytes_obj::get(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_59_get)
HXDLIN(  59)		return ( (int)(this->b->__get(pos)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,get,return )

void Bytes_obj::set(int pos,int v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_76_set)
HXDLIN(  76)		this->b[pos] = ( (unsigned char)(v) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,set,(void))

void Bytes_obj::blit(int pos, ::haxe::io::Bytes src,int srcpos,int len){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_89_blit)
HXLINE(  91)		bool _hx_tmp;
HXDLIN(  91)		bool _hx_tmp1;
HXDLIN(  91)		bool _hx_tmp2;
HXDLIN(  91)		bool _hx_tmp3;
HXDLIN(  91)		if ((pos >= 0)) {
HXLINE(  91)			_hx_tmp3 = (srcpos < 0);
            		}
            		else {
HXLINE(  91)			_hx_tmp3 = true;
            		}
HXDLIN(  91)		if (!(_hx_tmp3)) {
HXLINE(  91)			_hx_tmp2 = (len < 0);
            		}
            		else {
HXLINE(  91)			_hx_tmp2 = true;
            		}
HXDLIN(  91)		if (!(_hx_tmp2)) {
HXLINE(  91)			_hx_tmp1 = ((pos + len) > this->length);
            		}
            		else {
HXLINE(  91)			_hx_tmp1 = true;
            		}
HXDLIN(  91)		if (!(_hx_tmp1)) {
HXLINE(  91)			_hx_tmp = ((srcpos + len) > src->length);
            		}
            		else {
HXLINE(  91)			_hx_tmp = true;
            		}
HXDLIN(  91)		if (_hx_tmp) {
HXLINE(  91)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 108)		this->b->blit(pos,src->b,srcpos,len);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Bytes_obj,blit,(void))

void Bytes_obj::fill(int pos,int len,int value){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_140_fill)
HXDLIN( 140)		 ::__hxcpp_memory_memset(this->b,pos,len,value);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Bytes_obj,fill,(void))

 ::haxe::io::Bytes Bytes_obj::sub(int pos,int len){
            	HX_GC_STACKFRAME(&_hx_pos_7de8773c9a509473_148_sub)
HXLINE( 150)		bool _hx_tmp;
HXDLIN( 150)		bool _hx_tmp1;
HXDLIN( 150)		if ((pos >= 0)) {
HXLINE( 150)			_hx_tmp1 = (len < 0);
            		}
            		else {
HXLINE( 150)			_hx_tmp1 = true;
            		}
HXDLIN( 150)		if (!(_hx_tmp1)) {
HXLINE( 150)			_hx_tmp = ((pos + len) > this->length);
            		}
            		else {
HXLINE( 150)			_hx_tmp = true;
            		}
HXDLIN( 150)		if (_hx_tmp) {
HXLINE( 150)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 171)		return  ::haxe::io::Bytes_obj::__alloc( HX_CTX ,len,this->b->slice(pos,(pos + len)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,sub,return )

int Bytes_obj::compare( ::haxe::io::Bytes other){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_210_compare)
HXDLIN( 210)		return this->b->memcmp(other->b);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,compare,return )

Float Bytes_obj::getDouble(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_229_getDouble)
HXLINE( 236)		bool _hx_tmp;
HXDLIN( 236)		if ((pos >= 0)) {
HXLINE( 236)			_hx_tmp = ((pos + 8) > this->length);
            		}
            		else {
HXLINE( 236)			_hx_tmp = true;
            		}
HXDLIN( 236)		if (_hx_tmp) {
HXLINE( 236)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 237)		return  ::__hxcpp_memory_get_double(this->b,pos);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,getDouble,return )

Float Bytes_obj::getFloat(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_251_getFloat)
HXLINE( 258)		bool _hx_tmp;
HXDLIN( 258)		if ((pos >= 0)) {
HXLINE( 258)			_hx_tmp = ((pos + 4) > this->length);
            		}
            		else {
HXLINE( 258)			_hx_tmp = true;
            		}
HXDLIN( 258)		if (_hx_tmp) {
HXLINE( 258)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 259)		return  ::__hxcpp_memory_get_float(this->b,pos);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,getFloat,return )

void Bytes_obj::setDouble(int pos,Float v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_273_setDouble)
HXLINE( 282)		bool _hx_tmp;
HXDLIN( 282)		if ((pos >= 0)) {
HXLINE( 282)			_hx_tmp = ((pos + 8) > this->length);
            		}
            		else {
HXLINE( 282)			_hx_tmp = true;
            		}
HXDLIN( 282)		if (_hx_tmp) {
HXLINE( 282)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 283)		 ::__hxcpp_memory_set_double(this->b,pos,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,setDouble,(void))

void Bytes_obj::setFloat(int pos,Float v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_299_setFloat)
HXLINE( 308)		bool _hx_tmp;
HXDLIN( 308)		if ((pos >= 0)) {
HXLINE( 308)			_hx_tmp = ((pos + 4) > this->length);
            		}
            		else {
HXLINE( 308)			_hx_tmp = true;
            		}
HXDLIN( 308)		if (_hx_tmp) {
HXLINE( 308)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 309)		 ::__hxcpp_memory_set_float(this->b,pos,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,setFloat,(void))

int Bytes_obj::getUInt16(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_323_getUInt16)
HXDLIN( 323)		return (( (int)(this->b->__get(pos)) ) | (( (int)(this->b->__get((pos + 1))) ) << 8));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,getUInt16,return )

void Bytes_obj::setUInt16(int pos,int v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_331_setUInt16)
HXLINE( 335)		this->b[pos] = ( (unsigned char)(v) );
HXLINE( 336)		this->b[(pos + 1)] = ( (unsigned char)((v >> 8)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,setUInt16,(void))

int Bytes_obj::getInt32(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_354_getInt32)
HXDLIN( 354)		return (((( (int)(this->b->__get(pos)) ) | (( (int)(this->b->__get((pos + 1))) ) << 8)) | (( (int)(this->b->__get((pos + 2))) ) << 16)) | (( (int)(this->b->__get((pos + 3))) ) << 24));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,getInt32,return )

 cpp::Int64Struct Bytes_obj::getInt64(int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_363_getInt64)
HXDLIN( 363)		int pos1 = (pos + 4);
HXDLIN( 363)		return _hx_int64_make((((( (int)(this->b->__get(pos1)) ) | (( (int)(this->b->__get((pos1 + 1))) ) << 8)) | (( (int)(this->b->__get((pos1 + 2))) ) << 16)) | (( (int)(this->b->__get((pos1 + 3))) ) << 24)),(((( (int)(this->b->__get(pos)) ) | (( (int)(this->b->__get((pos + 1))) ) << 8)) | (( (int)(this->b->__get((pos + 2))) ) << 16)) | (( (int)(this->b->__get((pos + 3))) ) << 24)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,getInt64,return )

void Bytes_obj::setInt32(int pos,int v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_370_setInt32)
HXLINE( 374)		this->b[pos] = ( (unsigned char)((v & 255)) );
HXLINE( 375)		this->b[(pos + 1)] = ( (unsigned char)(((v >> 8) & 255)) );
HXLINE( 376)		this->b[(pos + 2)] = ( (unsigned char)(((v >> 16) & 255)) );
HXLINE( 377)		this->b[(pos + 3)] = ( (unsigned char)((hx::UShr(v,24) & 255)) );
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,setInt32,(void))

void Bytes_obj::setInt64(int pos, cpp::Int64Struct v){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_385_setInt64)
HXLINE( 386)		{
HXLINE( 386)			int v1 = _hx_int64_low(v);
HXDLIN( 386)			this->b[pos] = ( (unsigned char)((v1 & 255)) );
HXDLIN( 386)			this->b[(pos + 1)] = ( (unsigned char)(((v1 >> 8) & 255)) );
HXDLIN( 386)			this->b[(pos + 2)] = ( (unsigned char)(((v1 >> 16) & 255)) );
HXDLIN( 386)			this->b[(pos + 3)] = ( (unsigned char)((hx::UShr(v1,24) & 255)) );
            		}
HXLINE( 387)		{
HXLINE( 387)			int pos1 = (pos + 4);
HXDLIN( 387)			int v2 = _hx_int64_high(v);
HXDLIN( 387)			this->b[pos1] = ( (unsigned char)((v2 & 255)) );
HXDLIN( 387)			this->b[(pos1 + 1)] = ( (unsigned char)(((v2 >> 8) & 255)) );
HXDLIN( 387)			this->b[(pos1 + 2)] = ( (unsigned char)(((v2 >> 16) & 255)) );
HXDLIN( 387)			this->b[(pos1 + 3)] = ( (unsigned char)((hx::UShr(v2,24) & 255)) );
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,setInt64,(void))

::String Bytes_obj::getString(int pos,int len, ::haxe::io::Encoding encoding){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_391_getString)
HXLINE( 393)		bool _hx_tmp;
HXDLIN( 393)		bool _hx_tmp1;
HXDLIN( 393)		if ((pos >= 0)) {
HXLINE( 393)			_hx_tmp1 = (len < 0);
            		}
            		else {
HXLINE( 393)			_hx_tmp1 = true;
            		}
HXDLIN( 393)		if (!(_hx_tmp1)) {
HXLINE( 393)			_hx_tmp = ((pos + len) > this->length);
            		}
            		else {
HXLINE( 393)			_hx_tmp = true;
            		}
HXDLIN( 393)		if (_hx_tmp) {
HXLINE( 393)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE( 402)		::String result = HX_("",00,00,00,00);
HXLINE( 403)		 ::__hxcpp_string_of_bytes(this->b,result,pos,len);
HXLINE( 404)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Bytes_obj,getString,return )

::String Bytes_obj::readString(int pos,int len){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_457_readString)
HXDLIN( 457)		return this->getString(pos,len,null());
            	}


HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,readString,return )

::String Bytes_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_480_toString)
HXDLIN( 480)		return this->getString(0,this->length,null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,toString,return )

::String Bytes_obj::toHex(){
            	HX_GC_STACKFRAME(&_hx_pos_7de8773c9a509473_485_toHex)
HXLINE( 486)		 ::StringBuf s =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE( 487)		::Array< ::Dynamic> chars = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 488)		::String str = HX_("0123456789abcdef",68,7e,d5,ef);
HXLINE( 489)		{
HXLINE( 489)			int _g = 0;
HXDLIN( 489)			int _g1 = str.length;
HXDLIN( 489)			while((_g < _g1)){
HXLINE( 489)				_g = (_g + 1);
HXDLIN( 489)				int i = (_g - 1);
HXLINE( 490)				chars->push(str.charCodeAt(i));
            			}
            		}
HXLINE( 491)		{
HXLINE( 491)			int _g2 = 0;
HXDLIN( 491)			int _g3 = this->length;
HXDLIN( 491)			while((_g2 < _g3)){
HXLINE( 491)				_g2 = (_g2 + 1);
HXDLIN( 491)				int i1 = (_g2 - 1);
HXLINE( 493)				int c = ( (int)(this->b->__get(i1)) );
HXLINE( 494)				{
HXLINE( 494)					int c1 = ( (int)(chars->__get((c >> 4))) );
HXDLIN( 494)					{
HXLINE( 494)						if (hx::IsNull( s->charBuf )) {
HXLINE( 494)							s->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN( 494)						s->charBuf->push(c1);
            					}
            				}
HXLINE( 495)				{
HXLINE( 495)					int c2 = ( (int)(chars->__get((c & 15))) );
HXDLIN( 495)					{
HXLINE( 495)						if (hx::IsNull( s->charBuf )) {
HXLINE( 495)							s->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN( 495)						s->charBuf->push(c2);
            					}
            				}
            			}
            		}
HXLINE( 497)		return s->toString();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,toHex,return )

::Array< unsigned char > Bytes_obj::getData(){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_502_getData)
HXDLIN( 502)		return this->b;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,getData,return )

 ::haxe::io::Bytes Bytes_obj::alloc(int length){
            	HX_GC_STACKFRAME(&_hx_pos_7de8773c9a509473_506_alloc)
HXLINE( 514)		::Array< unsigned char > a = ::Array_obj< unsigned char >::__new();
HXLINE( 515)		if ((length > 0)) {
HXLINE( 515)			_hx_array_set_size_exact(a,length);
            		}
HXLINE( 516)		return  ::haxe::io::Bytes_obj::__alloc( HX_CTX ,length,a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,alloc,return )

 ::haxe::io::Bytes Bytes_obj::ofString(::String s, ::haxe::io::Encoding encoding){
            	HX_GC_STACKFRAME(&_hx_pos_7de8773c9a509473_536_ofString)
HXLINE( 544)		::Array< unsigned char > a = ::Array_obj< unsigned char >::__new();
HXLINE( 545)		 ::__hxcpp_bytes_of_string(a,s);
HXLINE( 546)		return  ::haxe::io::Bytes_obj::__alloc( HX_CTX ,a->length,a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,ofString,return )

 ::haxe::io::Bytes Bytes_obj::ofData(::Array< unsigned char > b){
            	HX_GC_STACKFRAME(&_hx_pos_7de8773c9a509473_606_ofData)
HXDLIN( 606)		return  ::haxe::io::Bytes_obj::__alloc( HX_CTX ,b->length,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,ofData,return )

 ::haxe::io::Bytes Bytes_obj::ofHex(::String s){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_615_ofHex)
HXLINE( 616)		int len = s.length;
HXLINE( 617)		if (((len & 1) != 0)) {
HXLINE( 617)			HX_STACK_DO_THROW(HX_("Not a hex string (odd number of digits)",96,4b,d1,a4));
            		}
HXLINE( 618)		 ::haxe::io::Bytes ret = ::haxe::io::Bytes_obj::alloc((len >> 1));
HXLINE( 619)		{
HXLINE( 619)			int _g = 0;
HXDLIN( 619)			int _g1 = ret->length;
HXDLIN( 619)			while((_g < _g1)){
HXLINE( 619)				_g = (_g + 1);
HXDLIN( 619)				int i = (_g - 1);
HXLINE( 621)				int high = s.cca((i * 2));
HXLINE( 622)				int low = s.cca(((i * 2) + 1));
HXLINE( 623)				high = ((high & 15) + (((high & 64) >> 6) * 9));
HXLINE( 624)				low = ((low & 15) + (((low & 64) >> 6) * 9));
HXLINE( 625)				ret->b[i] = ( (unsigned char)((((high << 4) | low) & 255)) );
            			}
            		}
HXLINE( 628)		return ret;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,ofHex,return )

int Bytes_obj::fastGet(::Array< unsigned char > b,int pos){
            	HX_STACKFRAME(&_hx_pos_7de8773c9a509473_642_fastGet)
HXDLIN( 642)		return ( (int)(_hx_array_unsafe_get(b,pos)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Bytes_obj,fastGet,return )


hx::ObjectPtr< Bytes_obj > Bytes_obj::__new(int length,::Array< unsigned char > b) {
	hx::ObjectPtr< Bytes_obj > __this = new Bytes_obj();
	__this->__construct(length,b);
	return __this;
}

hx::ObjectPtr< Bytes_obj > Bytes_obj::__alloc(hx::Ctx *_hx_ctx,int length,::Array< unsigned char > b) {
	Bytes_obj *__this = (Bytes_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Bytes_obj), true, "haxe.io.Bytes"));
	*(void **)__this = Bytes_obj::_hx_vtable;
	__this->__construct(length,b);
	return __this;
}

Bytes_obj::Bytes_obj()
{
}

void Bytes_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Bytes);
	HX_MARK_MEMBER_NAME(length,"length");
	HX_MARK_MEMBER_NAME(b,"b");
	HX_MARK_END_CLASS();
}

void Bytes_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(length,"length");
	HX_VISIT_MEMBER_NAME(b,"b");
}

hx::Val Bytes_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"b") ) { return hx::Val( b ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		if (HX_FIELD_EQ(inName,"sub") ) { return hx::Val( sub_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"blit") ) { return hx::Val( blit_dyn() ); }
		if (HX_FIELD_EQ(inName,"fill") ) { return hx::Val( fill_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toHex") ) { return hx::Val( toHex_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( length ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"compare") ) { return hx::Val( compare_dyn() ); }
		if (HX_FIELD_EQ(inName,"getData") ) { return hx::Val( getData_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getFloat") ) { return hx::Val( getFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFloat") ) { return hx::Val( setFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInt32") ) { return hx::Val( getInt32_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInt64") ) { return hx::Val( getInt64_dyn() ); }
		if (HX_FIELD_EQ(inName,"setInt32") ) { return hx::Val( setInt32_dyn() ); }
		if (HX_FIELD_EQ(inName,"setInt64") ) { return hx::Val( setInt64_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getDouble") ) { return hx::Val( getDouble_dyn() ); }
		if (HX_FIELD_EQ(inName,"setDouble") ) { return hx::Val( setDouble_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUInt16") ) { return hx::Val( getUInt16_dyn() ); }
		if (HX_FIELD_EQ(inName,"setUInt16") ) { return hx::Val( setUInt16_dyn() ); }
		if (HX_FIELD_EQ(inName,"getString") ) { return hx::Val( getString_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"readString") ) { return hx::Val( readString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Bytes_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"alloc") ) { outValue = alloc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ofHex") ) { outValue = ofHex_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"ofData") ) { outValue = ofData_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fastGet") ) { outValue = fastGet_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"ofString") ) { outValue = ofString_dyn(); return true; }
	}
	return false;
}

hx::Val Bytes_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"b") ) { b=inValue.Cast< ::Array< unsigned char > >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { length=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Bytes_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("length",e6,94,07,9f));
	outFields->push(HX_("b",62,00,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Bytes_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(Bytes_obj,length),HX_("length",e6,94,07,9f)},
	{hx::fsObject /* ::Array< unsigned char > */ ,(int)offsetof(Bytes_obj,b),HX_("b",62,00,00,00)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Bytes_obj_sStaticStorageInfo = 0;
#endif

static ::String Bytes_obj_sMemberFields[] = {
	HX_("length",e6,94,07,9f),
	HX_("b",62,00,00,00),
	HX_("get",96,80,4e,00),
	HX_("set",a2,9b,57,00),
	HX_("blit",35,38,19,41),
	HX_("fill",83,ce,bb,43),
	HX_("sub",80,a9,57,00),
	HX_("compare",a5,18,69,83),
	HX_("getDouble",47,b4,21,af),
	HX_("getFloat",26,d5,6d,62),
	HX_("setDouble",53,a0,72,92),
	HX_("setFloat",9a,2e,cb,10),
	HX_("getUInt16",15,c2,65,95),
	HX_("setUInt16",21,ae,b6,78),
	HX_("getInt32",d8,a2,f7,1d),
	HX_("getInt64",77,a5,f7,1d),
	HX_("setInt32",4c,fc,54,cc),
	HX_("setInt64",eb,fe,54,cc),
	HX_("getString",07,b2,86,8d),
	HX_("readString",c7,0c,ac,0a),
	HX_("toString",ac,d0,6e,38),
	HX_("toHex",20,f4,10,14),
	HX_("getData",e0,05,e6,14),
	::String(null()) };

hx::Class Bytes_obj::__mClass;

static ::String Bytes_obj_sStaticFields[] = {
	HX_("alloc",75,a4,93,21),
	HX_("ofString",48,69,31,a4),
	HX_("ofData",e1,ba,b8,49),
	HX_("ofHex",04,22,1d,2d),
	HX_("fastGet",5a,ff,22,de),
	::String(null())
};

void Bytes_obj::__register()
{
	Bytes_obj _hx_dummy;
	Bytes_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.io.Bytes",0b,53,6f,9f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Bytes_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Bytes_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Bytes_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Bytes_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Bytes_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Bytes_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace io
