// Generated by Haxe 4.0.0-rc.2+77068e1
#include <hxcpp.h>

#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IntVector
#include <openfl/_Vector/IntVector.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1369_new,"openfl._Vector.IntVector","new",0x6313ae9a,"openfl._Vector.IntVector.new","openfl/Vector.hx",1369,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1383_concat,"openfl._Vector.IntVector","concat",0x4a254b1a,"openfl._Vector.IntVector.concat","openfl/Vector.hx",1383,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1404_copy,"openfl._Vector.IntVector","copy",0x46e7503b,"openfl._Vector.IntVector.copy","openfl/Vector.hx",1404,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1409_get,"openfl._Vector.IntVector","get",0x630e5ed0,"openfl._Vector.IntVector.get","openfl/Vector.hx",1409,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1413_indexOf,"openfl._Vector.IntVector","indexOf",0x6903cc03,"openfl._Vector.IntVector.indexOf","openfl/Vector.hx",1413,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1427_insertAt,"openfl._Vector.IntVector","insertAt",0x75cdcc12,"openfl._Vector.IntVector.insertAt","openfl/Vector.hx",1427,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1435_iterator,"openfl._Vector.IntVector","iterator",0x47489974,"openfl._Vector.IntVector.iterator","openfl/Vector.hx",1435,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1440_join,"openfl._Vector.IntVector","join",0x4b87c870,"openfl._Vector.IntVector.join","openfl/Vector.hx",1440,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1444_lastIndexOf,"openfl._Vector.IntVector","lastIndexOf",0x72eaa54d,"openfl._Vector.IntVector.lastIndexOf","openfl/Vector.hx",1444,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1458_pop,"openfl._Vector.IntVector","pop",0x63153bcb,"openfl._Vector.IntVector.pop","openfl/Vector.hx",1458,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1470_push,"openfl._Vector.IntVector","push",0x4f83a660,"openfl._Vector.IntVector.push","openfl/Vector.hx",1470,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1481_removeAt,"openfl._Vector.IntVector","removeAt",0x60c9bddd,"openfl._Vector.IntVector.removeAt","openfl/Vector.hx",1481,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1491_reverse,"openfl._Vector.IntVector","reverse",0xa340bc5c,"openfl._Vector.IntVector.reverse","openfl/Vector.hx",1491,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1498_set,"openfl._Vector.IntVector","set",0x631779dc,"openfl._Vector.IntVector.set","openfl/Vector.hx",1498,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1510_shift,"openfl._Vector.IntVector","shift",0xf5424d3c,"openfl._Vector.IntVector.shift","openfl/Vector.hx",1510,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1521_slice,"openfl._Vector.IntVector","slice",0xf7e7250c,"openfl._Vector.IntVector.slice","openfl/Vector.hx",1521,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1528_sort,"openfl._Vector.IntVector","sort",0x517abbe4,"openfl._Vector.IntVector.sort","openfl/Vector.hx",1528,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1533_splice,"openfl._Vector.IntVector","splice",0x41f3c782,"openfl._Vector.IntVector.splice","openfl/Vector.hx",1533,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1539_toJSON,"openfl._Vector.IntVector","toJSON",0xfe5e8b29,"openfl._Vector.IntVector.toJSON","openfl/Vector.hx",1539,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1544_toString,"openfl._Vector.IntVector","toString",0xec1d2032,"openfl._Vector.IntVector.toString","openfl/Vector.hx",1544,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1549_unshift,"openfl._Vector.IntVector","unshift",0x00f866c3,"openfl._Vector.IntVector.unshift","openfl/Vector.hx",1549,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1558_get_length,"openfl._Vector.IntVector","get_length",0x4714c1b5,"openfl._Vector.IntVector.get_length","openfl/Vector.hx",1558,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1562_set_length,"openfl._Vector.IntVector","set_length",0x4a926029,"openfl._Vector.IntVector.set_length","openfl/Vector.hx",1562,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_0ca25ed6048e1cbf_1361_boot,"openfl._Vector.IntVector","boot",0x463e18b8,"openfl._Vector.IntVector.boot","openfl/Vector.hx",1361,0x4a01873c)
namespace openfl{
namespace _Vector{

void IntVector_obj::__construct(hx::Null< int >  __o_length,hx::Null< bool >  __o_fixed,::Array< int > array){
            		int length = __o_length.Default(0);
            		bool fixed = __o_fixed.Default(false);
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1369_new)
HXLINE(1370)		if (hx::IsNull( array )) {
HXLINE(1370)			array = ::Array_obj< int >::__new();
            		}
HXLINE(1371)		this->_hx___array = array;
HXLINE(1373)		if ((length > 0)) {
HXLINE(1375)			this->set_length(length);
            		}
HXLINE(1378)		this->fixed = fixed;
            	}

Dynamic IntVector_obj::__CreateEmpty() { return new IntVector_obj; }

void *IntVector_obj::_hx_vtable = 0;

Dynamic IntVector_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< IntVector_obj > _hx_result = new IntVector_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool IntVector_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x56650740;
}

static ::openfl::_Vector::IVector_obj _hx_openfl__Vector_IntVector__hx_openfl__Vector_IVector= {
	( int (hx::Object::*)(int))&::openfl::_Vector::IntVector_obj::set_length,
	( int (hx::Object::*)())&::openfl::_Vector::IntVector_obj::get_length,
	( ::Dynamic (hx::Object::*)(::Dynamic))&::openfl::_Vector::IntVector_obj::concat,
	( ::Dynamic (hx::Object::*)())&::openfl::_Vector::IntVector_obj::copy,
	(  ::Dynamic (hx::Object::*)(int))&::openfl::_Vector::IntVector_obj::get_c4bfee54,
	( int (hx::Object::*)( ::Dynamic,hx::Null< int > ))&::openfl::_Vector::IntVector_obj::indexOf_44372b40,
	( void (hx::Object::*)(int, ::Dynamic))&::openfl::_Vector::IntVector_obj::insertAt_5d1f93e2,
	(  ::Dynamic (hx::Object::*)())&::openfl::_Vector::IntVector_obj::iterator,
	( ::String (hx::Object::*)(::String))&::openfl::_Vector::IntVector_obj::join,
	( int (hx::Object::*)( ::Dynamic, ::Dynamic))&::openfl::_Vector::IntVector_obj::lastIndexOf_02dfccf1,
	(  ::Dynamic (hx::Object::*)())&::openfl::_Vector::IntVector_obj::pop,
	( int (hx::Object::*)( ::Dynamic))&::openfl::_Vector::IntVector_obj::push_9c73657a,
	(  ::Dynamic (hx::Object::*)(int))&::openfl::_Vector::IntVector_obj::removeAt_c4bfee54,
	( ::Dynamic (hx::Object::*)())&::openfl::_Vector::IntVector_obj::reverse,
	(  ::Dynamic (hx::Object::*)(int, ::Dynamic))&::openfl::_Vector::IntVector_obj::set_15539e57,
	(  ::Dynamic (hx::Object::*)())&::openfl::_Vector::IntVector_obj::shift,
	( ::Dynamic (hx::Object::*)(hx::Null< int > , ::Dynamic))&::openfl::_Vector::IntVector_obj::slice,
	( void (hx::Object::*)( ::Dynamic))&::openfl::_Vector::IntVector_obj::sort,
	( ::Dynamic (hx::Object::*)(int,int))&::openfl::_Vector::IntVector_obj::splice,
	( ::String (hx::Object::*)())&::openfl::_Vector::IntVector_obj::toString,
	( void (hx::Object::*)( ::Dynamic))&::openfl::_Vector::IntVector_obj::unshift_489e4d05,
};

void IntVector_obj::unshift_489e4d05( ::Dynamic value) {
			unshift(value);
}

 ::Dynamic IntVector_obj::set_15539e57(int index, ::Dynamic value) {
			return set(index,value);
}

 ::Dynamic IntVector_obj::removeAt_c4bfee54(int index) {
			return removeAt(index);
}

int IntVector_obj::push_9c73657a( ::Dynamic value) {
			return push(value);
}

int IntVector_obj::lastIndexOf_02dfccf1( ::Dynamic x, ::Dynamic from) {
			return lastIndexOf(x,from);
}

void IntVector_obj::insertAt_5d1f93e2(int index, ::Dynamic element) {
			insertAt(index,element);
}

int IntVector_obj::indexOf_44372b40( ::Dynamic x,hx::Null< int >  from) {
			return indexOf(x,from);
}

 ::Dynamic IntVector_obj::get_c4bfee54(int index) {
			return get(index);
}
void *IntVector_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x45e7caba: return &_hx_openfl__Vector_IntVector__hx_openfl__Vector_IVector;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

::Dynamic IntVector_obj::concat(::Dynamic a){
            	HX_GC_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1383_concat)
HXDLIN(1383)		if (hx::IsNull( a )) {
HXLINE(1385)			return  ::openfl::_Vector::IntVector_obj::__alloc( HX_CTX ,0,false,this->_hx___array->copy());
            		}
            		else {
HXLINE(1389)			 ::openfl::_Vector::IntVector other = ( ( ::openfl::_Vector::IntVector)(a) );
HXLINE(1391)			if ((other->_hx___array->length > 0)) {
HXLINE(1393)				return  ::openfl::_Vector::IntVector_obj::__alloc( HX_CTX ,0,false,this->_hx___array->concat(other->_hx___array));
            			}
            			else {
HXLINE(1397)				return  ::openfl::_Vector::IntVector_obj::__alloc( HX_CTX ,0,false,this->_hx___array->copy());
            			}
            		}
HXLINE(1383)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(IntVector_obj,concat,return )

::Dynamic IntVector_obj::copy(){
            	HX_GC_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1404_copy)
HXDLIN(1404)		bool _hx_tmp = this->fixed;
HXDLIN(1404)		return  ::openfl::_Vector::IntVector_obj::__alloc( HX_CTX ,0,_hx_tmp,this->_hx___array->copy());
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntVector_obj,copy,return )

int IntVector_obj::get(int index){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1409_get)
HXDLIN(1409)		return this->_hx___array->__get(index);
            	}


HX_DEFINE_DYNAMIC_FUNC1(IntVector_obj,get,return )

int IntVector_obj::indexOf(int x,hx::Null< int >  __o_from){
            		int from = __o_from.Default(0);
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1413_indexOf)
HXLINE(1414)		{
HXLINE(1414)			int _g = from;
HXDLIN(1414)			int _g1 = this->_hx___array->length;
HXDLIN(1414)			while((_g < _g1)){
HXLINE(1414)				_g = (_g + 1);
HXDLIN(1414)				int i = (_g - 1);
HXLINE(1416)				if ((this->_hx___array->__get(i) == x)) {
HXLINE(1418)					return i;
            				}
            			}
            		}
HXLINE(1422)		return -1;
            	}


HX_DEFINE_DYNAMIC_FUNC2(IntVector_obj,indexOf,return )

void IntVector_obj::insertAt(int index,int element){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1427_insertAt)
HXDLIN(1427)		bool _hx_tmp;
HXDLIN(1427)		if (!(!(this->fixed))) {
HXDLIN(1427)			_hx_tmp = (index < this->_hx___array->length);
            		}
            		else {
HXDLIN(1427)			_hx_tmp = true;
            		}
HXDLIN(1427)		if (_hx_tmp) {
HXLINE(1429)			this->_hx___array->insert(index,element);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(IntVector_obj,insertAt,(void))

 ::Dynamic IntVector_obj::iterator(){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1435_iterator)
HXDLIN(1435)		return this->_hx___array->iterator();
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntVector_obj,iterator,return )

::String IntVector_obj::join(::String __o_sep){
            		::String sep = __o_sep;
            		if (hx::IsNull(__o_sep)) sep = HX_(",",2c,00,00,00);
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1440_join)
HXDLIN(1440)		return this->_hx___array->join(sep);
            	}


HX_DEFINE_DYNAMIC_FUNC1(IntVector_obj,join,return )

int IntVector_obj::lastIndexOf(int x, ::Dynamic from){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1444_lastIndexOf)
HXLINE(1445)		 ::Dynamic i;
HXDLIN(1445)		bool i1;
HXDLIN(1445)		if (hx::IsNotNull( from )) {
HXLINE(1445)			i1 = hx::IsGreaterEq( from,this->_hx___array->length );
            		}
            		else {
HXLINE(1445)			i1 = true;
            		}
HXDLIN(1445)		if (i1) {
HXLINE(1445)			i = (this->_hx___array->length - 1);
            		}
            		else {
HXLINE(1445)			i = from;
            		}
HXLINE(1447)		while(hx::IsGreaterEq( i,0 )){
HXLINE(1449)			if ((this->_hx___array->__get(( (int)(i) )) == x)) {
HXLINE(1449)				return ( (int)(i) );
            			}
HXLINE(1450)			i = (( (int)(i) ) - 1);
            		}
HXLINE(1453)		return -1;
            	}


HX_DEFINE_DYNAMIC_FUNC2(IntVector_obj,lastIndexOf,return )

 ::Dynamic IntVector_obj::pop(){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1458_pop)
HXDLIN(1458)		if (!(this->fixed)) {
HXLINE(1460)			return this->_hx___array->pop();
            		}
            		else {
HXLINE(1464)			return null();
            		}
HXLINE(1458)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntVector_obj,pop,return )

int IntVector_obj::push(int x){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1470_push)
HXDLIN(1470)		if (!(this->fixed)) {
HXLINE(1472)			return this->_hx___array->push(x);
            		}
            		else {
HXLINE(1476)			return this->_hx___array->length;
            		}
HXLINE(1470)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(IntVector_obj,push,return )

int IntVector_obj::removeAt(int index){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1481_removeAt)
HXLINE(1482)		bool _hx_tmp;
HXDLIN(1482)		if (!(!(this->fixed))) {
HXLINE(1482)			_hx_tmp = (index < this->_hx___array->length);
            		}
            		else {
HXLINE(1482)			_hx_tmp = true;
            		}
HXDLIN(1482)		if (_hx_tmp) {
HXLINE(1484)			return this->_hx___array->splice(index,1)->__get(0);
            		}
HXLINE(1487)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(IntVector_obj,removeAt,return )

::Dynamic IntVector_obj::reverse(){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1491_reverse)
HXLINE(1492)		this->_hx___array->reverse();
HXLINE(1493)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntVector_obj,reverse,return )

int IntVector_obj::set(int index,int value){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1498_set)
HXDLIN(1498)		bool _hx_tmp;
HXDLIN(1498)		if (!(!(this->fixed))) {
HXDLIN(1498)			_hx_tmp = (index < this->_hx___array->length);
            		}
            		else {
HXDLIN(1498)			_hx_tmp = true;
            		}
HXDLIN(1498)		if (_hx_tmp) {
HXLINE(1500)			return (this->_hx___array[index] = value);
            		}
            		else {
HXLINE(1504)			return value;
            		}
HXLINE(1498)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC2(IntVector_obj,set,return )

 ::Dynamic IntVector_obj::shift(){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1510_shift)
HXDLIN(1510)		if (!(this->fixed)) {
HXLINE(1512)			return this->_hx___array->shift();
            		}
            		else {
HXLINE(1516)			return null();
            		}
HXLINE(1510)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntVector_obj,shift,return )

::Dynamic IntVector_obj::slice(hx::Null< int >  __o_startIndex, ::Dynamic endIndex){
            		int startIndex = __o_startIndex.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1521_slice)
HXLINE(1522)		if (hx::IsNull( endIndex )) {
HXLINE(1522)			endIndex = 16777215;
            		}
HXLINE(1523)		return  ::openfl::_Vector::IntVector_obj::__alloc( HX_CTX ,0,false,this->_hx___array->slice(startIndex,endIndex));
            	}


HX_DEFINE_DYNAMIC_FUNC2(IntVector_obj,slice,return )

void IntVector_obj::sort( ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1528_sort)
HXDLIN(1528)		this->_hx___array->sort(f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(IntVector_obj,sort,(void))

::Dynamic IntVector_obj::splice(int pos,int len){
            	HX_GC_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1533_splice)
HXDLIN(1533)		return  ::openfl::_Vector::IntVector_obj::__alloc( HX_CTX ,0,false,this->_hx___array->splice(pos,len));
            	}


HX_DEFINE_DYNAMIC_FUNC2(IntVector_obj,splice,return )

 ::Dynamic IntVector_obj::toJSON(){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1539_toJSON)
HXDLIN(1539)		return this->_hx___array;
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntVector_obj,toJSON,return )

::String IntVector_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1544_toString)
HXDLIN(1544)		if (hx::IsNotNull( this->_hx___array )) {
HXDLIN(1544)			return this->_hx___array->toString();
            		}
            		else {
HXDLIN(1544)			return null();
            		}
HXDLIN(1544)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntVector_obj,toString,return )

void IntVector_obj::unshift(int x){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1549_unshift)
HXDLIN(1549)		if (!(this->fixed)) {
HXLINE(1551)			this->_hx___array->unshift(x);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(IntVector_obj,unshift,(void))

int IntVector_obj::get_length(){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1558_get_length)
HXDLIN(1558)		return this->_hx___array->length;
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntVector_obj,get_length,return )

int IntVector_obj::set_length(int value){
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1562_set_length)
HXLINE(1563)		if (!(this->fixed)) {
HXLINE(1566)			_hx_array_set_size_exact(this->_hx___array,value);
            		}
HXLINE(1588)		return this->_hx___array->length;
            	}


HX_DEFINE_DYNAMIC_FUNC1(IntVector_obj,set_length,return )


hx::ObjectPtr< IntVector_obj > IntVector_obj::__new(hx::Null< int >  __o_length,hx::Null< bool >  __o_fixed,::Array< int > array) {
	hx::ObjectPtr< IntVector_obj > __this = new IntVector_obj();
	__this->__construct(__o_length,__o_fixed,array);
	return __this;
}

hx::ObjectPtr< IntVector_obj > IntVector_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< int >  __o_length,hx::Null< bool >  __o_fixed,::Array< int > array) {
	IntVector_obj *__this = (IntVector_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(IntVector_obj), true, "openfl._Vector.IntVector"));
	*(void **)__this = IntVector_obj::_hx_vtable;
	__this->__construct(__o_length,__o_fixed,array);
	return __this;
}

IntVector_obj::IntVector_obj()
{
}

void IntVector_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(IntVector);
	HX_MARK_MEMBER_NAME(fixed,"fixed");
	HX_MARK_MEMBER_NAME(_hx___array,"__array");
	HX_MARK_END_CLASS();
}

void IntVector_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(fixed,"fixed");
	HX_VISIT_MEMBER_NAME(_hx___array,"__array");
}

hx::Val IntVector_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"pop") ) { return hx::Val( pop_dyn() ); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"copy") ) { return hx::Val( copy_dyn() ); }
		if (HX_FIELD_EQ(inName,"join") ) { return hx::Val( join_dyn() ); }
		if (HX_FIELD_EQ(inName,"push") ) { return hx::Val( push_dyn() ); }
		if (HX_FIELD_EQ(inName,"sort") ) { return hx::Val( sort_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"fixed") ) { return hx::Val( fixed ); }
		if (HX_FIELD_EQ(inName,"shift") ) { return hx::Val( shift_dyn() ); }
		if (HX_FIELD_EQ(inName,"slice") ) { return hx::Val( slice_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_length() ); }
		if (HX_FIELD_EQ(inName,"concat") ) { return hx::Val( concat_dyn() ); }
		if (HX_FIELD_EQ(inName,"splice") ) { return hx::Val( splice_dyn() ); }
		if (HX_FIELD_EQ(inName,"toJSON") ) { return hx::Val( toJSON_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"__array") ) { return hx::Val( _hx___array ); }
		if (HX_FIELD_EQ(inName,"indexOf") ) { return hx::Val( indexOf_dyn() ); }
		if (HX_FIELD_EQ(inName,"reverse") ) { return hx::Val( reverse_dyn() ); }
		if (HX_FIELD_EQ(inName,"unshift") ) { return hx::Val( unshift_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"insertAt") ) { return hx::Val( insertAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"iterator") ) { return hx::Val( iterator_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeAt") ) { return hx::Val( removeAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { return hx::Val( get_length_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_length") ) { return hx::Val( set_length_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"lastIndexOf") ) { return hx::Val( lastIndexOf_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val IntVector_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"fixed") ) { fixed=inValue.Cast< bool >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_length(inValue.Cast< int >()) ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"__array") ) { _hx___array=inValue.Cast< ::Array< int > >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void IntVector_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("fixed",74,f9,a1,00));
	outFields->push(HX_("length",e6,94,07,9f));
	outFields->push(HX_("__array",79,c6,ed,8f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo IntVector_obj_sMemberStorageInfo[] = {
	{hx::fsBool,(int)offsetof(IntVector_obj,fixed),HX_("fixed",74,f9,a1,00)},
	{hx::fsObject /* ::Array< int > */ ,(int)offsetof(IntVector_obj,_hx___array),HX_("__array",79,c6,ed,8f)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *IntVector_obj_sStaticStorageInfo = 0;
#endif

static ::String IntVector_obj_sMemberFields[] = {
	HX_("fixed",74,f9,a1,00),
	HX_("__array",79,c6,ed,8f),
	HX_("concat",14,09,d0,c7),
	HX_("copy",b5,bb,c4,41),
	HX_("get",96,80,4e,00),
	HX_("indexOf",c9,48,bf,e0),
	HX_("insertAt",8c,7c,1f,c2),
	HX_("iterator",ee,49,9a,93),
	HX_("join",ea,33,65,46),
	HX_("lastIndexOf",13,fd,6a,95),
	HX_("pop",91,5d,55,00),
	HX_("push",da,11,61,4a),
	HX_("removeAt",57,6e,1b,ad),
	HX_("reverse",22,39,fc,1a),
	HX_("set",a2,9b,57,00),
	HX_("shift",82,ec,22,7c),
	HX_("slice",52,c4,c7,7e),
	HX_("sort",5e,27,58,4c),
	HX_("splice",7c,85,9e,bf),
	HX_("toJSON",23,49,09,7c),
	HX_("toString",ac,d0,6e,38),
	HX_("unshift",89,e3,b3,78),
	HX_("get_length",af,04,8f,8f),
	HX_("set_length",23,a3,0c,93),
	::String(null()) };

hx::Class IntVector_obj::__mClass;

void IntVector_obj::__register()
{
	IntVector_obj _hx_dummy;
	IntVector_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("openfl._Vector.IntVector",a8,19,86,49);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(IntVector_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< IntVector_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IntVector_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IntVector_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void IntVector_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_0ca25ed6048e1cbf_1361_boot)
HXDLIN(1361)		__mClass->__meta__ =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("fields",79,8e,8e,80), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("toJSON",23,49,09,7c), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("SuppressWarnings",0c,d3,d2,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("checkstyle:Dynamic",ce,ea,47,3c)))))))
            			->setFixed(1,HX_("obj",f7,8f,54,00), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("SuppressWarnings",0c,d3,d2,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("checkstyle:FieldDocComment",70,56,1b,20))))));
            	}
}

} // end namespace openfl
} // end namespace _Vector
