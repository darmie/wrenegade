// Generated by Haxe 4.0.0-rc.2+77068e1
#ifndef INCLUDED_lime__internal_unifill__CodePoint_CodePoint_Impl_
#define INCLUDED_lime__internal_unifill__CodePoint_CodePoint_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(lime,_internal,unifill,_CodePoint,CodePoint_Impl_)

namespace lime{
namespace _internal{
namespace unifill{
namespace _CodePoint{


class HXCPP_CLASS_ATTRIBUTES CodePoint_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef CodePoint_Impl__obj OBJ_;
		CodePoint_Impl__obj();

	public:
		enum { _hx_ClassId = 0x478d2bb3 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime._internal.unifill._CodePoint.CodePoint_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"lime._internal.unifill._CodePoint.CodePoint_Impl_"); }

		hx::ObjectPtr< CodePoint_Impl__obj > __new() {
			hx::ObjectPtr< CodePoint_Impl__obj > __this = new CodePoint_Impl__obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< CodePoint_Impl__obj > __alloc(hx::Ctx *_hx_ctx) {
			CodePoint_Impl__obj *__this = (CodePoint_Impl__obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(CodePoint_Impl__obj), false, "lime._internal.unifill._CodePoint.CodePoint_Impl_"));
			*(void **)__this = CodePoint_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CodePoint_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CodePoint_Impl_",a3,e0,78,79); }

		static int fromInt(int code);
		static ::Dynamic fromInt_dyn();

		static ::String cons(int a,::String b);
		static ::Dynamic cons_dyn();

		static ::String snoc(::String a,int b);
		static ::Dynamic snoc_dyn();

		static int addInt(int a,int b);
		static ::Dynamic addInt_dyn();

		static int sub(int a,int b);
		static ::Dynamic sub_dyn();

		static int subInt(int a,int b);
		static ::Dynamic subInt_dyn();

		static int _new(int code);
		static ::Dynamic _new_dyn();

		static ::String toString(int this1);
		static ::Dynamic toString_dyn();

		static int toInt(int this1);
		static ::Dynamic toInt_dyn();

};

} // end namespace lime
} // end namespace _internal
} // end namespace unifill
} // end namespace _CodePoint

#endif /* INCLUDED_lime__internal_unifill__CodePoint_CodePoint_Impl_ */ 
